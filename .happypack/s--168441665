'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _TogglePanel = require('./TogglePanel.css');

var _TogglePanel2 = _interopRequireDefault(_TogglePanel);

var _chevronRight = require('react-icons/md/chevron-right');

var _chevronRight2 = _interopRequireDefault(_chevronRight);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/components/Panels/TogglePanel/TogglePanel.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/components/Panels/TogglePanel/TogglePanel.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
} /**************************************************************
    <TogglePanel>
      <div className="layout-row flex layout-align-start-center">
        <div className="flex">Header Content</div>
      </div>
      <div>
        Panel Content
      </div>
    </TogglePanel>
  **************************************************************/

exports.default = _wrapComponent('_component')(_react3.default.createClass({
  getInitialState: function getInitialState() {
    return {
      isOpen: false
    };
  },
  toggle: function toggle(toState) {
    this.setState({ isOpen: toState === null ? !this.state.isOpen : toState });
  },
  render: function render() {
    var _this = this;

    var getContent = function getContent() {
      if (_this.state.isOpen) {
        return _react3.default.createElement(
          'div',
          { className: _TogglePanel2.default.content },
          _this.props.children[2]
        );
      }
    };
    return _react3.default.createElement(
      'div',
      null,
      _react3.default.createElement(
        'div',
        { className: _TogglePanel2.default.titleBar + ' layout-row layout-align-start-center' },
        _react3.default.createElement(_chevronRight2.default, { onClick: function onClick() {
            return _this.toggle(null);
          }, className: (0, _classnames2.default)(_TogglePanel2.default.toggleIcon, _defineProperty({}, _TogglePanel2.default.toggleIconActive, this.state.isOpen)), size: '22' }),
        _react3.default.createElement(
          'div',
          { className: 'flex layout-row layout-align-start-center' },
          _react3.default.createElement(
            'div',
            { className: 'flex', onClick: function onClick() {
                return _this.toggle(null);
              } },
            this.props.children[0]
          ),
          this.props.children[1]
        )
      ),
      getContent()
    );
  }
}));
module.exports = exports['default'];