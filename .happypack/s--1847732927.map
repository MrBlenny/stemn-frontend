{"version":3,"sources":["app\\renderer\\main\\pages\\ProjectPage\\ProjectSettingsPage\\ProjectSettingsTasksPage\\ProjectSettingsTasksPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;;IAAY,e;;AACZ;;IAAY,Y;;AAIZ;;AAGA;;;;AACA;;;;AAGA;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EApBA;;;AAIA;;;AAIA;;;AAIA;;;AAIA;;;AAMA;;AAEA,IAAM,0CAAa,gBAAM,WAAN,CAAkB;AAAA;AACnC,SADmC,mBAC3B,SAD2B,EAChB,SADgB,EACN;AAC3B,QAAG,CAAC,SAAD,IAAc,UAAU,KAAV,CAAgB,IAAhB,CAAqB,GAArB,KAA6B,UAAU,KAAV,CAAgB,IAAhB,CAAqB,GAAnE,EAAuE;AACrE,gBAAU,QAAV,CACE,wBAAQ,IAAR,CAAgB,UAAU,UAA1B,oBAAqD,UAAU,KAAV,CAAgB,IAAhB,CAAqB,MAA1E,CADF;AAGD;AACF,GAPkC;AAQnC,oBARmC,gCAQd;AAAE,SAAK,OAAL,CAAa,KAAK,KAAlB;AAA0B,GARd;AASnC,2BATmC,qCAST,SATS,EASE;AAAE,SAAK,OAAL,CAAa,SAAb,EAAwB,KAAK,KAA7B;AAAoC,GATxC;AAUnC,QAVmC,oBAU3B;AAAA;;AACN;AACA,SAAK,KAAL,CAAW,QAAX,CACE,wBAAQ,MAAR,CAAkB,KAAK,KAAL,CAAW,UAA7B,mBAAuD,KAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB,CAAuB,MAA9E,CADF;AAGA;AACA,eAAW,YAAI;AACb,YAAK,KAAL,CAAW,YAAX,CAAwB,WAAxB,CAAoC;AAClC,eAAO,MAAK,KAAL,CAAW,KAAX,CAAiB;AADU,OAApC;AAGD,KAJD,EAIG,CAJH;AAKD,GArBkC;AAsBnC,QAtBmC,oBAsB1B;AAAA,iBACuB,KAAK,KAD5B;AAAA,QACC,UADD,UACC,UADD;AAAA,QACa,KADb,UACa,KADb;;AAEP,QAAG,iBAAI,KAAJ,EAAW,cAAX,CAAH,EAA8B;AAC5B,aACE;AAAA;AAAA,UAAK,WAAW,8BAAQ,KAAxB;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE,kEAAgB,OAAU,UAAV,kBAAhB,EAAqD,OAAO,MAAM,KAAN,CAAY,MAAxE,GAHF;AAIE,iDAJF;AAKE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE,iDAAK,WAAU,MAAf,GADF;AAEE;AAAA;AAAA;AACE,yBAAU,SADZ;AAEE,uBAAS,KAAK,MAFhB;AAGE,uBAAS,MAAM,WAHjB;AAAA;AAAA;AAFF;AALF,OADF;AAiBD,KAlBD,MAmBI;AACF,aAAO,IAAP;AACD;AACF;AA9CkC,CAAlB,CAAb,CAAN;;AAkDO,IAAM,8DAAY,gBAAM,WAAN,CAAkB;AAAA;AACzC,SADyC,mBACjC,SADiC,EACtB,SADsB,EACZ;AAC3B,QAAG,CAAC,SAAD,IAAc,UAAU,SAAV,KAAwB,UAAU,SAAnD,EAA6D;AAC3D,gBAAU,YAAV,CAAuB,QAAvB,CAAgC;AAC9B,mBAAW,UAAU;AADS,OAAhC;AAGD;AACF,GAPwC;AAQzC,oBARyC,gCAQpB;AAAE,SAAK,OAAL,CAAa,KAAK,KAAlB;AAA0B,GARR;AASzC,2BATyC,qCASf,SATe,EASJ;AAAE,SAAK,OAAL,CAAa,SAAb,EAAwB,KAAK,KAA7B;AAAoC,GATlC;AAUzC,QAVyC,oBAUhC;AAAA,kBAC+C,KAAK,KADpD;AAAA,QACC,UADD,WACC,UADD;AAAA,QACa,KADb,WACa,KADb;AAAA,QACoB,QADpB,WACoB,QADpB;AAAA,QAC8B,YAD9B,WAC8B,YAD9B;;AAEP,WACE;AAAA;AAAA;AACG,uBAAI,KAAJ,EAAW,aAAX,IACA,8BAAC,UAAD;AACE,oBAAY,UADd;AAEE,eAAO,KAFT;AAGE,kBAAU,QAHZ;AAIE,sBAAc;AAJhB,QADA,GAOA;AARH,KADF;AAYD;AAxBwC,CAAlB,CAAZ,CAAN;;AA2BP;;AAEA,SAAS,eAAT,cAAsD;AAAA,MAA5B,KAA4B,QAA5B,KAA4B;AAAA,MAArB,QAAqB,QAArB,QAAqB;AAAA,MAAT,MAAS,SAAT,MAAS;;AACpD,MAAM,YAAY,OAAO,IAAzB;AACA,MAAM,gBAAgB,MAAM,QAAN,IAAkB,MAAM,QAAN,CAAe,SAAf,CAAlB,GAA8C,MAAM,QAAN,CAAe,SAAf,EAA0B,MAAxE,GAAiF,IAAvG;AACA,MAAM,QAAQ,gBAAgB,MAAM,MAAN,CAAa,cAAc,CAAd,CAAb,CAAhB,GAAiD,EAA/D;AACA,MAAM,aAAa,kCAAgC,cAAc,CAAd,CAAhC,GAAqD,EAAxE;AACA,SAAO;AACL,wBADK;AAEL,gBAFK;AAGL;AAHK,GAAP;AAKD;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,sBADK;AAEL,kBAAc,+BAAmB,YAAnB,EAAiC,QAAjC;AAFT,GAAP;AAID;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,SAA7C,C","file":"ProjectSettingsTasksPage.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as ProjectsActions from 'app/shared/actions/projects.js';\nimport * as TasksActions    from 'app/renderer/main/modules/Tasks/Tasks.actions.js';\n\n// Component Core\nimport React, { PropTypes } from 'react';\nimport { has } from 'lodash';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from '../ProjectSettingsPage.css'\n\n// Sub Components\nimport { Field, actions } from 'react-redux-form';\n\nimport ProgressButton from 'app/renderer/main/components/Buttons/ProgressButton/ProgressButton'\nimport TaskLabelsEdit from 'app/renderer/main/modules/Tasks/TaskLabelsEdit/TaskLabelsEdit.jsx'\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nconst TasksPanel = React.createClass({\n  onMount(nextProps, prevProps){\n    if(!prevProps || nextProps.board.data._id !== prevProps.board.data._id){\n      nextProps.dispatch(\n        actions.load(`${nextProps.boardModel}.forms.labels`, nextProps.board.data.labels)\n      )\n    }\n  },\n  componentWillMount() { this.onMount(this.props) },\n  componentWillReceiveProps(nextProps) { this.onMount(nextProps, this.props)},\n  submit(){\n    // Merge props back to the main data\n    this.props.dispatch(\n      actions.change(`${this.props.boardModel}.data.labels`, this.props.board.forms.labels)\n    );\n    // Save the board\n    setTimeout(()=>{\n      this.props.tasksActions.updateBoard({\n        board: this.props.board.data\n      })\n    }, 1)\n  },\n  render() {\n    const { boardModel, board } = this.props;\n    if(has(board, 'forms.labels')){\n      return(\n        <div className={classes.panel}>\n          <h3>Task Label Settings</h3>\n          <p>Labels are used to classify tasks. If you delete a label, it will be removed from all existing tasks.</p>\n          <TaskLabelsEdit model={`${boardModel}.forms.labels`} value={board.forms.labels} />\n          <br />\n          <div className=\"layout-row\">\n            <div className=\"flex\"></div>\n            <ProgressButton\n              className=\"primary\"\n              onClick={this.submit}\n              loading={board.savePending}>\n              Save Labels\n            </ProgressButton>\n          </div>\n        </div>\n      );\n    }\n    else{\n      return null\n    }\n  }\n\n});\n\nexport const Component = React.createClass({\n  onMount(nextProps, prevProps){\n    if(!prevProps || nextProps.projectId !== prevProps.projectId){\n      nextProps.tasksActions.getBoard({\n        projectId: nextProps.projectId\n      })\n    }\n  },\n  componentWillMount() { this.onMount(this.props) },\n  componentWillReceiveProps(nextProps) { this.onMount(nextProps, this.props)},\n  render() {\n    const { boardModel, board, dispatch, tasksActions } = this.props;\n    return (\n      <div>\n       { has(board, 'data.labels')\n       ? <TasksPanel\n           boardModel={boardModel}\n           board={board}\n           dispatch={dispatch}\n           tasksActions={tasksActions}\n         />\n       : null }\n      </div>\n    )\n  }\n});\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({tasks, projects}, {params}) {\n  const projectId = params.stub;\n  const projectBoards = tasks.projects && tasks.projects[projectId] ? tasks.projects[projectId].boards : null;\n  const board = projectBoards ? tasks.boards[projectBoards[0]] : {};\n  const boardModel = projectBoards ? `tasks.boards.${projectBoards[0]}` : '';\n  return {\n    projectId,\n    board,\n    boardModel,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    tasksActions: bindActionCreators(TasksActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}