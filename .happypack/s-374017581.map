{"version":3,"sources":["app\\renderer\\main\\modules\\ContextMenu\\ContextMenu.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,gDAAmB,gBAAM,WAAN,CAAkB;AAAA;AACvC,QADuC,oBAC9B;AAAA,iBACoB,KAAK,KADzB;AAAA,QACC,QADD,UACC,QADD;AAAA,QACW,IADX,UACW,IADX;;AAEP,QAAG,SAAS,OAAZ,EAAoB;AAClB,aACE;AAAA;AAAA,UAAS,OAAO,SAAS,KAAzB;AACG,iBAAS,OAAT,CAAiB,GAAjB,CAAqB;AAAA,iBAAW,8BAAC,gBAAD,IAAkB,KAAK,QAAQ,KAA/B,EAAsC,UAAU,OAAhD,EAAyD,MAAM,IAA/D,GAAX;AAAA,SAArB;AADH,OADF;AAKD,KAND,MAOI;AACF,UAAM,aAAa;AACjB,mBAAW,0BAAW,EAAC,WAAW,SAAS,OAArB,EAAX;AADM,OAAnB;AAGA,aAAO,CAAC,SAAS,QAAV,IAAsB,CAAC,SAAS,QAAT,CAAkB,IAAlB,CAAvB,GAEH;AAAA;AAAA,UAAU,KAAK,SAAS,KAAxB;AACE,sBAAY,UADd;AAEE,mBAAS,SAAS,OAAT,GAAmB,YAAI;AAAC,qBAAS,OAAT,CAAiB,IAAjB;AAAuB,WAA/C,GAAkD,YAAM,CAAE,CAFrE;AAGG,iBAAS;AAHZ,OAFG,GAQH,IARJ;AASD;AACF;AAxBsC,CAAlB,CAAnB,CAAN;;AA2BA,IAAM,8BAAO,gBAAM,WAAN,CAAkB;AAC3B,eAAa,MADc;AAE3B,QAF2B,oBAElB;AAAA,kBAC4B,KAAK,KADjC;AAAA,QACC,IADD,WACC,IADD;AAAA,QACO,UADP,WACO,UADP;AAAA,QACmB,IADnB,WACmB,IADnB;;AAEP,WACE;AAAA;AAAA,QAAa,YAAY,UAAzB;AACG,aAAO,KAAK,GAAL,CAAS;AAAA,eAAY,8BAAC,gBAAD,IAAkB,KAAK,SAAS,KAAhC,EAAuC,UAAU,QAAjD,EAA2D,MAAM,IAAjE,GAAZ;AAAA,OAAT,CAAP,GAAwG;AAD3G,KADF;AAKD;AAT0B,CAAlB,CAAP,CAAN;;kBAYe,+BAAQ,IAAR,C","file":"ContextMenu.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { ContextMenu, MenuItem, SubMenu, connect} from \"react-contextmenu\";\n\nconst AdvancedMenuItem = React.createClass({\n    render() {\n      const { menuItem, item } = this.props;\n      if(menuItem.subMenu){\n        return (\n          <SubMenu title={menuItem.label}>\n            {menuItem.subMenu.map(subItem => <AdvancedMenuItem key={subItem.label} menuItem={subItem} item={item}/>)}\n          </SubMenu>\n        )\n      }\n      else{\n        const attributes = {\n          className: classNames({'divider': menuItem.divider})\n        }\n        return !menuItem.isHidden || !menuItem.isHidden(item)\n          ? (\n            <MenuItem key={menuItem.label}\n              attributes={attributes}\n              onClick={menuItem.onClick ? ()=>{menuItem.onClick(item)} : () => {}}>\n              {menuItem.label}\n            </MenuItem>\n          )\n          : null\n      }\n    }\n});\n\nconst Menu = React.createClass({\n    displayName: \"Menu\",\n    render() {\n      const { menu, identifier, item } = this.props;\n      return (\n        <ContextMenu identifier={identifier}>\n          {menu ? menu.map(menuItem => <AdvancedMenuItem key={menuItem.label} menuItem={menuItem} item={item}/>) : null}\n        </ContextMenu>\n      );\n    }\n});\n\nexport default connect(Menu);\n"]}