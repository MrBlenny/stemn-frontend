{"version":3,"sources":["app\\renderer\\main\\components\\PopoverMenu\\PopoverMenu.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CAEe,gBAAM,WAAN,CAAkB;AAC/B,iBAD+B,6BACZ;AACjB,WAAO;AACL,cAAQ;AADH,KAAP;AAGD,GAL8B;;AAM/B,mBAAiB,GANc;AAO/B,sBAAoB,IAPW;AAQ/B,aAR+B,uBAQlB,OARkB,EAQV;AAAA;;AACnB,iBAAa,KAAK,kBAAlB;AACA,SAAK,kBAAL,GAA0B,WAAW,YAAI;AACvC,YAAK,MAAL,CAAY,OAAZ;AACD,KAFyB,EAEvB,KAAK,eAFkB,CAA1B;AAGD,GAb8B;AAc/B,QAd+B,kBAcvB,OAduB,EAcd;AACf,SAAK,QAAL,CAAc,EAAE,QAAQ,YAAY,IAAZ,GAAmB,CAAC,KAAK,KAAL,CAAW,MAA/B,GAAwC,OAAlD,EAAd;AACD,GAhB8B;AAiB/B,QAjB+B,oBAiBtB;AAAA;;AAAA,iBACmF,KAAK,KADxF;AAAA,QACC,WADD,UACC,WADD;AAAA,QACc,OADd,UACc,OADd;AAAA,QACuB,iBADvB,UACuB,iBADvB;AAAA,QAC0C,OAD1C,UAC0C,OAD1C;AAAA,QACmD,MADnD,UACmD,MADnD;AAAA,QAC2D,QAD3D,UAC2D,QAD3D;AAAA,QACqE,SADrE,UACqE,SADrE;;AAEP,QAAM,iBAAiB,WAAW,CAAlC;AACA,QAAM,aAAa;AACjB,aAAiB;AACf,sBAAe,wBAAM;AAAC,iBAAK,MAAL,CAAY,IAAZ;AAAkB,SADzB;AAEf,sBAAe,wBAAM;AAAC,iBAAK,MAAL,CAAY,KAAZ;AAAmB;AAF1B,OADA;AAKjB,kBAAiB;AACf,sBAAe,wBAAM;AAAC,iBAAK,WAAL,CAAiB,IAAjB;AAAuB,SAD9B;AAEf,sBAAe,wBAAM;AAAC,iBAAK,WAAL,CAAiB,KAAjB;AAAwB;AAF/B,OALA;AASjB,aAAiB;AACf,iBAAe,mBAAM;AAAC,iBAAK,MAAL,CAAY,IAAZ;AAAkB,SADzB;AAEf,uBAAgB,uBAAC,CAAD,EAAO;AACrB,YAAE,cAAF;AACA,iBAAK,MAAL,CAAY,IAAZ;AACD;AALc;AATA,KAAnB;;AAkBA,QAAM,aAAa;AACjB,aAAiB,EADA;AAEjB,kBAAiB;AACf,sBAAe,wBAAM;AAAC,iBAAK,WAAL,CAAiB,IAAjB;AAAuB,SAD9B;AAEf,sBAAe,wBAAM;AAAC,iBAAK,WAAL,CAAiB,KAAjB;AAAwB;AAF/B,OAFA;AAMjB,aAAiB;AACf,iBAAe,mBAAM;AAAC,8BAAoB,IAApB,GAA2B,OAAK,MAAL,CAAY,KAAZ,CAA3B;AAA8C;AADrD;AANA,KAAnB;;AAWA,QAAM,eAAe,WAAW,OAAX,KAAuB,WAAW,OAAX,CAA5C,CAhCO,CAgC0D;AACjE,QAAM,eAAe,WAAW,OAAX,KAAuB,WAAW,OAAX,CAA5C,CAjCO,CAiC0D;;AAEjE,WACE;AAAA;AAAA;AACE,gBAAQ,KAAK,KAAL,CAAW,MADrB;AAEE,cAAM,gBAAM,YAAN,CAAmB,SAAS,CAAT,CAAnB,EAAgC,YAAhC,CAFR;AAGE,uBAAe;AAAA,iBAAI,OAAK,MAAL,CAAY,KAAZ,CAAJ;AAAA,SAHjB;AAIE,qBAAe,eAAe,OAJhC;AAKE,iBAAS,cALX;AAME,gBAAQ,MANV;AAOG,sBAAM,YAAN,CAAmB,SAAS,CAAT,CAAnB,EAAgC,YAAhC;AAPH,KADF;AAWD;AA/D8B,CAAlB,C","file":"PopoverMenu.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React from 'react';\nimport Popover from 'app/renderer/assets/other/react-popup';\n\nexport default React.createClass({\n  getInitialState () {\n    return {\n      isOpen: false,\n    }\n  },\n  toggleDelayTime: 200,\n  toggleDelayTimeout: null,\n  toggleDelay (toState){\n    clearTimeout(this.toggleDelayTimeout);\n    this.toggleDelayTimeout = setTimeout(()=>{\n      this.toggle(toState);\n    }, this.toggleDelayTime)\n  },\n  toggle (toState) {\n    this.setState({ isOpen: toState === null ? !this.state.isOpen : toState })\n  },\n  render() {\n    const { preferPlace, trigger, disableClickClose, tipSize, offset, children, className } = this.props;\n    const tipSizeDefault = tipSize || 0;\n    const triggerMap = {\n      hover          : {\n        onMouseEnter : () => {this.toggle(true)},\n        onMouseLeave : () => {this.toggle(false)}\n      },\n      hoverDelay     : {\n        onMouseEnter : () => {this.toggleDelay(true)},\n        onMouseLeave : () => {this.toggleDelay(false)}\n      },\n      click          : {\n        onClick      : () => {this.toggle(null)},\n        onContextMenu : (e) => {\n          e.preventDefault();\n          this.toggle(null)\n        }\n      },\n    };\n\n    const contentMap = {\n      hover          : {},\n      hoverDelay     : {\n        onMouseEnter : () => {this.toggleDelay(true)},\n        onMouseLeave : () => {this.toggleDelay(false)},\n      },\n      click          : {\n        onClick      : () => {disableClickClose ? null : this.toggle(false)}\n      }\n    }\n\n    const triggerProps = triggerMap[trigger] || triggerMap['click']; // Default to click\n    const contentProps = contentMap[trigger] || contentMap['click']; // Default to click\n\n    return (\n      <Popover\n        isOpen={this.state.isOpen}\n        body={React.cloneElement(children[1], contentProps)}\n        onOuterAction={()=>this.toggle(false)}\n        preferPlace = {preferPlace || 'above'}\n        tipSize={tipSizeDefault}\n        offset={offset}>\n        {React.cloneElement(children[0], triggerProps)}\n      </Popover>\n    );\n  }\n})\n"]}