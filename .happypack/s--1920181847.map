{"version":3,"sources":["app\\renderer\\main\\modules\\Editor\\Editor.jsx"],"names":[],"mappings":"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","file":"Editor.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\n\r\n// Container Actions\r\nimport * as editorActions from './Editor.actions.js';\r\n\r\n// Component Core\r\nimport React from 'react';\r\n\r\n// Styles\r\nimport classNames from 'classnames';\r\nimport classes from './Editor.css';\r\n\r\n// Sub Components\r\nimport { MentionsInput, Mention } from 'app/renderer/main/modules/Mentions/MentionsInput/index.js'\r\nimport UserAvatar from 'app/renderer/main/components/Avatar/UserAvatar/UserAvatar.jsx';\r\nimport AutosuggestHighlight from 'autosuggest-highlight';\r\nimport Checkbox from 'app/renderer/main/components/Input/Checkbox/Checkbox';\r\n\r\nimport getUuid from 'app/shared/helpers/getUuid.js';\r\nimport http from 'axios';\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////// COMPONENT /////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\n//export const Component = React.createClass({\r\n//  getInitialState () {\r\n//    return {\r\n//      value: this.props.value,\r\n//    }\r\n//  },\r\n//  componentWillReceiveProps(nextProps) {\r\n//    if(nextProps.value != this.props.value){\r\n//      this.setState({ value: nextProps.value })\r\n//    }\r\n//  },\r\n//\r\n//  handleChange(event){\r\n//    this.props.dispatch(actions.change(this.props.model, event.target.value));\r\n//  },\r\n//  render() {\r\n//    const { className, model, value } = this.props;\r\n//\r\n//    return (\r\n//      <textarea value={this.state.value}\r\n//       onChange={this.handleChange}\r\n//       className={classNames(classes.editor, className)} />\r\n//    )\r\n//  }\r\n//});\r\n\r\n\r\n\r\nexport const Component = React.createClass({\r\n  getInitialState () {\r\n    return {\r\n      value: this.props.value,\r\n    }\r\n  },\r\n  componentWillReceiveProps(nextProps) {\r\n    // Update the internal state if it differs from the redux state\r\n    if(nextProps.value != this.state.value){\r\n      this.setState({ value: nextProps.value })\r\n    }\r\n  },\r\n  handleChange(event, value){\r\n    this.setState({value: value});\r\n    this.props.dispatch(actions.change(this.props.model, value));\r\n  },\r\n  displayTransform: function(id, display, type) {\r\n    const name = display.split('[')[1].split(']')[0]; // Get the name (from between the square brackets)\r\n    if(type == 'user'){\r\n      return \"@\" + name\r\n    }\r\n    else if(type == 'task'){\r\n      return `#${name}`\r\n    }\r\n    else if(type == 'task-complete'){\r\n      return `#${name} (completed)`\r\n    }\r\n  },\r\n  userRenderSuggestion: (entry, search, highlightedDisplay, index) => {\r\n    const matches = AutosuggestHighlight.match(entry.name, search);\r\n    const parts   = AutosuggestHighlight.parse(entry.name, matches);\r\n    return (\r\n      <div className=\"layout-row layout-align-start-center\">\r\n        <UserAvatar picture={entry.picture}/>\r\n        <div style={{marginLeft: '10px'}} className=\"flex\">\r\n        {parts.map((part, index) => {\r\n          const className = part.highlight ? 'text-primary' : null;\r\n          return (\r\n            <span className={className} key={index}>{part.text}</span>\r\n          );\r\n        })}\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n  userData(search, callback) {\r\n    return http({\r\n      url: `/api/v1/search`,\r\n      method: 'GET',\r\n      params: {\r\n        type:'user',\r\n        key: 'name',\r\n        value: search,\r\n        size: 20,\r\n        match: 'regex'\r\n      },\r\n    }).then( response => {\r\n      response.data.forEach( item => {\r\n        item.id = getUuid(); // Get a random mention id\r\n        item.display = `[${item.name}](${item._id}`; // Create the display\r\n      });\r\n      callback(response.data)\r\n    })\r\n  },\r\n  taskRenderSuggestion: (entry, search, highlightedDisplay, index) => {\r\n    const matches = AutosuggestHighlight.match(entry.name, search);\r\n    const parts   = AutosuggestHighlight.parse(entry.name, matches);\r\n    return (\r\n      <div className=\"layout-row layout-align-start-center\">\r\n        <Checkbox circle={true} />\r\n        <div style={{marginLeft: '10px', marginBottom: '2px'}} className=\"flex\">\r\n        {parts.map((part, index) => {\r\n          const className = part.highlight ? 'text-primary' : null;\r\n          return (\r\n            <span className={className} key={index}>{part.text}</span>\r\n          );\r\n        })}\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n  render() {\r\n    const { className } = this.props;\r\n    return (\r\n      <MentionsInput\r\n        className={classNames(classes.editor, className)}\r\n        placeholder=\"Detailed Description\"\r\n        value={this.state.value}\r\n        displayTransform={this.displayTransform}\r\n        markup=\"@__display__:__type__:__id__)\" // format @[username](userName:mentionType:mentionId)\r\n        onChange={this.handleChange}>\r\n        <Mention\r\n          trigger=\"@\"\r\n          type=\"user\"\r\n          data={this.userData}\r\n          renderSuggestion={this.userRenderSuggestion}\r\n          style={{background: 'rgba(68, 154, 211, 0.6)'}}\r\n        />\r\n        <Mention\r\n          trigger=\"#\"\r\n          type=\"task\"\r\n          data={this.userData}\r\n          renderSuggestion={this.taskRenderSuggestion}\r\n          style={{background: 'rgba(68, 211, 95, 0.3)'}}\r\n        />\r\n        <Mention\r\n          trigger=\"#\"\r\n          type=\"task-complete\"\r\n          data={this.userData}\r\n          renderSuggestion={this.taskRenderSuggestion}\r\n          style={{background: 'rgba(68, 211, 95, 0.3)'}}\r\n        />\r\n      </MentionsInput>\r\n    )\r\n  }\r\n});\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////// CONTAINER /////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction mapStateToProps({}) {\r\n  return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    EditorActions: bindActionCreators(editorActions, dispatch),\r\n    dispatch\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\r\n"]}