{"version":3,"sources":["app\\shared\\reducers\\system.js"],"names":[],"mappings":";;;;;;;;kBA2Fe,YAAwC;AAAA,MAA9B,KAA8B,yDAAtB,YAAsB;AAAA,MAAR,MAAQ;;AACrD,MAAI,CAAC,MAAM,QAAX,EAAqB;AACnB,yBAAa,YAAb,EAA8B,KAA9B,IAAqC,UAAU,IAA/C;AACD;AACD,SAAO,6BAAQ,OAAR,EAAiB,QAAjB,EAA2B,KAA3B,EAAkC,MAAlC,CAAP;AACD,C;;AAhGD;;AAEA,IAAM,eAAe;AACnB,gBAAc;AACZ,aAAS,IADG;AAEZ,WAAO,IAFK;AAGZ,cAAU;AAHE,GADK;AAMnB,YAAU;AACR,eAAW;AADH,GANS;AASnB,kBAAgB,IATG;AAUnB,qBAAmB,KAVA;AAWnB,mBAAiB,KAXE;AAYnB,oBAAkB,KAZC;AAanB,WAAS,EAbU;AAcnB,eAAa,KAdM;AAenB,sBAAoB;AAfD,CAArB;;AAkBA,SAAS,OAAT,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC9B,UAAQ,OAAO,IAAf;AACE,SAAK,oCAAL;AAA2C;AACzC,4BACK,KADL;AAEE,wBAAc;AACZ,qBAAS,OAAO,OAAP,CAAe,OADZ;AAEZ,mBAAO,OAAO,OAAP,CAAe;AAFV;AAFhB;AAOD;;AAED,SAAK,wBAAL;AAA+B;AAC7B,4BACK,KADL;AAEE,0BAAgB,OAAO,OAAP,CAAe;AAFjC;AAID;;AAED,SAAK,4BAAL;AAAmC;AACjC,4BACK,KADL,EAEK,YAFL;AAGE,6BAAmB;AAHrB;AAKD;;AAED,SAAK,yBAAL;AAAgC;AAC9B,4BACK,KADL,EAEK,YAFL;AAGE,2BAAiB;AAHnB;AAKD;;AAED,SAAK,0BAAL;AAAiC;AAAA,8BAC+B,OAAO,OADtC;AAAA,YACvB,YADuB,mBACvB,YADuB;AAAA,YACT,WADS,mBACT,WADS;AAAA,YACI,WADJ,mBACI,WADJ;AAAA,YACiB,SADjB,mBACiB,SADjB;;AAE/B,4BACK,KADL,EAEK,YAFL;AAGE,4BAAkB,IAHpB;AAIE,mBAAS;AACP,sCADO;AAEP,oCAFO;AAGP,oCAHO;AAIP;AAJO;AAJX;AAWD;;AAED,SAAK,qBAAL;AAA4B;AAC1B,4BACK,KADL,EAEK,YAFL;AAGE,uBAAa,OAAO;AAHtB;AAKD;;AAED,SAAK,6BAAL;AAAoC;AAClC,4BACK,KADL,EAEK,YAFL;AAGE,8BAAoB;AAHtB;AAKD;;AAED;AACE,aAAO,KAAP;AAlEJ;AAoED","file":"system.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import { modeled } from 'react-redux-form';\n\nconst initialState = {\n  providerPath: {\n    dropbox: null,\n    drive: null,\n    onedrive: null,\n  },\n  settings: {\n    usageData: true\n  },\n  currentVersion: null,\n  checkingForUpdate: false,\n  updateAvailable: false,\n  updateDownloaded: false,\n  release: {},\n  updateError: false,\n  updateNotAvailable: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SYSTEM/GET_PROVIDER_PATH_FULFILLED': {\n      return {\n        ...state,\n        providerPath: {\n          dropbox: action.payload.dropbox,\n          drive: action.payload.drive\n        }\n      };\n    }\n\n    case 'SYSTEM/CURRENT_VERSION': {\n      return {\n        ...state,\n        currentVersion: action.payload.version,\n      };\n    }\n\n    case 'SYSTEM/CHECKING_FOR_UPDATE': {\n      return {\n        ...state,\n        ...initialState,\n        checkingForUpdate: true,\n      };\n    }\n\n    case 'SYSTEM/UPDATE_AVAILABLE': {\n      return {\n        ...state,\n        ...initialState,\n        updateAvailable: true,\n      };\n    }\n\n    case 'SYSTEM/UPDATE_DOWNLOADED': {\n      const { releaseNotes, releaseName, releaseDate, updateURL } = action.payload;\n      return {\n        ...state,\n        ...initialState,\n        updateDownloaded: true,\n        release: {\n          releaseNotes,\n          releaseName,\n          releaseDate,\n          updateURL,\n        },\n      };\n    }\n\n    case 'SYSTEM/UPDATE_ERROR': {\n      return {\n        ...state,\n        ...initialState,\n        updateError: action.payload,\n      };\n    }\n\n    case 'SYSTEM/UPDATE_NOT_AVAILABLE': {\n      return {\n        ...state,\n        ...initialState,\n        updateNotAvailable: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default function (state = initialState, action) {\n  if (!state.hydrated) {\n    state = { ...initialState, ...state, hydrated: true };\n  }\n  return modeled(reducer, 'system')(state, action)\n}\n"]}