'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function () {
  var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
  var action = arguments[1];

  return (0, _reactReduxForm.modeled)(reducer, 'users')(state, action);
};

var _reactReduxForm = require('react-redux-form');

var _icepick = require('icepick');

var _icepick2 = _interopRequireDefault(_icepick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialState = {};

function reducer(state, action) {
  switch (action.type) {
    case 'USERS/GET_USER_PENDING':
      return _icepick2.default.assocIn(state, [action.meta.cacheKey, 'loading'], true);
    case 'USERS/GET_USER_REJECTED':
      return _icepick2.default.assocIn(state, [action.meta.cacheKey, 'loading'], false);
    case 'USERS/GET_USER_FULFILLED':
      return _icepick2.default.assocIn(state, [action.meta.cacheKey], {
        loading: false,
        data: action.payload.data
      });

    case 'USERS/SAVE_USER_PENDING':
      return _icepick2.default.assocIn(state, ['data', action.meta.userId, 'savePending'], true);
    case 'USERS/SAVE_USER_REJECTED':
      return _icepick2.default.assocIn(state, ['data', action.meta.userId, 'savePending'], false);
    case 'USERS/SAVE_USER_FULFILLED':
      return _icepick2.default.assocIn(state, ['data', action.meta.userId, 'savePending'], false);

    default:
      return state;
  }
}

module.exports = exports['default'];