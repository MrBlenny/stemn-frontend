{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\TaskList\\TaskList.jsx"],"names":[],"mappings":"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","file":"TaskList.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as TasksActions from '../Tasks.actions.js';\n\nimport TaskGroupParent     from './TaskGroup/TaskGroupParent.jsx';\nimport TaskGroupWrapped    from './TaskGroup/TaskGroupWrapped.jsx'\nimport TaskGroup           from './TaskGroup/TaskGroup.jsx'\nimport TaskListItemParent  from './TaskListItem/TaskListItemParent.jsx'\nimport TaskListItemWrapped from './TaskListItem/TaskListItemWrapped.jsx'\nimport TaskListItem        from './TaskListItem/TaskListItem.jsx'\nimport Input from 'app/renderer/main/components/Input/Input/Input';\n\nimport classes from './TaskList.css';\n\nexport const NewItem = React.createClass({\n  render() {\n    const { model, value, submitFn, placeholder, box, style } = this.props;\n    return (\n      <form style={style} name=\"form\" onSubmit={submitFn}>\n        <Input \n          model={model} \n          value={value}\n          className={box ? classes.newItemBox : classes.newItem} \n          type=\"text\" placeholder={placeholder}\n        />\n      </form>\n    )\n  }\n});\n\nexport const Component = React.createClass({\n  moveGroup({group, destinationGroup, after, save}) {\n    this.props.TasksActions.moveGroup({\n      boardId: this.props.board.data._id,\n      group,\n      destinationGroup,\n      after,\n      save\n    })\n  },\n  moveCard({task, destinationTask, destinationGroup, after, save}) {\n    this.props.TasksActions.moveTask({\n      boardId: this.props.board.data._id,\n      task,\n      destinationTask,\n      destinationGroup,\n      after,\n      save\n    })\n  },\n  beginDrag(taskId) {\n    this.props.TasksActions.beginDrag({\n      boardId: this.props.board.data._id,\n      taskId,\n    })\n  },\n  endDrag(taskId) {\n    this.props.TasksActions.endDrag({\n      boardId: this.props.board.data._id,\n      taskId,\n    })\n  },\n  newTask(event, groupId){\n    event.preventDefault();\n    this.props.TasksActions.newTask({\n      boardId: this.props.board.data._id,\n      task: {\n        name: this.props.board.newTaskString[groupId],\n        group: groupId,\n        boardId: this.props.board.data._id\n      },\n    })\n  },\n  newGroup(event){\n    event.preventDefault();\n    this.props.TasksActions.newGroup({\n      boardId: this.props.board.data._id,\n      group: {\n        name: this.props.board.newGroupString\n      },\n    })\n  },\n  deleteGroup(groupId){\n    this.props.TasksActions.deleteGroupConfirm({\n      boardId: this.props.board.data._id,\n      groupId: groupId\n    })\n  },\n  updateGroup(group){\n    this.props.TasksActions.updateGroup({\n      group: group\n    })\n  },\n  render() {\n    const { board, layout, className } = this.props;\n    const entityModel = `tasks.boards.${board.data._id}`;\n\n    return (\n      <div className={className + ' layout-column flex'} style={layout == 'board' ? {overflowX : 'scroll'} : {overflowY : 'scroll'}}>\n        <TaskGroupParent layout={layout}>\n          {board.data.groups.map((group, groupIndex) =>\n            <TaskGroupWrapped\n              key={group._id}\n              index={groupIndex}\n              id={group._id}\n              item={group}\n              groups={board.data.groups.map((group)=>group._id)}\n              moveGroup={this.moveGroup}\n              layout={layout}>\n              <TaskGroup\n               item={group}\n               layout={layout}\n               entityModel={`${entityModel}.data.groups[${groupIndex}]`}\n               deleteGroup={() => this.deleteGroup(group._id)}\n               updateGroup={() => this.updateGroup(group)}>\n                <TaskListItemParent\n                 groupId={group._id}\n                 moveCard={this.moveCard}\n                 tasks={group.tasks}\n                 layout={layout}>\n                  {group.tasks ? group.tasks.map((taskId, cardIndex) =>\n                    <TaskListItemWrapped\n                      index={cardIndex}\n                      id={taskId}\n                      item={taskId}\n                      groupId={group._id}\n                      tasks={group.tasks}\n                      moveCard={this.moveCard}\n                      beginDrag={this.beginDrag}\n                      endDrag={this.endDrag}>\n                      <TaskListItem item={taskId} draggable={true} layout={layout} />\n                    </TaskListItemWrapped>\n                  ) : ''}\n                  <NewItem\n                    style={layout == 'list' ? {marginLeft: '60px'} : {}}\n                    model={`${entityModel}.newTaskString.${group._id}`}\n                    value={board.newTaskString ? board.newTaskString[group._id] : ''}\n                    placeholder=\"New Task\"\n                    submitFn={(event) => this.newTask(event, group._id)}\n                    box={layout=='board'}\n                  />\n                </TaskListItemParent>\n              </TaskGroup>\n           </TaskGroupWrapped>\n          )}\n          <TaskGroup simpleGroup={true}>\n            <NewItem\n              model={`${entityModel}.newGroupString`}\n              value={board.newGroupString}\n              placeholder=\"New Group\"\n              submitFn={this.newGroup}\n              box={layout=='board'}\n            />\n          </TaskGroup>\n        </TaskGroupParent>\n      </div>\n    )\n  }\n});\n\n////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps() {\n  return {}\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    TasksActions: bindActionCreators(TasksActions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component)\n"]}