{"version":3,"sources":["app\\renderer\\main\\pages\\SettingsPage\\SettingsAccountPage\\SettingsAccountPage.jsx"],"names":[],"mappings":"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","file":"SettingsAccountPage.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as UsersActions from 'app/shared/actions/users';\nimport * as AuthActions from 'app/shared/actions/auth';\n\n// Component Core\nimport React from 'react';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from 'app/renderer/main/pages/ProjectPage/ProjectSettingsPage/ProjectSettingsPage.css'\n\n// Sub Components\nimport { Field } from 'react-redux-form';\nimport Upload from 'app/renderer/main/modules/Upload/Upload.jsx'\nimport ProgressButton from 'app/renderer/main/components/Buttons/ProgressButton/ProgressButton.jsx'\nimport LinkAccount from 'app/renderer/main/modules/Settings/LinkAccount/LinkAccount.jsx'\nimport LoadingOverlay from 'app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx';\n\n\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// COMPONENT /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nexport const Component = React.createClass({\n  componentWillMount() {\n    this.props.usersActions.getUser({userId: this.props.auth.user._id});\n  },\n  saveUser(){\n    this.props.usersActions.saveUser({userId: this.props.user.data});\n  },\n  render() {\n    const { entityModel, user, auth, authActions, usersActions } = this.props;\n    const getInner = () => {\n      return (\n        <div>\n          <div className={classes.panel}>\n          <h3>Account Avatar</h3>\n            <Upload\n              model={`${entityModel}.data.profile.firstname`}\n              value={user.data.profile.picture}\n              uploadId=\"UserSettingsAvatar\"\n            />\n            <div className=\"layout-row layout-align-end\">\n              <ProgressButton className=\"primary\" onClick={()=>this.saveUser()}>Update Avatar</ProgressButton>\n            </div>\n          </div>\n\n          <div className={classes.panel}>\n            <h3>Basic Profile Info</h3>\n            <div className=\"layout-row\">\n              <Field className=\"flex\" model={`${entityModel}.data.profile.firstname`}>\n                <input className=\"dr-input\" type=\"text\" placeholder=\"First Name\" style={{marginRight: '7px'}}/>\n              </Field>\n              <Field className=\"flex\" model={`${entityModel}.data.profile.lastname`}>\n                <input className=\"dr-input\" type=\"text\" placeholder=\"Last Name\" style={{marginLeft: '7px'}}/>\n              </Field>\n            </div>\n            <br />\n            <Field model={`${entityModel}.data.profile.blurb`}>\n              <input className=\"dr-input\" type=\"text\" placeholder=\"Profile blurb\"/>\n            </Field>\n            <br />\n            <div className=\"layout-row layout-align-end\">\n              <ProgressButton className=\"primary\" onClick={()=>this.saveUser()}>Save Profile</ProgressButton>\n            </div>\n          </div>\n\n          <div className={classes.panel}>\n            <h3>Link Accounts</h3>\n            <p>By linking accounts you'll be able to login to STEMN using either Facebook and/or LinkedIn. LinkedIn login won't work on your mobile phone but Facebook works a treat.</p>\n            <LinkAccount text=\"Facebook\" isLinked={auth.user.accounts.facebook} linkFn={()=>authActions.authenticate('facebook')} unLinkFn={()=>authActions.unlink('facebook')}/>\n            <LinkAccount text=\"Linkedin\" isLinked={auth.user.accounts.linkedin} linkFn={()=>authActions.authenticate('linkedin')} unLinkFn={()=>authActions.unlink('linkedin')}/>\n          </div>\n\n          <div className={classes.panel}>\n            <h3>Sync Accounts</h3>\n            <p>Connect your dropbox account to take advantage of STEMN Sync. This will automatically sync your project files to STEMN.</p>\n            <LinkAccount text=\"Dropbox\" isLinked={auth.user.accounts.dropbox.id} linkFn={()=>authActions.authenticate('dropbox')} unLinkFn={()=>authActions.unlink('dropbox')}/>\n            <LinkAccount text=\"Google Drive\" isLinked={auth.user.accounts.google.refreshToken} linkFn={()=>authActions.authenticate('google')} unLinkFn={()=>authActions.unlink('google')}/>\n          </div>\n\n          <div className={classes.panel}>\n            <h3>Logout</h3>\n            <p>Logout from this account.</p>\n            <div className=\"layout-row layout-align-end\">\n              <ProgressButton className=\"warn\" onClick={authActions.logout}>Logout</ProgressButton>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"rel-box\">\n        {auth.user && user.data ? getInner() : ''}\n        <LoadingOverlay show={auth.authLoading || !user || !user.data}/>\n      </div>\n    );\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CONTAINER /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps({auth, users}, {params}) {\n  return {\n    auth,\n    user: users[auth.user._id],\n    entityModel: `users.${auth.user._id}`\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    usersActions: bindActionCreators(UsersActions, dispatch),\n    authActions: bindActionCreators(AuthActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}