'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _reactPopup = require('app/renderer/assets/other/react-popup');

var _reactPopup2 = _interopRequireDefault(_reactPopup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/components/PopoverMenu/PopoverMenu.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/components/PopoverMenu/PopoverMenu.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

exports.default = _wrapComponent('_component')(_react3.default.createClass({
  getInitialState: function getInitialState() {
    return {
      isOpen: false
    };
  },

  toggleDelayTime: 200,
  toggleDelayTimeout: null,
  toggleDelay: function toggleDelay(toState) {
    var _this = this;

    clearTimeout(this.toggleDelayTimeout);
    this.toggleDelayTimeout = setTimeout(function () {
      _this.toggle(toState);
    }, this.toggleDelayTime);
  },
  toggle: function toggle(toState) {
    this.setState({ isOpen: toState === null ? !this.state.isOpen : toState });
  },
  render: function render() {
    var _this2 = this;

    var _props = this.props;
    var preferPlace = _props.preferPlace;
    var trigger = _props.trigger;
    var disableClickClose = _props.disableClickClose;
    var tipSize = _props.tipSize;
    var offset = _props.offset;
    var children = _props.children;
    var className = _props.className;

    var tipSizeDefault = tipSize || 0;
    var triggerMap = {
      hover: {
        onMouseEnter: function onMouseEnter() {
          _this2.toggle(true);
        },
        onMouseLeave: function onMouseLeave() {
          _this2.toggle(false);
        }
      },
      hoverDelay: {
        onMouseEnter: function onMouseEnter() {
          _this2.toggleDelay(true);
        },
        onMouseLeave: function onMouseLeave() {
          _this2.toggleDelay(false);
        }
      },
      click: {
        onClick: function onClick() {
          _this2.toggle(null);
        },
        onContextMenu: function onContextMenu(e) {
          e.preventDefault();
          _this2.toggle(null);
        }
      }
    };

    var contentMap = {
      hover: {},
      hoverDelay: {
        onMouseEnter: function onMouseEnter() {
          _this2.toggleDelay(true);
        },
        onMouseLeave: function onMouseLeave() {
          _this2.toggleDelay(false);
        }
      },
      click: {
        onClick: function onClick() {
          disableClickClose ? null : _this2.toggle(false);
        }
      }
    };

    var triggerProps = triggerMap[trigger] || triggerMap['click']; // Default to click
    var contentProps = contentMap[trigger] || contentMap['click']; // Default to click

    return _react3.default.createElement(
      _reactPopup2.default,
      {
        isOpen: this.state.isOpen,
        body: _react3.default.cloneElement(children[1], contentProps),
        onOuterAction: function onOuterAction() {
          return _this2.toggle(false);
        },
        preferPlace: preferPlace || 'above',
        tipSize: tipSizeDefault,
        offset: offset },
      _react3.default.cloneElement(children[0], triggerProps)
    );
  }
}));
module.exports = exports['default'];