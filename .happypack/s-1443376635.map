{"version":3,"sources":["app\\shared\\helpers\\strings\\howMany.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;kBAgBe,UAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAwB;AACrC,MAAI,SAAS,EAAb;AACA,YAAU,MAAM,KAAN,GAAc,CAAd,GAA0C,MAAM,KAAhD,SAAyD,MAAM,GAA/D,GAAuE,EAAjF;AACA,YAAW,MAAM,KAAN,GAAc,CAAd,IAAmB,MAAM,KAAN,GAAc,CAAlC,aAAiD,EAA3D;AACA,YAAU,MAAM,KAAN,GAAc,CAAd,GAA0C,MAAM,KAAhD,SAAyD,MAAM,GAA/D,GAAuE,EAAjF;AACA,YAAW,MAAM,KAAN,GAAc,CAAd,IAAmB,MAAM,KAAN,GAAc,CAAlC,SAA2C,IAA3C,IAAmD,MAAM,KAAN,GAAc,CAAd,IAAoB,MAAM,KAAN,IAAe,CAAf,IAAoB,MAAM,KAAN,GAAc,CAAvD,GAA6D,GAA7D,GAAmE,EAArH,UAA6H,EAAvI;AACA,SAAO,MAAP;AACD,C","file":"howMany.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["/***************************************************\nThis takes in 2 numbers and 2 nouns and returns\nhow many.\n\nExample:\nquery  : howMany({\n  count: 1,\n  adj: 'sad',\n},{\n  count: 3,\n  adj: 'happy',\n}, 'dog')\nresult : '1 sad and 3 happy dogs.'\n\n***************************************************/\n\nexport default (item1, item2, noun) => {\n  let string = ''\n  string += item1.count > 0                      ? `${item1.count} ${item1.adj}` : '';\n  string += (item1.count > 0 && item2.count > 0) ? ` and ` : '';\n  string += item2.count > 0                      ? `${item2.count} ${item2.adj}` : '';\n  string += (item1.count > 0 || item2.count > 0) ? ` ${noun}${(item2.count > 1 || (item2.count == 0 && item1.count > 1)) ? 's' : ''}.` : '';\n  return string\n}\n"]}