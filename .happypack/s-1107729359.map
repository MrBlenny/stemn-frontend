{"version":3,"sources":["app\\renderer\\assets\\other\\gerber\\js\\parse\\eagle.js"],"names":[],"mappings":"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","file":"eagle.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["(function (root, factory) {\n\tif(typeof define === \"function\" && define.amd) {\n\t\tdefine(function(){\n\t\t\treturn factory();\n\t\t});\n\t} else if(typeof module === \"object\" && module.exports) {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.EagleXMLParser = factory();\n\t}\n}(this, function () {\n\n\tfunction EagleXMLParser (board) {\n        this.board = board;\n\t}\n\n\tEagleXMLParser.supports = function (text) {\n\t\tif (text.match (/\\<\\?xml/) && text.match (/\\<eagle/)) return true;\n\t}\n\n\tEagleXMLParser.name = \"eagle xml brd\";\n\n\tvar layerMaps = {\n\t\t\"Front\": \"Top\",\n\t\t\"Back\": \"Bottom\",\n\t\t//\t\"F.Cu\": \"Top\",\n\t\t//\t\"B.Cu\": \"Bottom\",\n\t\t//\t\"Inner1.Cu\": \"Inner1\",\n\t\t//\t\"Inner2.Cu\": \"Inner2\",\n\t\t\"B.Adhes\": \"bGlue\",\n\t\t\"F.Adhes\": \"tGlue\",\n\t\t\"B.Paste\": \"bCream\",\n\t\t\"F.Paste\": \"tCream\",\n\t\t\"B.SilkS\": \"bNames\",\n\t\t\"F.SilkS\": \"tNames\",\n\t\t\"B.Mask\": \"bStop\",\n\t\t\"F.Mask\": \"tStop\",\n\t\t\"Dwgs.User\": \"tValues\",\n\t\t//(41 Cmts.User user)\n\t\t//(42 Eco1.User user)\n\t\t//(43 Eco2.User user)\n\t\t\"Edge.Cuts\": \"Dimension\"\n\t};\n\n\tvar eagleLayers = {\n\t\t\"Top\":     { \"name\": \"Top\",     \"number\": 1, \"color\": 4 },\n\t\t\"Inner1\":  { \"name\": \"Inner1\",  \"number\": 2, \"color\": 16 },\n\t\t\"Inner2\":  { \"name\": \"Inner2\",  \"number\": 3, \"color\": 16 },\n\t\t\"Inner3\":  { \"name\": \"Inner3\",  \"number\": 4, \"color\": 16 },\n\t\t\"Inner4\":  { \"name\": \"Inner4\",  \"number\": 5, \"color\": 16 },\n\t\t\"Inner5\":  { \"name\": \"Inner5\",  \"number\": 6, \"color\": 16 },\n\t\t\"Inner6\":  { \"name\": \"Inner6\",  \"number\": 7, \"color\": 16 },\n\t\t\"Inner7\":  { \"name\": \"Inner7\",  \"number\": 8, \"color\": 16 },\n\t\t\"Inner8\":  { \"name\": \"Inner8\",  \"number\": 9, \"color\": 16 },\n\t\t\"Inner9\":  { \"name\": \"Inner9\",  \"number\": 10, \"color\": 16 },\n\t\t\"Inner10\": { \"name\": \"Inner10\", \"number\": 11, \"color\": 16 },\n\t\t\"Inner11\": { \"name\": \"Inner11\", \"number\": 12, \"color\": 16 },\n\t\t\"Inner12\": { \"name\": \"Inner12\", \"number\": 13, \"color\": 16 },\n\t\t\"Inner13\": { \"name\": \"Inner13\", \"number\": 14, \"color\": 16 },\n\t\t\"Inner14\": { \"name\": \"Inner14\", \"number\": 15, \"color\": 16 },\n\t\t\"Bottom\":  { \"name\": \"Bottom\", \"number\": 16, \"color\": 1 },\n\t\t\"Pads\": { \"name\": \"Pads\", \"number\": 17, \"color\": 2 },\n\t\t\"Vias\": { \"name\": \"Vias\", \"number\": 18, \"color\": 2 },\n\t\t\"Unrouted\": { \"name\": \"Unrouted\", \"number\": 19, \"color\": 6 },\n\t\t\"Dimension\": { \"name\": \"Dimension\", \"number\": 20, \"color\": 15 },\n\t\t\"tPlace\": { \"name\": \"tPlace\", \"number\": 21, \"color\": 7 },\n\t\t\"bPlace\": { \"name\": \"bPlace\", \"number\": 22, \"color\": 7 },\n\t\t\"tOrigins\": { \"name\": \"tOrigins\", \"number\": 23, \"color\": 15 },\n\t\t\"bOrigins\": { \"name\": \"bOrigins\", \"number\": 24, \"color\": 15 },\n\t\t\"tNames\": { \"name\": \"tNames\", \"number\": 25, \"color\": 7 },\n\t\t\"bNames\": { \"name\": \"bNames\", \"number\": 26, \"color\": 7 },\n\t\t\"tValues\": { \"name\": \"tValues\", \"number\": 27, \"color\": 7 },\n\t\t\"bValues\": { \"name\": \"bValues\", \"number\": 28, \"color\": 7 },\n\t\t\"tStop\": { \"name\": \"tStop\", \"number\": 29, \"color\": 7 },\n\t\t\"bStop\": { \"name\": \"bStop\", \"number\": 30, \"color\": 7 },\n\t\t\"tCream\": { \"name\": \"tCream\", \"number\": 31, \"color\": 7 },\n\t\t\"bCream\": { \"name\": \"bCream\", \"number\": 32, \"color\": 7 },\n\t\t\"tFinish\": { \"name\": \"tFinish\", \"number\": 33, \"color\": 6 },\n\t\t\"bFinish\": { \"name\": \"bFinish\", \"number\": 34, \"color\": 6 },\n\t\t\"tGlue\": { \"name\": \"tGlue\", \"number\": 35, \"color\": 7 },\n\t\t\"bGlue\": { \"name\": \"bGlue\", \"number\": 36, \"color\": 7 },\n\t\t\"tTest\": { \"name\": \"tTest\", \"number\": 37, \"color\": 7 },\n\t\t\"bTest\": { \"name\": \"bTest\", \"number\": 38, \"color\": 7 },\n\t\t\"tKeepout\": { \"name\": \"tKeepout\", \"number\": 39, \"color\": 4 },\n\t\t\"bKeepout\": { \"name\": \"bKeepout\", \"number\": 40, \"color\": 1 },\n\t\t\"tRestrict\": { \"name\": \"tRestrict\", \"number\": 41, \"color\": 4 },\n\t\t\"bRestrict\": { \"name\": \"bRestrict\", \"number\": 42, \"color\": 1 },\n\t\t\"vRestrict\": { \"name\": \"vRestrict\", \"number\": 43, \"color\": 2 },\n\t\t\"Drills\": { \"name\": \"Drills\", \"number\": 44, \"color\": 7 },\n\t\t\"Holes\": { \"name\": \"Holes\", \"number\": 45, \"color\": 7 },\n\t\t\"Milling\": { \"name\": \"Milling\", \"number\": 46, \"color\": 3 },\n\t\t\"Measures\": { \"name\": \"Measures\", \"number\": 47, \"color\": 7 },\n\t\t\"Document\": { \"name\": \"Document\", \"number\": 48, \"color\": 7 },\n\t\t\"Reference\": { \"name\": \"Reference\", \"number\": 49, \"color\": 7 },\n\t\t\"dxf\": { \"name\": \"dxf\", \"number\": 50, \"color\": 7 },\n\t\t\"tDocu\": { \"name\": \"tDocu\", \"number\": 51, \"color\": 7 },\n\t\t\"bDocu\": { \"name\": \"bDocu\", \"number\": 52, \"color\": 7 },\n\t\t\"tGND_GNDA\": { \"name\": \"tGND_GNDA\", \"number\": 53, \"color\": 7 },\n\t\t\"bGND_GNDA\": { \"name\": \"bGND_GNDA\", \"number\": 54, \"color\": 1 },\n\t\t\"wert\": { \"name\": \"wert\", \"number\": 56, \"color\": 7 },\n\t\t\"Nets\": { \"name\": \"Nets\", \"number\": 91, \"color\": 2 },\n\t\t\"Busses\": { \"name\": \"Busses\", \"number\": 92, \"color\": 1 },\n\t\t\"Pins\": { \"name\": \"Pins\", \"number\": 93, \"color\": 2 },\n\t\t\"Symbols\": { \"name\": \"Symbols\", \"number\": 94, \"color\": 4 },\n\t\t\"Names\": { \"name\": \"Names\", \"number\": 95, \"color\": 7 },\n\t\t\"Values\": { \"name\": \"Values\", \"number\": 96, \"color\": 7 },\n\t\t\"Info\": { \"name\": \"Info\", \"number\": 97, \"color\": 7 },\n\t\t\"Guide\": { \"name\": \"Guide\", \"number\": 98, \"color\": 6 },\n\t\t\"Muster\": { \"name\": \"Muster\", \"number\": 100, \"color\": 7 },\n\t\t\"Patch_Top\": { \"name\": \"Patch_Top\", \"number\": 101, \"color\": 12 },\n\t\t\"Vscore\": { \"name\": \"Vscore\", \"number\": 102, \"color\": 7 },\n\t\t\"fp3\": { \"name\": \"fp3\", \"number\": 103, \"color\": 7 },\n\t\t\"Name\": { \"name\": \"Name\", \"number\": 104, \"color\": 7 },\n\t\t\"Beschreib\": { \"name\": \"Beschreib\", \"number\": 105, \"color\": 9 },\n\t\t\"BGA-Top\": { \"name\": \"BGA-Top\", \"number\": 106, \"color\": 4 },\n\t\t\"BD-Top\": { \"name\": \"BD-Top\", \"number\": 107, \"color\": 5 },\n\t\t\"fp8\": { \"name\": \"fp8\", \"number\": 108, \"color\": 7 },\n\t\t\"fp9\": { \"name\": \"fp9\", \"number\": 109, \"color\": 7 },\n\t\t\"fp0\": { \"name\": \"fp0\", \"number\": 110, \"color\": 7 },\n\t\t\"Patch_BOT\": { \"name\": \"Patch_BOT\", \"number\": 116, \"color\": 9 },\n\t\t\"_tsilk\": { \"name\": \"_tsilk\", \"number\": 121, \"color\": 7 },\n\t\t\"_bsilk\": { \"name\": \"_bsilk\", \"number\": 122, \"color\": 7 },\n\t\t\"tTestmark\": { \"name\": \"tTestmark\", \"number\": 123, \"color\": 7 },\n\t\t\"bTestmark\": { \"name\": \"bTestmark\", \"number\": 124, \"color\": 7 },\n\t\t\"tAdjust\": { \"name\": \"tAdjust\", \"number\": 131, \"color\": 7 },\n\t\t\"bAdjust\": { \"name\": \"bAdjust\", \"number\": 132, \"color\": 7 },\n\t\t\"HeatSink\": { \"name\": \"HeatSink\", \"number\": 151, \"color\": 7 },\n\t\t\"200bmp\": { \"name\": \"200bmp\", \"number\": 200, \"color\": 1 },\n\t\t\"201bmp\": { \"name\": \"201bmp\", \"number\": 201, \"color\": 2 },\n\t\t\"202bmp\": { \"name\": \"202bmp\", \"number\": 202, \"color\": 3 },\n\t\t\"203bmp\": { \"name\": \"203bmp\", \"number\": 203, \"color\": 4 },\n\t\t\"204bmp\": { \"name\": \"204bmp\", \"number\": 204, \"color\": 5 },\n\t\t\"205bmp\": { \"name\": \"205bmp\", \"number\": 205, \"color\": 6 },\n\t\t\"206bmp\": { \"name\": \"206bmp\", \"number\": 206, \"color\": 7 },\n\t\t\"207bmp\": { \"name\": \"207bmp\", \"number\": 207, \"color\": 8 },\n\t\t\"208bmp\": { \"name\": \"208bmp\", \"number\": 208, \"color\": 9 },\n\t\t\"209bmp\": { \"name\": \"209bmp\", \"number\": 209, \"color\": 7 },\n\t\t\"210bmp\": { \"name\": \"210bmp\", \"number\": 210, \"color\": 7 },\n\t\t\"Descript\": { \"name\": \"Descript\", \"number\": 250, \"color\": 3 },\n\t\t\"SMDround\": { \"name\": \"SMDround\", \"number\": 251, \"color\": 12 },\n\t\t\"cooling\": { \"name\": \"cooling\", \"number\": 254, \"color\": 7 }\n\t};\n\n\tEagleXMLParser.prototype.eagleLayer = function (layerName) {\n\t\t// eagle draw will replace layer info accordingly\n\t\tif (layerName === \"*.Cu\") layerName = \"Front\";\n\t\tif (layerName === \"*.Mask\") layerName = \"F.Mask\";\n\t\tif (!layerMaps[layerName]) return;\n\t\treturn eagleLayers [layerMaps[layerName]];\n\t}\n\n\tEagleXMLParser.prototype.parse = function (text) {\n\t\tvar parser = new DOMParser ();\n\t\tvar boardXML = parser.parseFromString (text, \"text/xml\");\n\t\tthis.parseDOM (boardXML)\n\t}\n\n\tEagleXMLParser.prototype.parseDOM = function(boardXML) {\n\n\t\tvar board = this.board;\n\t\t// store by eagle name\n\t\tboard.eagleLayersByName = {};\n\t\t// store by eagle number\n\t\tboard.layersByNumber = {};\n\n\t\tvar layers = boardXML.getElementsByTagName('layer');\n\t\tfor (var layerIdx = 0; layerIdx < layers.length; layerIdx++) {\n\t\t\tvar layerDict = this.parseLayer (layers[layerIdx]);\n\t\t\tboard.eagleLayersByName[layerDict.name] = layerDict;\n\t\t\tboard.layersByNumber[layerDict.number]  = layerDict;\n\t\t}\n\n\t\tboard.elements = {};\n\t\tvar elements = boardXML.getElementsByTagName('element');\n\t\tfor (var elementIdx = 0; elementIdx < elements.length; elementIdx++) {\n\t\t\tvar elemDict = this.parseElement (elements[elementIdx])\n\t\t\tboard.elements[elemDict.name] = elemDict;\n\t\t}\n\n\t\tboard.designRules = {};\n\t\t//hashmap signal name -> hashmap layer number -> hashmap 'wires'->wires array, 'vias'->vias array\n\t\tvar rules = boardXML.getElementsByTagName('designrules');\n\t\tfor (var ruleIdx = 0; ruleIdx < rules.length; ruleIdx++) {\n\t\t\tvar rule = rules[ruleIdx];\n\n\t\t\tvar ruleParams = rule.getElementsByTagName('param');\n\t\t\tfor (var ruleParamIdx = 0; ruleParamIdx < ruleParams.length; ruleParamIdx++) {\n\t\t\t\tvar ruleParam = ruleParams[ruleParamIdx];\n\t\t\t\tvar ruleParamVal = ruleParam.getAttribute (\"value\");\n\t\t\t\tvar m;\n\t\t\t\tif (m = ruleParamVal.match (/^([\\d\\.]+)mil$/))\n\t\t\t\t\truleParamVal = parseFloat(m[1])*0.0254;\n\t\t\t\tboard.designRules[ruleParam.getAttribute (\"name\")] = ruleParamVal;\n\t\t\t}\n\t\t}\n\n\n\t\tboard.signalItems = {};\n\t\t//hashmap signal name -> hashmap layer number -> hashmap 'wires'->wires array, 'vias'->vias array\n\t\tvar signals = boardXML.getElementsByTagName('signal');\n\t\tfor (var sigIdx = 0; sigIdx < signals.length; sigIdx++) {\n\t\t\tvar signal = signals[sigIdx];\n\t\t\tvar name = signal.getAttribute('name');\n\t\t\tvar signalLayers = {};\n\t\t\tboard.signalItems[name] = signalLayers;\n\n\t\t\tvar wires = signal.getElementsByTagName('wire');\n\t\t\tfor (var wireIdx = 0; wireIdx < wires.length; wireIdx++) {\n\t\t\t\tvar wireDict = this.parseWire( wires[wireIdx] );\n\t\t\t\tvar layer = wireDict.layer;\n\t\t\t\tif (!(signalLayers[layer])) signalLayers[layer] = {};\n\t\t\t\tvar layerItems = signalLayers[layer];\n\t\t\t\tif (!(layerItems['wires'])) layerItems['wires'] = [];\n\t\t\t\tvar layerWires = layerItems['wires'];\n\t\t\t\tlayerWires.push(wireDict);\n\t\t\t}\n\n\t\t\tvar vias = signal.getElementsByTagName('via');\n\t\t\tfor (var viaIdx = 0; viaIdx < vias.length; viaIdx++) {\n\t\t\t\tvar viaDict = this.parseVia(vias[viaIdx]);\n\t\t\t\tvar layers = viaDict.layers;\n\t\t\t\tif (!(signalLayers[layers])) signalLayers[layers] = {};\n\t\t\t\tvar layerItems = signalLayers[layers];\n\t\t\t\tif (!(layerItems['vias'])) layerItems['vias'] = [];\n\t\t\t\tvar layerVias = layerItems['vias'];\n\t\t\t\tlayerVias.push(viaDict);\n\t\t\t}\n\n\t\t\tvar contacts = signal.getElementsByTagName('contactref');\n\t\t\tfor (var contactIdx = 0; contactIdx < contacts.length; contactIdx++) {\n\t\t\t\tvar contact = contacts[contactIdx];\n\t\t\t\tvar elemName = contact.getAttribute('element');\n\t\t\t\tvar padName = contact.getAttribute('pad');\n\t\t\t\tvar elem = board.elements[elemName];\n\t\t\t\tif (elem) elem.padSignals[padName] = name;\n\t\t\t}\n\t\t}\n\n\t\tboard.packagesByName = {};\n\t\tvar packages = boardXML.getElementsByTagName('package');\n\t\tfor (var packageIdx = 0; packageIdx < packages.length; packageIdx++) {\n\t\t\tvar pkg = packages[packageIdx];\n\t\t\tvar packageName = pkg.getAttribute('name');\n\n\t\t\tvar descriptionEls = pkg.getElementsByTagName('description');\n\t\t\tif (descriptionEls && descriptionEls.length)\n\t\t\t\tvar description = descriptionEls[0].textContent;\n\n\t\t\tvar packageSmds = [];\n\t\t\tvar smds = pkg.getElementsByTagName('smd');\n\t\t\tfor (var smdIdx = 0; smdIdx < smds.length; smdIdx++) {\n\t\t\t\tvar smd = smds[smdIdx];\n\t\t\t\tpackageSmds.push(this.parseSmd(smd));\n\t\t\t}\n\n\t\t\tvar packageRects = [];\n\t\t\tvar rects = pkg.getElementsByTagName('rectangle');\n\t\t\tfor (var rectIdx = 0; rectIdx < rects.length; rectIdx++) {\n\t\t\t\tvar rect = rects[rectIdx];\n\t\t\t\tpackageRects.push(this.parseRect(rect));\n\t\t\t}\n\n\t\t\tvar packagePads = [];\n\t\t\tvar pads = pkg.getElementsByTagName('pad');\n\t\t\tfor (var padIdx = 0; padIdx < pads.length; padIdx++) {\n\t\t\t\tvar pad = pads[padIdx];\n\t\t\t\tpackagePads.push(this.parsePad(pad));\n\t\t\t}\n\n\t\t\tvar packagePolys = [];\n\t\t\tvar polys = pkg.getElementsByTagName('polygon');\n\t\t\tfor (var polyIdx = 0; polyIdx < polys.length; polyIdx++) {\n\t\t\t\tvar poly = polys[polyIdx];\n\t\t\t\tpackagePolys.push (this.parsePoly (poly));\n\t\t\t}\n\n\t\t\tvar packageWires = [];\n\t\t\tvar wires = pkg.getElementsByTagName('wire');\n\t\t\tfor (var wireIdx = 0; wireIdx < wires.length; wireIdx++) {\n\t\t\t\tvar wire = wires[wireIdx];\n\t\t\t\tvar wireDict = this.parseWire(wire);\n\t\t\t\tpackageWires.push(wireDict);\n\t\t\t}\n\n\t\t\tvar wires = pkg.getElementsByTagName('circle');\n\t\t\tfor (var wireIdx = 0; wireIdx < wires.length; wireIdx++) {\n\t\t\t\tvar wire = wires[wireIdx];\n\t\t\t\tvar wireDict = this.parseCircle(wire);\n\t\t\t\tpackageWires.push(wireDict);\n\t\t\t}\n\n\t\t\tvar packageHoles = [];\n\t\t\tvar holes = pkg.getElementsByTagName('hole');\n\t\t\tfor (var holeIdx = 0; holeIdx < holes.length; holeIdx++) {\n\t\t\t\tvar hole = holes[holeIdx];\n\t\t\t\tvar holeDict = this.parseHole(hole);\n\t\t\t\tpackageHoles.push(holeDict);\n\t\t\t}\n\n\t\t\tvar bbox = this.board.calcBBox (packageWires);\n\n\t\t\tvar packageTexts = [],\n\t\t\t\ttexts        = pkg.getElementsByTagName('text');\n\t\t\tfor (var textIdx = 0; textIdx < texts.length; textIdx++) {\n\t\t\t\tvar text = texts[textIdx];\n\t\t\t\tpackageTexts.push(this.parseText(text));\n\t\t\t}\n\n\n\t\t\tvar packageDict = {\n\t\t\t\tsmds:  packageSmds,\n\t\t\t\twires: packageWires,\n\t\t\t\ttexts: packageTexts,\n\t\t\t\tbbox:  bbox,\n\t\t\t\tpads:  packagePads,\n\t\t\t\tpolys: packagePolys,\n\t\t\t\tholes: packageHoles,\n\t\t\t\trects: packageRects,\n\t\t\t\tdescription: description\n\t\t\t};\n\t\t\tboard.packagesByName[packageName] = packageDict;\n\t\t}\n\n\t\tboard.plainWires = {};\n\t\tboard.plainTexts = {};\n\t\tboard.plainHoles = [];\n\t\tvar plains = boardXML.getElementsByTagName('plain');\t//Usually only one\n\t\tfor (var plainIdx = 0; plainIdx < plains.length; plainIdx++) {\n\t\t\tvar plain = plains[plainIdx],\n\t\t\t\twires = plain.getElementsByTagName('wire'),\n\t\t\t\ttexts = plain.getElementsByTagName('text'),\n\t\t\t\tholes = plain.getElementsByTagName('hole');\n\t\t\tfor (var wireIdx = 0; wireIdx < wires.length; wireIdx++) {\n\t\t\t\tvar wire = wires[wireIdx],\n\t\t\t\t\twireDict = this.parseWire(wire),\n\t\t\t\t\tlayer = wireDict.layer;\n\t\t\t\tif (!board.plainWires[layer]) board.plainWires[layer] = [];\n\t\t\t\tboard.plainWires[layer].push(wireDict);\n\t\t\t}\n\n\t\t\tfor (var textIdx = 0; textIdx < texts.length; textIdx++) {\n\t\t\t\tvar text = texts[textIdx],\n\t\t\t\t\ttextDict = this.parseText(text),\n\t\t\t\t\tlayer = textDict.layer;\n\t\t\t\tif (!board.plainTexts[layer]) board.plainTexts[layer] = [];\n\t\t\t\tboard.plainTexts[layer].push(textDict);\n\t\t\t}\n\n\t\t\tfor (var holeIdx = 0; holeIdx < holes.length; holeIdx++) {\n\t\t\t\tvar hole = holes[holeIdx],\n\t\t\t\t\tholeDict = this.parseHole(hole);\n\t\t\t\tboard.plainHoles.push(holeDict);\n\t\t\t}\n\t\t}\n\t}\n\n\tEagleXMLParser.prototype.parseSmd = function(smd) {\n\t\tvar smdX  = parseFloat(smd.getAttribute('x')),\n\t\t\tsmdY  = parseFloat(smd.getAttribute('y')),\n\t\t\tsmdDX = parseFloat(smd.getAttribute('dx')),\n\t\t\tsmdDY = parseFloat(smd.getAttribute('dy')),\n\t\t\trot   = smd.getAttribute('rot') || \"R0\",\n\t\t\troundness = parseInt (smd.getAttribute('roundness'));\n\n\t\treturn {\n\t\t\tx1:    smdX-0.5*smdDX,\n\t\t\ty1:    smdY-0.5*smdDY,\n\t\t\tx2:    smdX+0.5*smdDX,\n\t\t\ty2:    smdY+0.5*smdDY,\n\t\t\trot:   rot,\n\t\t\troundness: roundness,\n\t\t\tname:  smd.getAttribute('name'),\n\t\t\tlayer: smd.getAttribute('layer')\n\t\t};\n\t}\n\n\tEagleXMLParser.prototype.parseRect = function(rect) {\n\t\treturn {\n\t\t\t'x1'   : parseFloat(rect.getAttribute('x1')),\n\t\t\t'y1'   : parseFloat(rect.getAttribute('y1')),\n\t\t\t'x2'   : parseFloat(rect.getAttribute('x2')),\n\t\t\t'y2'   : parseFloat(rect.getAttribute('y2')),\n\t\t\t'layer': rect.getAttribute('layer')};\n\t}\n\n\n\tEagleXMLParser.prototype.parsePoly = function(poly) {\n\t\tvar width = parseFloat(poly.getAttribute('width'));\n\t\tvar vertexes = [];\n\t\t[].slice.apply (poly.getElementsByTagName ('vertex')).forEach (function (vertexEl) {\n\t\t\tvertexes.push ({\n\t\t\t\t'x':parseFloat (vertexEl.getAttribute ('x')),\n\t\t\t\t'y':parseFloat (vertexEl.getAttribute ('y'))\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tvertexes: vertexes,\n\t\t\tlayer: poly.getAttribute('layer'),\n\t\t\twidth: width\n\t\t};\n\t}\n\n\n\tEagleXMLParser.prototype.parsePad = function(pad) {\n\t\tvar drill = parseFloat(pad.getAttribute('drill'));\n\t\tvar diameter = parseFloat(pad.getAttribute('diameter'));\n\t\t// TODO: use proper measurements\n\t\t// designrules contains such parameters:\n\t\t// restring in pads and vias are defined in percent of the drill diameter\n\t\t// rvPadTop, rvPadInner, rvPadBottom — is a restring for top, inner and bottom layers\n\t\t// rlMinPadTop, rlMaxPadTop — min and max limits for top layer and so on\n\n\t\tif (isNaN (diameter)) diameter = drill * 1.5;\n\t\tvar padRot = pad.getAttribute('rot') || \"R0\"\n\t\treturn {\n\t\t\tx:     parseFloat(pad.getAttribute('x')),\n\t\t\ty:     parseFloat(pad.getAttribute('y')),\n\t\t\tdrill: drill,\n\t\t\tname:  pad.getAttribute('name'),\n\t\t\tshape: pad.getAttribute('shape'),\n\t\t\tdiameter: diameter,\n\t\t\trot:   padRot\n\t\t};\n\t}\n\n\tEagleXMLParser.prototype.parseVia = function(via) {\n\t\t// TODO: use proper measurements\n\t\t// designrules contains such parameters:\n\t\t// restring in pads and vias are defined in percent of the drill diameter\n\t\t// rvViaOuter, rvViaInner — is a restring for top/bottom and inner layers\n\t\t// rlMinViaOuter, rlMaxViaOuter — min and max limits for top layer and so on\n\n\t\t// TODO: check for inner vias\n\t\tvar drill = parseFloat(via.getAttribute('drill'));\n\t\tvar viaType = 'Outer';\n\t\tvar dr = this.board.designRules;\n\t\tvar viaMult = parseFloat (dr['rvVia' + viaType]);\n\t\tvar viaMax  = parseFloat (dr['rlMaxVia' + viaType]);\n\t\tvar viaMin  = parseFloat (dr['rlMinVia' + viaType]);\n\t\tvar viaRest = drill * viaMult;\n\t\tif (viaRest < viaMin) {\n\t\t\tviaRest = viaMin;\n\t\t} else if (viaRest > viaMax) {\n\t\t\tviaRest = viaMax;\n\t\t}\n\n\t\treturn {\n\t\t\tx:        parseFloat(via.getAttribute('x')),\n\t\t\ty:        parseFloat(via.getAttribute('y')),\n\t\t\tdrill:    drill,\n\t\t\tdiameter: drill + viaRest*2,\n\t\t\tlayers:   via.getAttribute('extent'),\n\t\t\tshape:    via.getAttribute('shape')\n\t\t};\n\t}\n\n\tEagleXMLParser.prototype.parseHole = function(hole) {\n\t\treturn {\n\t\t\t'x':parseFloat(hole.getAttribute('x')),\n\t\t\t'y':parseFloat(hole.getAttribute('y')),\n\t\t\t'drill':parseFloat(hole.getAttribute('drill'))\n\t\t};\n\t}\n\n\t// special thanks to http://paulbourke.net/geometry/circlesphere/\n\tfunction circleCenter (x1, y1, x2, y2, angle) {\n\n\t\t/* dx and dy are the vertical and horizontal distances between\n\t\t* the circle centers.\n\t\t*/\n\t\tvar dx = x2 - x1;\n\t\tvar dy = y2 - y1;\n\n\t\tif (Math.abs(angle) === 180) {\n\t\t\tvar cx = x1 + dx/2,\n\t\t\t\tcy = y1 + dy/2,\n\t\t\t\tangle1 = Math.atan2 (y1 - cy, cx - x1),\n\t\t\t\tangle2 = Math.atan2 (y2 - cy, cx - x2);\n\t\t\treturn [cx, cy, angle1, Math.sqrt (dx*dx/4 + dy*dy/4)];\n\t\t}\n\n\t\t/* Determine the straight-line distance between the centers. */\n\t\t//d = sqrt((dy*dy) + (dx*dx));\n\t\t//d = hypot(dx,dy); // Suggested by Keith Briggs\n\t\tvar d = Math.sqrt (dx*dx + dy*dy);\n\n\t\tvar r = Math.abs (d / 2 / Math.sin (angle/180/2*Math.PI)),\n\t\t\tr0 = r,\n\t\t\tr1 = r;\n\n\t\t/* Check for solvability. */\n\t\tif (d > (r0 + r1)) {\n\t\t\t/* no solution. circles do not intersect. */\n\t\t\tconsole.log (\"no solution. circles do not intersect\", d, r0, r1);\n\t\t\treturn;\n\t\t}\n\n\t\tif (d < Math.abs (r0 - r1)) {\n\t\t\t/* no solution. one circle is contained in the other */\n\t\t\tconsole.log (\"no solution. one circle is contained in the other\", d, r0, r1);\n\t\t\treturn;\n\t\t}\n\n\t\t/* 'point 2' is the point where the line through the circle\n\t\t* intersection points crosses the line between the circle\n\t\t* centers.\n\t\t*/\n\n\t\t/* Determine the distance from point 0 to point 2. */\n\t\tvar a = ((r0*r0) - (r1*r1) + (d*d)) / (2.0 * d) ;\n\n\t\t/* Determine the coordinates of point 2. */\n\t\tvar x3 = x1 + (dx * a/d);\n\t\tvar y3 = y1 + (dy * a/d);\n\n\t\t/* Determine the distance from point 2 to either of the\n\t\t* intersection points.\n\t\t*/\n\t\tvar h = Math.sqrt((r0*r0) - (a*a));\n\n\t\t/* Now determine the offsets of the intersection points from\n\t\t* point 2.\n\t\t*/\n\n\t\tvar rx = -dy * (h/d),\n\t\t\try = dx * (h/d);\n\n\t\t/* Determine the absolute intersection points. */\n\t\tvar cx1 = x3 + rx,\n\t\t\tcy1 = y3 + ry,\n\t\t\tcx2 = x3 - rx,\n\t\t\tcy2 = y3 - ry,\n\t\t\trad11 = Math.atan2 (y1 - cy1, cx1 - x1),\n\t\t\trad12 = Math.atan2 (y2 - cy1, cx1 - x2),\n\t\t\trad21 = Math.atan2 (y1 - cy2, cx2 - x1),\n\t\t\trad22 = Math.atan2 (y2 - cy2, cx2 - x2),\n\t\t\tangle1 = (rad11 - rad12)/Math.PI*180,\n\t\t\tangle2 = (rad21 - rad22)/Math.PI*180,\n\t\t\tdAngle1 = (angle - angle1) % 360,\n\t\t\tdAngle2 = (angle - angle2) % 360;\n\n\t\tif (-0.0000001 < dAngle1 && dAngle1 < 0.0000001) {\n\t\t\treturn [cx1, cy1, rad11, r];\n\t\t} else if (-0.0000001 < dAngle2 && dAngle2 < 0.0000001) {\n\t\t\treturn [cx2, cy2, rad21, r];\n\t\t} else {\n\t\t\tconsole.log (\"something wrong: angle:\", angle, \"angle1:\", angle1, \"dangle1\", (-0.0000001 < dAngle1 || dAngle1 < 0.0000001), \"angle2:\", angle2, \"dangle2:\", (-0.0000001 < dAngle2 || dAngle2 < 0.0000001));\n\t\t\treturn [cx2, cy2, rad21, r];\n\t\t}\n\n\t\t// return [cx1, cy1, cx2, cy2];\n\t}\n\n\tEagleXMLParser.prototype.parseWire = function(wire) {\n\t\tvar width = parseFloat(wire.getAttribute('width'));\n\t\tif (width <= 0.0) width = this.minLineWidth;\n\n\t\tvar layer = parseInt(wire.getAttribute('layer'));\n\n\t\tvar x1 = parseFloat(wire.getAttribute('x1')),\n\t\t\ty1 = parseFloat(wire.getAttribute('y1')),\n\t\t\tx2 = parseFloat(wire.getAttribute('x2')),\n\t\t\ty2 = parseFloat(wire.getAttribute('y2'));\n\n\t\tvar style = wire.getAttribute (\"style\");\n\n\t\tvar curve = parseInt(wire.getAttribute('curve'));\n\n\t\tif (curve) {\n\n\t\t\tvar center = circleCenter (x1, y1, x2, y2, curve);\n\n\t\t\tvar angle = Math.PI * (curve/180);\n\n\t\t\tif (angle < 0) {\n\t\t\t\tcenter[2] += - angle;\n\t\t\t\tangle = - angle;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: center[0],\n\t\t\t\ty: center[1],\n\t\t\t\tradius: center[3],\n\t\t\t\tstart: Math.PI - center[2],\n\t\t\t\tangle: angle,\n\t\t\t\tcurve: curve,\n\t\t\t\twidth: width,\n\t\t\t\tlayer: layer,\n\t\t\t\tstyle: style,\n\t\t\t\tcap: wire.getAttribute('cap'),\n\t\t\t\trot: wire.getAttribute('rot') || \"R0\"\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx1: x1,\n\t\t\ty1: y1,\n\t\t\tx2: x2,\n\t\t\ty2: y2,\n\t\t\tstyle: style,\n\t\t\twidth: width,\n\t\t\tlayer: layer\n\t\t};\n\n\t}\n\n\tEagleXMLParser.prototype.parseCircle = function(wire) {\n\t\tvar width = parseFloat(wire.getAttribute('width'));\n\t\tif (width <= 0.0) width = this.minLineWidth;\n\n\t\tvar layer = parseInt(wire.getAttribute('layer'));\n\n\t\tvar tagName = wire.tagName;\n\n\t\treturn {\n\t\t\tx: parseFloat(wire.getAttribute (\"x\")),\n\t\t\ty: parseFloat(wire.getAttribute (\"y\")),\n\t\t\tradius: parseFloat(wire.getAttribute (\"radius\")),\n\t\t\tstart: 0,\n\t\t\tangle: Math.PI * 2,\n\t\t\tcurve: 360,\n\t\t\twidth: width,\n\t\t\tlayer: layer\n\t\t}\n\t}\n\n\n\tEagleXMLParser.prototype.parseText = function(text) {\n\t\tvar content = text.textContent;\n\t\tif (!content) content = \"\";\n\t\tvar textRot = text.getAttribute('rot') || \"R0\";\n\t\tvar textAlign = text.getAttribute('align') || \"\",\n\t\t\talign,\n\t\t\tvalign,\n\t\t\ttextAngle = this.board.angleForRot (textRot);\n\n\t\tif (textAlign === \"center\") {\n\t\t\talign = \"center\";\n\t\t\tvalign = \"middle\";\n\t\t} else {\n\t\t\tif (textAlign.match (/\\-right$/)) {\n\t\t\t\talign = \"right\";\n\t\t\t} else if (textAlign.match (/\\-left$/)) {\n\t\t\t\talign = \"left\";\n\t\t\t} else if (textAlign.match (/\\-center$/)) {\n\t\t\t\talign = \"center\";\n\t\t\t}\n\t\t\tif (textAlign.match (/^top\\-/)) {\n\t\t\t\tvalign = \"top\";\n\t\t\t} else if (textAlign.match (/^bottom\\-/)) {\n\t\t\t\tvalign = \"bottom\";\n\t\t\t} else if (textAlign.match (/^center\\-/)) {\n\t\t\t\tvalign = \"middle\";\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx:       parseFloat(text.getAttribute('x')),\n\t\t\ty:       parseFloat(text.getAttribute('y')),\n\t\t\tsize:    parseFloat(text.getAttribute('size')),\n\t\t\tlayer:   parseInt(text.getAttribute('layer')),\n\t\t\tratio:   parseInt(text.getAttribute('ratio')),\n\t\t\tinterlinear: parseInt(text.getAttribute('distance')) || 50,\n\t\t\talign:   align,\n\t\t\tvalign:  valign,\n\t\t\trot:     textRot,\n\t\t\tflipText: ((textAngle.degrees > 90) && (textAngle.degrees <=270)),\n\t\t\tfont:    text.getAttribute('font'),\n\t\t\tcontent: content\n\t\t};\n\t}\n\n\tEagleXMLParser.prototype.parseElement = function(elem) {\n\t\tvar elemRot    = elem.getAttribute('rot') || \"R0\",\n\t\t\telemMatrix = this.board.matrixForRot(elemRot);\n\n\t\tvar attribs = {},\n\t\t\telemAngle = this.board.angleForRot (elemRot),\n\t\t\tflipText = (elemAngle.degrees >= 90) && (elemAngle.degrees <= 270),\n\t\t\telemAttribs = elem.getElementsByTagName('attribute');\n\n\t\tfor (var attribIdx = 0; attribIdx < elemAttribs.length; attribIdx++) {\n\n\t\t\tvar elemAttrib = elemAttribs[attribIdx],\n\t\t\t\tattribDict = {},\n\t\t\t\tname = elemAttrib.getAttribute('name');\n\n\t\t\tif (name) {\n\t\t\t\tattribDict.name = name;\n\t\t\t\tif (elemAttrib.getAttribute('x'))     { attribDict.x = parseFloat(elemAttrib.getAttribute('x')); }\n\t\t\t\tif (elemAttrib.getAttribute('y'))     { attribDict.y = parseFloat(elemAttrib.getAttribute('y')); }\n\t\t\t\tif (elemAttrib.getAttribute('size'))  { attribDict.size = parseFloat(elemAttrib.getAttribute('size')); }\n\t\t\t\tif (elemAttrib.getAttribute('layer')) { attribDict.layer = parseInt(elemAttrib.getAttribute('layer')); }\n\t\t\t\tattribDict.font = elemAttrib.getAttribute('font');\n\n\t\t\t\tvar rot = elemAttrib.getAttribute('rot');\n\t\t\t\tif (!rot) { rot = \"R0\"; }\n\t\t\t\tvar attribAngle = this.board.angleForRot (rot);\n\t\t\t\tattribDict.flipText = (attribAngle.degrees >= 90) && (attribAngle.degrees <= 270);\n\t\t\t\tattribDict.rot = rot;\n\t\t\t\tattribDict.display = elemAttrib.getAttribute('display');\n\t\t\t\tattribs[name] = attribDict;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t'pkg'   : elem.getAttribute('package'),\n\t\t\t'name'      : elem.getAttribute('name'),\n\t\t\t'value'     : elem.getAttribute('value'),\n\t\t\t'x'         : parseFloat(elem.getAttribute('x')),\n\t\t\t'y'         : parseFloat(elem.getAttribute('y')),\n\t\t\t'rot'       : elemRot,\n\t\t\t'matrix'    : elemMatrix,\n\t\t\t'mirror'    : elemRot.indexOf('M') == 0,\n\t\t\t'flipText'  : flipText,\n\t\t\t'smashed'   : elem.getAttribute('smashed') && (elem.getAttribute('smashed').toUpperCase() == 'YES'),\n\t\t\t'attributes': attribs,\n\t\t\t'padSignals': {}\t\t\t//to be filled later\n\t\t};\n\t};\n\n\tEagleXMLParser.prototype.parseLayer = function(layer) {\n\t\treturn {'name'  : layer.getAttribute('name'),\n\t\t\t\t'number': parseInt(layer.getAttribute('number')),\n\t\t\t\t'color' : parseInt(layer.getAttribute('color'))};\n\t}\n\n\n//\tif (typeof process !== \"undefined\") {\n//\t\tvar ex = new EagleXMLParser ();\n//\t\tvar fs = require (\"fs\");\n//\t\tex.parse (fs.readFileSync (process.argv[2]));\n//\t}\n\n\treturn EagleXMLParser;\n\n}));\n"]}