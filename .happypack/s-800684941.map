{"version":3,"sources":["app\\renderer\\main\\components\\Project\\ProjectLinkRemote\\ProjectLinkRemote.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAGA;;IAAY,e;;AACZ;;IAAY,W;;AAGZ;;;;AACA;;;;AACA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAfA;;;AAKA;;;AAIA;;;AAKA;;;AAGA;AACA;AACA;;AAEA,IAAM,yCAAY,gBAAM,WAAN,CAAkB;AAAA;AAClC,YADkC,wBACtB;AACV,SAAK,KAAL,CAAW,eAAX,CAA2B,UAA3B,CAAsC;AACpC,iBAAW,KAAK,KAAL,CAAW,OAAX,CAAmB,GADM;AAEpC,gBAAU,OAF0B;AAGpC,oBAAc,EAHsB;AAIpC,YAAM,EAJ8B;AAKpC,UAAI;AALgC,KAAtC;AAOD,GATiC;AAUlC,YAVkC,sBAUvB,gBAVuB,EAUN;AAAA;;AAC1B;AACA,QAAG,CAAC,iBAAiB,QAAjB,CAA0B,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB,QAA/C,CAAJ,EAA6D;AAC3D,WAAK,KAAL,CAAW,WAAX,CAAuB,YAAvB,CAAoC,iBAAiB,QAArD,EACC,IADD,CACM,UAAC,QAAD,EAAc;AAClB,cAAK,KAAL,CAAW,QAAX,CAAoB,wBAAQ,MAAR,CAAe,MAAK,KAAL,CAAW,KAA1B,EAAiC,iBAAiB,KAAlD,CAApB;AACA,gBAAQ,GAAR,CAAY,QAAZ;AACD,OAJD,EAKC,KALD,CAKO,UAAC,QAAD,EAAc;AAClB,gBAAQ,GAAR,CAAY,QAAZ;AACF,OAPD;AAQD;AACD;AAVA,SAWI;AACF,aAAK,KAAL,CAAW,QAAX,CAAoB,wBAAQ,MAAR,CAAe,KAAK,KAAL,CAAW,KAA1B,EAAiC,iBAAiB,KAAlD,CAApB;AACD;AACF,GA1BiC;AA2BlC,QA3BkC,oBA2B1B;AAAA,iBAC2B,KAAK,KADhC;AAAA,QACC,KADD,UACC,KADD;AAAA,QACQ,KADR,UACQ,KADR;AAAA,QACe,QADf,UACe,QADf;;;AAGN,QAAI,UAAU,CACZ;AACE,aAAO,SADT;AAEE,aAAO,SAFT;AAGE,gBAAU,SAHZ;AAIE,gBAAU,kBAAC,QAAD;AAAA,eAAc,SAAS,OAAT,CAAiB,EAA/B;AAAA;AAJZ,KADY,EAMT;AACD,aAAO,OADN;AAED,aAAO,OAFN;AAGD,gBAAU,QAHT;AAID,gBAAU,kBAAC,QAAD;AAAA,eAAc,SAAS,MAAT,CAAgB,YAA9B;AAAA;AAJT,KANS,EAWV;AACA,aAAO,MADP;AAEA,aAAO,MAFP;AAGA,gBAAU,EAHV;AAIA,gBAAU,kBAAC,QAAD;AAAA,eAAc,IAAd;AAAA;AAJV,KAXU,CAAd;;AAmBA,WACE;AAAA;AAAA;AACE;AACE,cAAK,iBADP;AAEE,eAAO,KAFT;AAGE,iBAAS,OAHX;AAIE,kBAAU,KAAK,UAJjB;AAKE,mBAAW;AALb;AADF,KADF;AAWD;AA5DiC,CAAlB,CAAZ,CAAN;;AA+DA;AACA;AACA;;AAEA,SAAS,eAAT,cAAqC;AAAA,MAAX,IAAW,QAAX,IAAW;;AAAA;;AACnC,SAAO;AACL;AADK,GAAP;AAGD;;AAGD,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,qBAAiB,+BAAmB,eAAnB,EAAoC,QAApC,CADZ;AAEL,iBAAa,+BAAmB,WAAnB,EAAgC,QAAhC,CAFR;AAGL,cAAU;AAHL,GAAP;AAKD;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,SAA7C,C","file":"ProjectLinkRemote.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as ProjectsActions from 'app/shared/actions/projects.js';\nimport * as AuthActions from 'app/shared/actions/auth.js';\n\n// Component\nimport Select from 'react-select';\nimport selectCss from 'app/renderer/assets/css/select.css';\nimport { actions } from 'react-redux-form';\n\n// Styles\nimport classNames from 'classnames';\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// COMPONENT /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nconst Component = React.createClass({\n  linkRemote(){\n    this.props.ProjectsActions.linkRemote({\n      projectId: this.props.project._id,\n      provider: 'drive',\n      path_display: '',\n      path: '',\n      id: ''\n    })\n  },\n  onChangeFn(selectedProvider){\n    // If the selected provider is not authed, auth it\n    if(!selectedProvider.isAuthed(this.props.auth.user.accounts)){\n      this.props.AuthActions.authenticate(selectedProvider.authType)\n      .then((response) => {\n        this.props.dispatch(actions.change(this.props.model, selectedProvider.value));\n        console.log(response);\n      })\n      .catch((response) => {\n         console.log(response);\n      });\n    }\n    // Else, we update the model straight away\n    else{\n      this.props.dispatch(actions.change(this.props.model, selectedProvider.value));\n    }\n  },\n  render(){\n    const {model, value, dispatch} = this.props\n\n    var options = [\n      {\n        value: 'dropbox',\n        label: 'Dropbox',\n        authType: 'dropbox',\n        isAuthed: (accounts) => accounts.dropbox.id\n      }, {\n        value: 'drive',\n        label: 'Drive',\n        authType: 'google',\n        isAuthed: (accounts) => accounts.google.refreshToken\n      },{\n        value: 'none',\n        label: 'None',\n        authType: '',\n        isAuthed: (accounts) => true\n      }\n    ];\n\n    return (\n      <div>\n        <Select\n          name=\"form-field-name\"\n          value={value}\n          options={options}\n          onChange={this.onChangeFn}\n          clearable={false}\n        />\n      </div>\n    );\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CONTAINER /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps({auth}, {}) {\n  return {\n    auth\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    ProjectsActions: bindActionCreators(ProjectsActions, dispatch),\n    AuthActions: bindActionCreators(AuthActions, dispatch),\n    dispatch: dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}