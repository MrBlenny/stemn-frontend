{"version":3,"sources":["app\\renderer\\main\\pages\\ProjectPage\\ProjectSettingsPage\\ProjectSettingsPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;;IAAY,e;;AAMZ;;;;AACA;;;;AAGA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAjBA;;;AAIA;;;AAGA;;;AAGA;;;AAIA;;;AAKA;AACA;AACA;;AAEA,IAAM,UAAU,SAAV,OAAU,CAAC,SAAD,EAAY,SAAZ,EAA0B;AACxC,MAAG,UAAU,OAAV,IAAqB,UAAU,OAAV,CAAkB,IAA1C,EAA+C;AAC7C,QAAG,CAAC,SAAD,IAAc,UAAU,OAAV,CAAkB,IAAlB,CAAuB,GAAvB,KAA+B,UAAU,OAAV,CAAkB,IAAlB,CAAuB,GAAvE,EAA2E,CAC1E;AACF;AACF,CALD;;AAOO,IAAM,6DAAY,gBAAM,WAAN,CAAkB;AAAA;;;AAEzC;AACA,oBAHyC,gCAGpB;AAAE,YAAQ,KAAK,KAAb;AAAqB,GAHH;AAIzC,2BAJyC,qCAIf,SAJe,EAIJ;AAAE,YAAQ,SAAR,EAAmB,KAAK,KAAxB;AAA+B,GAJ7B;AAMzC,QANyC,oBAMhC;AAAA,iBACqD,KAAK,KAD1D;AAAA,QACC,WADD,UACC,WADD;AAAA,QACc,OADd,UACc,OADd;AAAA,QACuB,eADvB,UACuB,eADvB;AAAA,QACwC,QADxC,UACwC,QADxC;;AAEP,QAAM,wBAAsB,QAAQ,IAAR,CAAa,GAAzC;;AAEA,WACE;AAAA;AAAA,QAAK,WAAW,8BAAQ,SAAR,GAAkB,6BAAlC;AACE;AAAA;AAAA,UAAK,OAAO,EAAC,OAAO,OAAR,EAAiB,aAAa,MAA9B,EAAZ;AACE;AAAA;AAAA,YAAK,WAAW,8BAAQ,KAAxB,EAA+B,OAAO,EAAC,SAAS,KAAV,EAAtC;AACE;AAAA;AAAA,cAAS,IAAO,QAAP,cAAT,EAAqC,mBAAmB,IAAxD;AAAA;AAAA,WADF;AAEE;AAAA;AAAA,cAAS,IAAO,QAAP,oBAAT;AAAA;AAAA,WAFF;AAGE;AAAA;AAAA,cAAS,IAAO,QAAP,mBAAT;AAAA;AAAA;AAHF;AADF,OADF;AAQE;AAAA;AAAA,UAAK,OAAO,EAAC,OAAO,OAAR,EAAZ;AACG,aAAK,KAAL,CAAW;AADd;AARF,KADF;AAcD;AAxBwC,CAAlB,CAAZ,CAAN;;AA4BP;AACA;AACA;;AAEA,SAAS,eAAT,OAAsD,UAAtD,EAAkE;AAAA,MAAxC,QAAwC,QAAxC,QAAwC;AAAA,MAA9B,eAA8B,QAA9B,eAA8B;;AAChE,SAAO;AACL,aAAS,SAAS,IAAT,CAAc,WAAW,MAAX,CAAkB,IAAhC,CADJ;AAEL,oCAA8B,WAAW,MAAX,CAAkB;AAF3C,GAAP;AAID;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,sBADK;AAEL,qBAAiB,+BAAmB,eAAnB,EAAoC,QAApC;AAFZ,GAAP;AAID;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,SAA7C,C","file":"ProjectSettingsPage.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as ProjectsActions from 'app/shared/actions/projects.js';\n\n// Component Core\nimport React from 'react';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './ProjectSettingsPage.css'\n\n// Sub Components\nimport { Field, actions } from 'react-redux-form';\n\nimport NavPill from 'app/renderer/main/components/Buttons/NavPill/NavPill'\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// COMPONENT /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nconst onMount = (nextProps, prevProps) => {\n  if(nextProps.project && nextProps.project.data){\n    if(!prevProps || nextProps.project.data._id !== prevProps.project.data._id){\n    }\n  }\n}\n\nexport const Component = React.createClass({\n\n  // Mounting\n  componentWillMount() { onMount(this.props) },\n  componentWillReceiveProps(nextProps) { onMount(nextProps, this.props)},\n\n  render() {\n    const { entityModel, project, ProjectsActions, dispatch } = this.props;\n    const baseLink = `project/${project.data._id}`;\n\n    return (\n      <div className={classes.container+' layout-row flex scroll-box'}>\n        <div style={{width: '250px', marginRight: '15px'}}>\n          <div className={classes.panel} style={{padding: '0px'}}>\n            <NavPill to={`${baseLink}/settings`} onlyActiveOnIndex={true}>General Settings</NavPill>\n            <NavPill to={`${baseLink}/settings/tasks`}>Task Settings</NavPill>\n            <NavPill to={`${baseLink}/settings/team`}>Team Settings</NavPill>\n          </div>\n        </div>\n        <div style={{width: '650px'}}>\n          {this.props.children}\n        </div>\n     </div>\n    );\n  }\n});\n\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CONTAINER /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps({projects, projectSettings}, otherProps) {\n  return {\n    project: projects.data[otherProps.params.stub],\n    entityModel: `projects.data.${otherProps.params.stub}`\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ProjectsActions: bindActionCreators(ProjectsActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}