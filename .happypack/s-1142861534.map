{"version":3,"sources":["app\\renderer\\main\\modules\\Files\\PreviewFile\\PreviewCode\\PreviewCode.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA,IAAM,wBAAwB,QAAQ,OAAR,CAAgB,kBAAhB,EAAoC,IAApC,CAA9B;AAGO,IAAM,uDAAS,gBAAM,WAAN,CAAkB;AAAA;AACtC,QADsC,oBAC7B;AAAA;;AAAA,iBACqB,KAAK,KAD1B;AAAA,QACC,IADD,UACC,IADD;AAAA,QACO,SADP,UACO,SADP;;;AAGP,QAAG,QAAQ,SAAX,EAAqB;AACnB,iBAAW,YAAI;AAAE;AACf,cAAK,IAAL,CAAU,UAAV,CAAqB,SAArB,GAAiC,EAAjC;AACA,YAAM,iBAAiB,0BAAW,MAAK,IAAL,CAAU,UAArB,EAAiC;AACtD,iBAAO,IAD+C;AAEtD,0BAAgB,IAFsC;AAGtD,oBAAU,IAH4C;AAItD,oBAAU,KAJ4C;AAKtD,wBAAc,IALwC;AAMtD,uBAAa;AANyC,SAAjC,CAAvB;AAQA;AACA,YAAM,WAAW,qBAAW,mBAAX,CAA+B,SAA/B,CAAjB;AACA,YAAM,OAAO,WAAW,SAAS,IAApB,GAA2B,MAAxC;AACA,YAAG,QAAQ,QAAQ,MAAnB,EAA0B;AACxB,cAAM,kBAAgB,IAAhB,SAAwB,IAAxB,QAAN;AACA,gCAAsB,QAAtB;AACA,yBAAe,SAAf,CAAyB,MAAzB,EAAiC,IAAjC;AACD;AACF,OAlBD,EAkBG,CAlBH;AAmBD;;AAED,WACE,uCAAK,WAAU,iBAAf,EAAiC,KAAI,YAArC,GADF;AAGD;AA7BqC,CAAlB,CAAT,CAAN;;gDAiCQ,gBAAM,WAAN,CAAkB;AAC/B,oBAD+B,gCACV;AAAE,SAAK,OAAL,CAAa,KAAK,KAAlB;AAA0B,GADlB;AAE/B,2BAF+B,qCAEL,SAFK,EAEM;AAAE,SAAK,OAAL,CAAa,SAAb,EAAwB,KAAK,KAA7B;AAAoC,GAF5C;AAG/B,SAH+B,mBAGvB,SAHuB,EAGZ,SAHY,EAGD;AAC5B;AACA,QAAG,CAAC,SAAD,IAAc,UAAU,SAAV,KAAwB,UAAU,SAAnD,EAA6D;AAC3D;AACA,UAAG,CAAC,UAAU,QAAd,EAAuB;AACrB,kBAAU,UAAV,CAAqB;AACnB,qBAAa,UAAU,QAAV,CAAmB,OAAnB,CAA2B,GADrB;AAEnB,kBAAa,UAAU,QAAV,CAAmB,MAFb;AAGnB,sBAAa,UAAU,QAAV,CAAmB;AAHb,SAArB;AAKD;AACF;AACF,GAf8B;AAgB/B,QAhB+B,oBAgBtB;AAAA,kBACwB,KAAK,KAD7B;AAAA,QACC,QADD,WACC,QADD;AAAA,QACW,QADX,WACW,QADX;;AAEP,WACE;AAAA;AAAA,QAAK,WAAU,oBAAf;AACI,kBAAY,SAAS,IAArB,GAA4B,8BAAC,MAAD,IAAQ,WAAW,SAAS,SAA5B,EAAuC,MAAM,SAAS,IAAtD,GAA5B,GAA6F,EADjG;AAEI,iBAAW,0DAAgB,MAAM,SAAS,OAA/B,GAAX,GAAwD;AAF5D,KADF;AAMD;AAxB8B,CAAlB,C","file":"PreviewCode.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React from 'react';\n\nimport codemirror from 'codemirror'\nimport 'codemirror/mode/meta.js'\nconst requireCodemirrorMode = require.context(\"codemirror/mode/\", true);\nimport LoadingOverlay     from 'app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx';\n\nexport const Viewer = React.createClass({\n  render() {\n    const { data, extension } = this.props;\n\n    if(data && extension){\n      setTimeout(()=>{ // Give the component time to render (so we get refs)\n        this.refs.codemirror.innerHTML = \"\";\n        const editorInstance = codemirror(this.refs.codemirror, {\n          value: data,\n          indentWithTabs: true,\n          readOnly: true,\n          dragDrop: false,\n          lineWrapping: true,\n          lineNumbers: true,\n        });\n        // Get Mode\n        const modeInfo = codemirror.findModeByExtension(extension);\n        const mode = modeInfo ? modeInfo.mode : 'null';\n        if(mode && mode != 'null'){\n          const modePath = `./${mode}/${mode}.js`\n          requireCodemirrorMode(modePath);\n          editorInstance.setOption(\"mode\", mode);\n        }\n      }, 1)\n    }\n\n    return (\n      <div className=\"scroll-box flex\" ref=\"codemirror\"></div>\n    )\n  }\n});\n\n\nexport default React.createClass({\n  componentWillMount() { this.onMount(this.props) },\n  componentWillReceiveProps(nextProps) { this.onMount(nextProps, this.props)},\n  onMount(nextProps, prevProps) {\n    // If the previewId changes, download a new file\n    if(!prevProps || nextProps.previewId !== prevProps.previewId){\n      // If we don't already have the file, get it\n      if(!nextProps.fileData){\n        nextProps.downloadFn({\n          projectId  : nextProps.fileMeta.project._id,\n          fileId     : nextProps.fileMeta.fileId,\n          revisionId : nextProps.fileMeta.revisionId\n        })\n      }\n    }\n  },\n  render() {\n    const { fileData, fileMeta } = this.props;\n    return (\n      <div className=\"layout-column flex\">\n        { fileData && fileData.data ? <Viewer extension={fileMeta.extension} data={fileData.data} /> : '' }\n        { fileData ? <LoadingOverlay show={fileData.loading} /> : '' }\n      </div>\n    )\n  }\n});\n"]}