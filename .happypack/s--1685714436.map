{"version":3,"sources":["app\\shared\\reducers\\auth.js"],"names":[],"mappings":";;;;;;;;kBAmHe,YAAwC;AAAA,MAA9B,KAA8B,yDAAtB,YAAsB;AAAA,MAAR,MAAQ;;AACrD,MAAI,CAAC,MAAM,QAAX,EAAqB;AACnB,yBAAa,YAAb,EAA8B,KAA9B,IAAqC,UAAU,IAA/C;AACD;AACD,SAAO,6BAAQ,WAAR,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,MAApC,CAAP;AACD,C;;AAxHD;;AACA;;;;;;AAGA,IAAM,eAAe;AACnB,eAAa,KADM;AAEnB,eAAa,KAFM;AAGnB,aAAW,IAHQ;;AAKnB,YAAU;AACR,aAAS,KADD;AAER,UAAM;AAFE,GALS;;AAUnB,QAAM,EAVa;AAWnB,SAAO;AACL,WAAO,EADF;AAEL,cAAU,EAFL;AAGL,eAAW,EAHN;AAIL,cAAU;AAJL;AAXY,CAArB;;AAoBA,IAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAQ,MAAR,EAAmB;AACrC,UAAQ,OAAO,IAAf;AACE,SAAK,6BAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,+BAAL;AACE,0BAAW,KAAX;AACE,qBAAa,KADf;AAEE,cAAM,OAAO,OAAP,CAAe;AAFvB;AAIF,SAAK,8BAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;;AAIF,SAAK,qBAAL;AACE,0BAAW,KAAX;AACE,mBAAW,OAAO;AADpB;AAGF,SAAK,wBAAL;AACE,0BAAW,KAAX;AACE,mBAAW;AADb;;AAIF,SAAK,uBAAL;AACE,sBAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,CAA6B,eAA7B,IAAgD,OAAO,OAAP,CAAe,SAA/D;AACA,0BAAW,KAAX;AAEF,SAAK,yBAAL;AACE,aAAO,gBAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB,CAA6B,eAA7B,CAAP;AACA,0BAAW,KAAX;;AAGF,SAAK,2BAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,6BAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,4BAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;;AAIF,SAAK,uBAAL;AACE,aAAO,EAAE,KAAF,CAAQ,KAAR,EAAe;AACpB,cAAM,EAAE,UAAU,OAAO,OAAP,CAAe,IAA3B;AADc,OAAf,CAAP;;AAIF,SAAK,oBAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,sBAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,qBAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;;AAIF,SAAK,uBAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,yBAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,wBAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;;AAIF,SAAK,aAAL;AACE,0BAAW,KAAX;AACE,qBAAa;AADf;AAGF,SAAK,sBAAL;AACE,0BAAW,KAAX;AACE,cAAM;AADR;AAGF;AACI,aAAO,KAAP;AAtFN;AAwFD,CAzFD","file":"auth.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import { modelReducer, formReducer, modeled } from 'react-redux-form';\nimport http from 'axios';\n\n\nconst initialState = {\n  authLoading: false,\n  userLoading: false,\n  authToken: null,\n\n  projects: {\n    loading: false,\n    data: null,\n  },\n\n  user: {},\n  login: {\n    email: '',\n    password: '',\n    firstname: '',\n    lastname: '',\n  }\n}\n\n\nconst mainReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH/LOAD_USER_DATA_PENDING':\n      return {...state,\n        userLoading: true\n      }\n    case 'AUTH/LOAD_USER_DATA_FULFILLED':\n      return {...state,\n        userLoading: false,\n        user: action.payload.data,\n      }\n    case 'AUTH/LOAD_USER_DATA_REJECTED':\n      return {...state,\n        userLoading: false,\n      }\n\n    case 'AUTH/SET_AUTH_TOKEN':\n      return {...state,\n        authToken: action.payload\n      }\n    case 'AUTH/REMOVE_AUTH_TOKEN':\n      return {...state,\n        authToken: null\n      }\n\n    case 'AUTH/INIT_HTTP_HEADER':\n      http.defaults.headers.common['Authorization'] = action.payload.fullToken;\n      return {...state\n    }\n    case 'AUTH/REMOVE_HTTP_HEADER':\n      delete http.defaults.headers.common['Authorization'];\n      return {...state\n    }\n\n    case 'AUTH/AUTHENTICATE_PENDING':\n      return {...state,\n        authLoading: true\n      }\n    case 'AUTH/AUTHENTICATE_FULFILLED':\n      return {...state,\n        authLoading: false\n      }\n    case 'AUTH/AUTHENTICATE_REJECTED':\n      return {...state,\n        authLoading: false\n      }\n\n    case 'AUTH/UNLINK_FULFILLED':\n      return i.merge(state, {\n        user: { accounts: action.payload.data}\n      })\n\n    case 'AUTH/LOGIN_PENDING':\n      return {...state,\n        authLoading: true\n      }\n    case 'AUTH/LOGIN_FULFILLED':\n      return {...state,\n        authLoading: false,\n      }\n    case 'AUTH/LOGIN_REJECTED':\n      return {...state,\n        authLoading: false,\n      }\n\n    case 'AUTH/REGISTER_PENDING':\n      return {...state,\n        authLoading: true\n      }\n    case 'AUTH/REGISTER_FULFILLED':\n      return {...state,\n        authLoading: false,\n      }\n    case 'AUTH/REGISTER_REJECTED':\n      return {...state,\n        authLoading: false,\n      }\n\n    case 'AUTH/LOGOUT':\n      return {...state,\n        authLoading: false,\n      }\n    case 'AUTH/CLEAR_USER_DATA':\n      return {...state,\n        user: {},\n      }\n    default:\n        return state;\n  }\n}\n\nexport default function (state = initialState, action) {\n  if (!state.hydrated) {\n    state = { ...initialState, ...state, hydrated: true };\n  }\n  return modeled(mainReducer, 'auth')(state, action)\n}\n"]}