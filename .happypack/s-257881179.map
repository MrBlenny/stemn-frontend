{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\TaskDisplayModal\\TaskDisplayModal.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;;IAAY,Y;;AACZ;;IAAY,e;;AACZ;;IAAY,Y;;AAIZ;;;;AACA;;AACA;;AAGA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAhCA;;;AAIA;;;AAKA;;;AAMA;;;AAIA;;;AAiBA;;AAEA,IAAM,UAAU,SAAV,OAAU,CAAC,SAAD,EAAY,SAAZ,EAA0B;AACxC,MAAG,UAAU,IAAb,EAAkB;AACpB;AACA;AACA;AACG;AACF,CAND;;AAQO,IAAM,6DAAY,gBAAM,WAAN,CAAkB;AAAA;;;AAEzC;AACA,oBAHyC,gCAGpB;AAAE,YAAQ,KAAK,KAAb;AAAqB,GAHH;AAIzC,2BAJyC,qCAIf,SAJe,EAIJ;AAAE,YAAQ,SAAR,EAAmB,KAAK,KAAxB;AAA+B,GAJ7B;AAMzC,oBANyC,gCAMrB;AAClB,SAAK,KAAL,CAAW,YAAX,CAAwB,kBAAxB,CAA2C;AACzC,eAAS,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB;AADW,KAA3C;AAGD,GAVwC;AAWzC,gBAXyC,0BAW1B,KAX0B,EAWnB,KAXmB,EAWb;AAC1B,SAAK,KAAL,CAAW,YAAX,CAAwB,cAAxB,CAAuC;AACrC,cAAQ,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB,GADQ;AAErC,kBAFqC;AAGrC;AAHqC,KAAvC;AAKA,SAAK,UAAL;AACD,GAlBwC;AAmBzC,YAnByC,wBAmB7B;AAAA;;AACV,eAAW;AAAA,aAAI,MAAK,KAAL,CAAW,YAAX,CAAwB,UAAxB,CAAmC,EAAC,MAAM,MAAK,KAAL,CAAW,IAAX,CAAgB,IAAvB,EAAnC,CAAJ;AAAA,KAAX,EAAiF,CAAjF;AACD,GArBwC;AAsBzC,YAtByC,wBAsB7B;AACV,SAAK,KAAL,CAAW,YAAX,CAAwB,UAAxB,CAAmC;AACjC,cAAQ,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB,GADI;AAEjC,eAAS,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB;AAFG,KAAnC;AAIA,SAAK,KAAL,CAAW,SAAX;AACD,GA5BwC;AA6BzC,QA7ByC,oBA6BhC;AAAA,iBACuE,KAAK,KAD5E;AAAA,QACC,MADD,UACC,MADD;AAAA,QACS,IADT,UACS,IADT;AAAA,QACe,KADf,UACe,KADf;AAAA,QACsB,WADtB,UACsB,WADtB;AAAA,QACmC,OADnC,UACmC,OADnC;AAAA,QAC4C,WAD5C,UAC4C,WAD5C;AAAA,QACyD,SADzD,UACyD,SADzD;;;AAGP,QAAM,OAAO,CAAC;AACZ,aAAO,SADK;AAEZ,eAAS,mBAAM,CAAE;AAFL,KAAD,EAGX;AACA,aAAO,aADP;AAEA,eAAS,KAAK;AAFd,KAHW,CAAb;;AAQA,QAAG,CAAC,IAAJ,EAAS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,WACE;AAAA;AAAA,QAAK,WAAW,0BAAW,2BAAQ,gBAAnB,EAAqC,eAArC,CAAhB;AACE;AAAA;AAAA,UAAK,WAAU,iBAAf;AACE;AAAA;AAAA,YAAK,WAAU,uBAAf;AACE;AAAA;AAAA,cAAK,WAAW,2BAAQ,MAAxB;AACE;AAAA;AAAA,gBAAK,WAAU,sCAAf;AACE;AACE,uBAAU,WAAV,mBADF;AAEE,uBAAO,KAAK,IAAL,CAAU,QAFnB;AAGE,8BAAc,KAAK,cAHrB;AAIE,2BAAU,cAJZ;AAKE,wBAAQ,IALV,GADF;AAOE;AAAA;AAAA,kBAAK,WAAU,mBAAf,EAAmC,OAAO,EAAC,YAAY,MAAb,EAA1C;AACE;AACE,yBAAU,WAAV,eADF;AAEE,4BAAU,KAAK,UAFjB;AAGE,yBAAO,KAAK,IAAL,CAAU,IAHnB;AAIE,6BAAU,aAJZ;AAKE,wBAAK,MALP;AAME,+BAAY,kBANd;AADF,eAPF;AAgBE;AAAA;AAAA,kBAAa,aAAY,OAAzB;AACE;AAAA;AAAA;AACE,uEAAa,MAAK,MAAlB;AADF,iBADF;AAIE,2EAAiB,MAAM,IAAvB;AAJF;AAhBF,aADF;AAwBE;AAAA;AAAA,gBAAK,WAAU,aAAf,EAA6B,OAAO,EAAC,SAAS,aAAV,EAApC;AAAA;AACW,oCAAO,KAAK,IAAL,CAAU,OAAjB,EAA0B,OAA1B,EADX;AAAA;AACgD,mDAAG,WAAU,iBAAb,GADhD;AAAA;AACuF;AAAA;AAAA,kBAAG,WAAU,cAAb;AAA6B,qBAAK,IAAL,CAAU,KAAV,CAAgB;AAA7C;AADvF;AAxBF,WADF;AA6BE;AAAA;AAAA,cAAK,WAAW,2BAAQ,QAAR,GAAmB,kBAAnC;AACE,oEAAc,QAAQ,MAAtB,EAA8B,OAAO,KAArC;AADF,WA7BF;AAgCE;AAAA;AAAA,cAAK,WAAW,2BAAQ,UAAxB;AACE,kEAAY,QAAQ,MAApB;AADF;AAhCF,SADF;AAqCE;AAAA;AAAA,YAAK,WAAW,2BAAQ,OAAR,GAAkB,OAAlC;AACE;AAAA;AAAA,cAAK,WAAW,2BAAQ,IAAxB;AACE;AAAA;AAAA,gBAAK,WAAW,2BAAQ,YAAR,GAAuB,sDAAvC;AACE;AAAA;AAAA,kBAAK,WAAU,MAAf;AAAA;AAAA,eADF;AAEE;AAAA;AAAA,kBAAG,WAAW,2BAAQ,GAAtB,EAA2B,OAAM,aAAjC,EAA+C,SAAS,KAAK,kBAA7D;AAAA;AAAA;AAFF,aADF;AAKE;AAAA;AAAA,gBAAK,OAAO,EAAC,WAAW,OAAZ,EAAqB,WAAW,MAAhC,EAAZ;AACG,uBAAS,MAAM,IAAf,IAAuB,MAAM,IAAN,CAAW,MAAlC,GAEC;AACE,uBAAU,WAAV,iBADF;AAEE,uBAAO,KAAK,IAAL,CAAU,MAFnB;AAGE,0BAAU,KAAK,UAHjB;AAIE,2BAAW,MAAM,IAAN,CAAW;AAJxB,gBAFD,GAQG;AATN;AALF,WADF;AAmBE;AAAA;AAAA,cAAK,WAAW,2BAAQ,IAAxB;AACE;AAAA;AAAA,gBAAK,WAAW,2BAAQ,YAAR,GAAuB,sDAAvC;AACE;AAAA;AAAA,kBAAK,WAAU,MAAf;AAAA;AAAA;AADF,aADF;AAIE;AAAA;AAAA,gBAAK,OAAO,EAAC,SAAS,MAAV,EAAZ;AACE;AACE,uBAAU,WAAV,gBADF;AAEE,0BAAU,KAAK,UAFjB;AAGE,uBAAO,KAAK,IAAL,CAAU,KAHnB;AAIE,uBAAO,QAAQ,IAAR,CAAa;AAJtB;AADF;AAJF,WAnBF;AAgCE;AAAA;AAAA,cAAK,WAAW,2BAAQ,IAAxB;AACE;AAAA;AAAA,gBAAK,WAAW,2BAAQ,YAAR,GAAuB,sDAAvC;AAAA;AAAA,aADF;AAIE;AAAA;AAAA,gBAAK,OAAO,EAAC,SAAS,MAAV,EAAZ;AACE;AACE,uBAAU,WAAV,cADF;AAEE,0BAAU,KAAK,UAFjB;AAGE,uBAAO,KAAK,IAAL,CAAU;AAHnB;AADF;AAJF;AAhCF;AArCF;AADF,KADF;AAuFD;AAnIwC,CAAlB,CAAZ,CAAN;;AAsIP;;AAEA,SAAS,eAAT,cAAwD;AAAA,MAA7B,KAA6B,QAA7B,KAA6B;AAAA,MAAtB,QAAsB,QAAtB,QAAsB;AAAA,MAAT,MAAS,SAAT,MAAS;;AACtD,MAAM,OAAgB,MAAM,IAAN,CAAW,MAAX,CAAtB;AACA,MAAM,QAAgB,iBAAI,IAAJ,EAAU,YAAV,IAA0B,MAAM,MAAN,CAAa,KAAK,IAAL,CAAU,KAAvB,CAA1B,GAA0D,EAAhF;AACA,MAAM,aAAgB,iBAAI,IAAJ,EAAU,YAAV,sBAA0C,KAAK,IAAL,CAAU,KAApD,GAA8D,EAApF;AACA,MAAM,UAAgB,iBAAI,KAAJ,EAAW,cAAX,IAA6B,SAAS,IAAT,CAAc,MAAM,IAAN,CAAW,OAAzB,CAA7B,GAAiE,EAAvF;AACA,SAAO;AACL,cADK;AAEL,iCAA2B,MAFtB;AAGL,gBAHK;AAIL,0BAJK;AAKL;AALK,GAAP;AAOD;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,kBAAc,+BAAmB,YAAnB,EAAiC,QAAjC,CADT;AAEL,kBAAc,+BAAmB,YAAnB,EAAiC,QAAjC,CAFT;AAGL,qBAAiB,+BAAmB,eAAnB,EAAoC,QAApC,CAHZ;AAIL;AAJK,GAAP;AAMD;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,SAA7C,C","file":"TaskDisplayModal.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as TasksActions from '../Tasks.actions.js';\nimport * as ProjectsActions from 'app/shared/actions/projects.js';\nimport * as ModalActions from 'app/renderer/main/modules/Modal/Modal.actions.js';\n\n// Component Core\nimport React from 'react';\nimport moment from 'moment';\nimport { actions } from 'react-redux-form';\nimport { has }     from 'lodash';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './TaskDisplayModal.css';\n\n// Sub Components\nimport Checkbox from 'app/renderer/main/components/Input/Checkbox/Checkbox';\nimport UserAvatar from 'app/renderer/main/components/Avatar/UserAvatar/UserAvatar.jsx';\nimport LabelSelect from './LabelSelect/LabelSelect.jsx';\nimport UserSelect from 'app/renderer/main/components/Users/UserSelect/UserSelect.jsx';\nimport TaskTimeline from '../TaskTimeline/TaskTimeline.jsx';\nimport DatePicker from 'app/renderer/main/modules/Calendar/DatePicker/DatePicker.jsx';\nimport Textarea from 'app/renderer/main/components/Input/Textarea/Textarea';\nimport CommentNew from 'app/renderer/main/modules/Comments/Comment/CommentNew.jsx';\n\nimport PopoverMenu from 'app/renderer/main/components/PopoverMenu/PopoverMenu';\nimport PopoverMenuList from 'app/renderer/main/components/PopoverMenu/PopoverMenuList';\nimport SimpleIconButton from 'app/renderer/main/components/Buttons/SimpleIconButton/SimpleIconButton'\nimport MdMoreHoriz from 'react-icons/md/more-horiz';\n\n\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nconst onMount = (nextProps, prevProps) => {\n  if(nextProps.task){\n//    if(!prevProps || nextProps.task.project._id !== prevProps.task.project._id){\n////      nextProps.ProjectsActions.getProject({projectId: nextProps.task.project._id});\n//    }\n  }\n}\n\nexport const Component = React.createClass({\n\n  // Mounting\n  componentWillMount() { onMount(this.props) },\n  componentWillReceiveProps(nextProps) { onMount(nextProps, this.props)},\n\n  showLabelEditModal(){\n    this.props.TasksActions.showLabelEditModal({\n      boardId: this.props.task.data.board\n    })\n  },\n  toggleComplete(model, value){\n    this.props.TasksActions.toggleComplete({\n      taskId: this.props.task.data._id,\n      model,\n      value\n    })\n    this.updateTask();\n  },\n  updateTask(){\n    setTimeout(()=>this.props.TasksActions.updateTask({task: this.props.task.data}), 1);\n  },\n  deleteTask(){\n    this.props.TasksActions.deleteTask({\n      taskId: this.props.task.data._id,\n      boardId: this.props.task.data.board,\n    });\n    this.props.modalHide();\n  },\n  render() {\n    const { taskId, task, board, entityModel, project, modalCancel, modalHide } = this.props;\n\n    const menu = [{\n      label: 'Refresh',\n      onClick: () => {}\n    },{\n      label: 'Delete Task',\n      onClick: this.deleteTask\n    }];\n\n    if(!task){\n      return <div>Task Loading</div>\n    }\n\n    return (\n      <div className={classNames(classes.taskDisplayModal, 'layout-column')}>\n        <div className=\"layout-row flex\">\n          <div className=\"flex-70 layout-column\">\n            <div className={classes.header}>\n              <div className=\"layout-row layout-align-start-center\">\n                <Checkbox\n                  model={`${entityModel}.data.complete`}\n                  value={task.data.complete}\n                  changeAction={this.toggleComplete}\n                  className=\"text-primary\"\n                  circle={true} />\n                <div className=\"text-title-4 flex\" style={{marginLeft: '15px'}}>\n                  <Textarea\n                    model={`${entityModel}.data.name`}\n                    onChange={this.updateTask}\n                    value={task.data.name}\n                    className=\"input-plain\"\n                    type=\"text\"\n                    placeholder=\"Task description\" />\n                </div>\n                <PopoverMenu preferPlace=\"below\">\n                  <SimpleIconButton>\n                    <MdMoreHoriz size=\"20px\"/>\n                  </SimpleIconButton>\n                  <PopoverMenuList menu={menu}/>\n                </PopoverMenu>\n              </div>\n              <div className=\"text-grey-3\" style={{padding: '15px 0 20px'}}>\n                Created {moment(task.data.created).fromNow()} <b className=\"text-interpunct\"></b> By <a className=\"link-primary\">{task.data.owner.name}</a>\n              </div>\n            </div>\n            <div className={classes.timeline + ' flex scroll-box'}>\n              <TaskTimeline taskId={taskId} board={board} />\n            </div>\n            <div className={classes.newComment}>\n              <CommentNew taskId={taskId} />\n            </div>\n          </div>\n          <div className={classes.sidebar + ' flex'}>\n            <div className={classes.well}>\n              <div className={classes.settingTitle + ' text-mini-caps layout-row layout-align-start-center'}>\n                <div className=\"flex\">Labels</div>\n                <a className={classes.add} title=\"Edit labels\" onClick={this.showLabelEditModal}>+</a>\n              </div>\n              <div style={{maxHeight: '200px', overflowY: 'auto'}}>\n                {board && board.data && board.data.labels\n                  ?\n                  <LabelSelect\n                    model={`${entityModel}.data.labels`}\n                    value={task.data.labels}\n                    onChange={this.updateTask}\n                    labelInfo={board.data.labels}\n                  />\n                  : ''\n                }\n              </div>\n            </div>\n            <div className={classes.well}>\n              <div className={classes.settingTitle + ' text-mini-caps layout-row layout-align-start-center'}>\n                <div className=\"flex\">Asignees</div>\n              </div>\n              <div style={{padding: '15px'}}>\n                <UserSelect\n                  model={`${entityModel}.data.users`}\n                  onChange={this.updateTask}\n                  value={task.data.users}\n                  users={project.data.team}\n                />\n              </div>\n            </div>\n            <div className={classes.well}>\n              <div className={classes.settingTitle + ' text-mini-caps layout-row layout-align-start-center'}>\n                Due Date\n              </div>\n              <div style={{padding: '15px'}}>\n                <DatePicker\n                  model={`${entityModel}.data.due`}\n                  onChange={this.updateTask}\n                  value={task.data.due}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n});\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({ tasks, projects }, {taskId}) {\n  const task          = tasks.data[taskId];\n  const board         = has(task, 'data.board') ? tasks.boards[task.data.board] : {};\n  const boardModel    = has(task, 'data.board') ? `tasks.boards.${task.data.board}` : '';\n  const project       = has(board, 'data.project') ? projects.data[board.data.project] : {};\n  return {\n    task,\n    entityModel: `tasks.data.${taskId}`,\n    board,\n    boardModel,\n    project\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    TasksActions: bindActionCreators(TasksActions, dispatch),\n    ModalActions: bindActionCreators(ModalActions, dispatch),\n    ProjectsActions: bindActionCreators(ProjectsActions, dispatch),\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}