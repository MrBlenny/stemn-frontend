{"version":3,"sources":["app\\renderer\\main\\modules\\Editor\\EditorDisplay.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;IAAY,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,IAAM,2CAAc,gBAAM,WAAN,CAAkB;AAAA;AACpC,WADoC,uBACzB;AACT,SAAK,KAAL,CAAW,QAAX,CAAoB,aAAa,SAAb,CAAuB;AACzC,iBAAW,MAD8B;AAEzC,kBAAY;AACV,gBAAQ,KAAK,KAAL,CAAW;AADT;AAF6B,KAAvB,CAApB;AAMD,GARmC;AASpC,QAToC,oBAS3B;AAAA,iBAC+C,KAAK,KADpD;AAAA,QACC,QADD,UACC,QADD;AAAA,QACW,SADX,UACW,SADX;AAAA,QACsB,WADtB,UACsB,WADtB;AAAA,QACmC,QADnC,UACmC,QADnC;;AAEP,WACE;AAAA;AAAA,QAAG,IAAI,SAAP;AACE,mBAAW,wBAAQ,OADrB;AAEE,cAAM,eAAe,MAAf,eAAkC,QAAlC,eAAyD,QAFjE;AAGE,iBAAS,KAAK,SAHhB;AAIG;AAJH,KADF;AAQD;AAnBmC,CAAlB,CAAd,CAAN;AAqBA,IAAM,uBAAuB,2BAAU,WAAV,CAA7B;;AAEA;;AAEA,IAAM,oBAAoB,IAAI,sBAAY,MAAhB,EAA1B;;AAEA,IAAM,KAAK,0BAAW;AACpB,QAAM,IADc;AAEpB,WAAS,IAFW;AAGpB,eAAa;AAHO,CAAX,CAAX;AAKA,GAAG,GAAH;;AAEA,IAAM,yBAAyB,IAAI,sBAAY,sBAAhB,iBAA/B;AACA,IAAM,yBAAyB,CAAC;AAC9B;AACA,qBAAmB,2BAAU,IAAV,EAAgB;AACjC,WAAO,KAAK,IAAL,IAAa,MAAb,IAAuB,KAAK,IAAL,CAAU,QAAV,CAAmB,GAAnB,CAAvB,IAAkD,KAAK,IAAvD,IAA+D,KAAK,IAAL,CAAU,OAAzE,IAAoF,oCAAgB,KAAK,IAAL,CAAU,OAAV,CAAkB,IAAlC,CAA3F;AACD,GAJ6B;AAK9B,eAAa,qBAAU,IAAV,EAAgB,QAAhB,EAA0B,KAA1B,EAAiC;AAC5C,WAAO;AAAA;AAAA;AAAO,WAAK,IAAL,CAAU,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB;AAAP,KAAP;AACD;AAP6B,CAAD,EAQ7B;AACA;AACA,qBAAmB,2BAAU,IAAV,EAAgB;AACjC,WAAO,KAAK,IAAL,IAAa,GAAb,IAAoB,oCAAgB,KAAK,OAAL,CAAa,IAA7B,CAA3B;AACD,GAJD;AAKA,eAAa,qBAAU,IAAV,EAAgB,QAAhB,EAA0B,KAA1B,EAAiC;AAAA,gCACC,KAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB,CAAwB,GAAxB,CADD;;AAAA;;AAAA,QACpC,QADoC;AAAA,QAC1B,WAD0B;AAAA,QACb,SADa;;AAE5C,QAAM,cAAc;AAClB,YAAiB,cAAC,OAAD;AAAA,eAAa,MAAM,OAAnB;AAAA,OADC;AAElB,YAAiB,cAAC,OAAD;AAAA,eAAa,MAAM,OAAN,GAAgB,YAA7B;AAAA,OAFC;AAGlB,uBAAiB,sBAAC,OAAD;AAAA,eAAa,MAAM,OAAN,GAAgB,aAA7B;AAAA;AAHC,KAApB;AAKA,QAAM,YAAY,YAAY,WAAZ,IAA2B,YAAY,WAAZ,EAAyB,KAAK,QAAL,CAAc,CAAd,EAAiB,IAA1C,CAA3B,GAA6E,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAhH;;AAEA,WACE;AAAC,0BAAD;AAAA;AACE,aAAK,KADP;AAEE,kBAAU,QAFZ;AAGE,mBAAW,SAHb;AAIE,qBAAa,WAJf;AAKG;AALH,KADF;AASD;AAvBD,CAR6B,EAgC5B;AACD,qBAAmB,2BAAC,IAAD,EAAU;AAC3B,WAAO,IAAP;AACD,GAHA;AAID,eAAa,uBAAuB;AAJnC,CAhC4B,CAA/B;;gDAuCe,gBAAM,WAAN,CAAkB;AAC/B,iBAD+B,6BACb;AAChB,QAAI,YAAY,UAAU,GAAG,MAAH,CAAU,KAAK,KAAL,CAAW,KAArB,CAAV,GAAwC,QAAxD;AACA,WAAO,kBAAkB,qBAAlB,CAAwC,SAAxC,EAAmD;AAAA,aAAM,IAAN;AAAA,KAAnD,EAA+D,sBAA/D,CAAP;AACD,GAJ8B;AAK/B,QAL+B,oBAKtB;AAAA,kBACoB,KAAK,KADzB;AAAA,QACC,KADD,WACC,KADD;AAAA,QACQ,OADR,WACQ,OADR;;AAEP,WACE;AAAA;AAAA,QAAK,SAAS,OAAd;AACE;AAAA;AAAA,UAAK,WAAW,wBAAQ,OAAxB;AAAkC,aAAK,eAAL,CAAqB,KAArB;AAAlC;AADF,KADF;AAKD;AAZ8B,CAAlB,C","file":"EditorDisplay.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React                from 'react';\nimport markdownIt           from 'markdown-it';\nimport emoji                from 'markdown-it-emoji';\nimport classes              from './EditorDisplay.css';\nimport { validateMention }  from 'app/renderer/main/modules/Mentions/Mentions.utils.js';\nimport htmlToReact          from 'html-to-react';\nimport classNames           from 'classnames';\nimport { connect }          from 'react-redux';\nimport * as ModalActions    from 'app/renderer/main/modules/Modal/Modal.actions.js';\n\nconst TaskMention = React.createClass({\n  showModal(){\n    this.props.dispatch(ModalActions.showModal({\n      modalType: 'TASK',\n      modalProps: {\n        taskId: this.props.entityId\n      }\n    }))\n  },\n  render() {\n    const { entityId, mentionId, mentionType, children} = this.props;\n    return (\n      <a id={mentionId}\n        className={classes.mention}\n        href={mentionType == 'user' ? `/users/${entityId}` : `/tasks/${entityId}`}\n        onClick={this.showModal}>\n        {children}\n      </a>\n    )\n  }\n});\nconst TaskMentionConnected = connect()(TaskMention);\n\n/////////////////////////////////////////////////////////////////////////\n\nconst htmlToReactParser = new htmlToReact.Parser();\n\nconst md = markdownIt({\n  html: true,\n  linkify: true,\n  typographer: true\n});\nmd.use(emoji);\n\nconst processNodeDefinitions = new htmlToReact.ProcessNodeDefinitions(React);\nconst processingInstructions = [{\n  // Remove the '@' trigger if the next element is a mention\n  shouldProcessNode: function (node) {\n    return node.type == 'text' && node.data.endsWith('@') && node.next && node.next.attribs && validateMention(node.next.attribs.href);\n  },\n  processNode: function (node, children, index) {\n    return <span>{node.data.slice(0, -1)}</span>\n  }\n},{\n  // Add the mention to replace the anchor\n  shouldProcessNode: function (node) {\n    return node.name == 'a' && validateMention(node.attribs.href);\n  },\n  processNode: function (node, children, index) {\n    const [ entityId, mentionType, mentionId ] = node.attribs.href.split(':');\n    const innerTextFn = {\n      user           : (display) => '@' + display,\n      task           : (display) => '#' + display + ' (related)',\n      'task-complete': (display) => '#' + display + ' (complete)'\n    }\n    const innerText = innerTextFn[mentionType] ? innerTextFn[mentionType](node.children[0].data) : node.children[0].data;\n\n    return (\n      <TaskMentionConnected\n        key={index}\n        entityId={entityId}\n        mentionId={mentionId}\n        mentionType={mentionType}>\n        {innerText}\n      </TaskMentionConnected>\n    )\n  }\n}, {\n  shouldProcessNode: (node) => {\n    return true;\n  },\n  processNode: processNodeDefinitions.processDefaultNode\n}];\n\nexport default React.createClass({\n  getMarkdownText() {\n    var rawMarkup = '<div>' + md.render(this.props.value) + '</div>';\n    return htmlToReactParser.parseWithInstructions(rawMarkup, () => true, processingInstructions);\n  },\n  render() {\n    const { value, onClick } = this.props;\n    return (\n      <div onClick={onClick}>\n        <div className={classes.display}>{this.getMarkdownText(value)}</div>\n      </div>\n    )\n  }\n});\n"]}