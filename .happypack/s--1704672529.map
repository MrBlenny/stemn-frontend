{"version":3,"sources":["app\\shared\\modules\\TimelineVertical\\TimelineItem\\TimelineItem.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AAGA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;EAXA;;;AAIA;;;AASA;;AAEA,IAAM,eAAe;AACnB,YAAa,kBAAC,IAAD,EAAU;AAAC,WAAO;AAAA;AAAA;AAAA;AAAA,KAAP;AAAwC,GAD7C;AAEnB,UAAa,gBAAC,IAAD,EAAU;AACrB,QAAM,WAAW;AACf,8BAAsB,KAAK,IAAL,CAAU,OAAhC,UADe;AAEf,aAAO,EAAC,MAAM,KAAK,IAAL,CAAU,GAAjB;AAFQ,KAAjB;AAIA,WAAO;AAAA;AAAA;AAAA;AAAiC;AAAA;AAAA,UAAM,IAAI,QAAV,EAAoB,WAAU,cAA9B;AAA8C,aAAK,IAAL,CAAU;AAAxD;AAAjC,KAAP;AACD;AARkB,CAArB;;AAWA,IAAM,mBAAmB,SAAnB,gBAAmB,CAAC,IAAD,EAAU;AACjC,SAAO,aAAa,KAAK,KAAlB,IAA2B,aAAa,KAAK,KAAlB,EAAyB,IAAzB,CAA3B,GAA4D;AAAA;AAAA;AAAA;AAAA,GAAnE;AACD,CAFD;;+CAKe,gBAAM,WAAN,CAAkB;AAC/B,QAD+B,oBACtB;AAAA,QACC,IADD,GACU,KAAK,KADf,CACC,IADD;AAEP;;AACA,QAAG,KAAK,KAAL,IAAc,SAAjB,EAA2B;AACzB,aACE,mDAAS,WAAW,KAAK,OAAzB,GADF;AAGD;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAfA,SAgBI;AACF,eACE;AAAA;AAAA,YAAqB,OAAO,EAAC,YAAY,KAAb,EAA5B;AACE;AAAA;AAAA,cAAK,WAAU,2CAAf;AACE;AAAA;AAAA,gBAAK,WAAW,2BAAQ,MAAxB;AACE,oEAAY,SAAS,KAAK,IAAL,CAAU,OAA/B,EAAwC,MAAK,MAA7C,EAAoD,OAAM,QAA1D;AADF,aADF;AAIE;AAAA;AAAA;AACE;AAAA;AAAA;AAAI,qBAAK,IAAL,CAAU,IAAd;AAAA;AAAA,eADF;AAC+B;AAAA;AAAA,kBAAM,WAAU,aAAhB,EAA8B,OAAO,EAAC,YAAY,OAAb,EAArC;AAA6D,iCAAiB,IAAjB,CAA7D;AAAA;AAAwF,sCAAO,KAAK,SAAZ,EAAuB,OAAvB;AAAxF;AAD/B;AAJF;AADF,SADF;AAYD;AACF;AAlC8B,CAAlB,C","file":"TimelineItem.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Component Core\nimport React from 'react';\nimport moment from 'moment';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from 'app/renderer/main/modules/Tasks/TaskTimeline/TaskTimelineItem/TaskTimelineItem.css';\n\nimport UserAvatar          from 'app/renderer/main/components/Avatar/UserAvatar/UserAvatar.jsx';\nimport Comment             from 'app/renderer/main/modules/Comments/Comment/Comment.jsx';\nimport TaskTimelineWrapper from 'app/renderer/main/modules/Tasks/TaskTimeline/TaskTimelineWrapper/TaskTimelineWrapper.jsx';\nimport { Link }            from 'react-router';\n\n// import TaskTimelinePanel   from '../TaskTimelinePanel/TaskTimelinePanel.jsx'\n\nconst eventTextMap = {\n  revision   : (item) => {return <span>modified this file.</span>},\n  commit     : (item) => {\n    const linkPath = {\n      pathname: `/project/${item.data.project}/feed`,\n      query: {item: item.data._id}\n    }\n    return <span>added this file to commit: <Link to={linkPath} className=\"link-primary\">{item.data.summary}</Link></span>\n  },\n}\n\nconst getTextEventData = (item) => {\n  return eventTextMap[item.event] ? eventTextMap[item.event](item) : <span>Unknown Event Type</span>\n};\n\n\nexport default React.createClass({\n  render() {\n    const { item } = this.props;\n    // If it is a comment, we use the comment component to display\n    if(item.event == 'comment'){\n      return (\n        <Comment commentId={item.comment}></Comment>\n      )\n    }\n//    if(item.event == 'completed' && item.commits && item.commits[0]){\n//      console.log(item);\n//      const commit = item.commits[0];\n//      return (\n//        <TaskTimelinePanel item={item}>\n//          <h3>{commit.summary}</h3>\n//          <div>{commit.description}</div>\n//        </TaskTimelinePanel>\n//      )\n//    }\n    // Else, we add a text event\n    else{\n      return (\n        <TaskTimelineWrapper style={{marginLeft: '5px'}}>\n          <div className=\"layout-row layout-align-start-center flex\">\n            <div className={classes.avatar}>\n              <UserAvatar picture={item.user.picture} size=\"25px\" shape=\"square\"/>\n            </div>\n            <div>\n              <b>{item.user.name}&nbsp;</b><span className=\"text-grey-3\" style={{lineHeight: '1.5em'}}>{getTextEventData(item)} - {moment(item.timestamp).fromNow()}</span>\n            </div>\n          </div>\n        </TaskTimelineWrapper>\n      )\n    }\n  }\n});\n"]}