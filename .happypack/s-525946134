'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _SidebarTimelineRow = require('./SidebarTimelineRow');

var _SidebarTimelineRow2 = _interopRequireDefault(_SidebarTimelineRow);

var _FileChangeTitleRow = require('app/renderer/main/modules/Changes/CommitChanges/FileChangeTitleRow');

var _FileChangeTitleRow2 = _interopRequireDefault(_FileChangeTitleRow);

var _LoadingOverlay = require('app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx');

var _LoadingOverlay2 = _interopRequireDefault(_LoadingOverlay);

var _PopoverMenu = require('app/renderer/main/components/PopoverMenu/PopoverMenu');

var _PopoverMenu2 = _interopRequireDefault(_PopoverMenu);

var _SimpleIconButton = require('app/renderer/main/components/Buttons/SimpleIconButton/SimpleIconButton');

var _SimpleIconButton2 = _interopRequireDefault(_SimpleIconButton);

var _moreHoriz = require('react-icons/md/more-horiz');

var _moreHoriz2 = _interopRequireDefault(_moreHoriz);

var _lodash = require('lodash');

var _StringFilterMenu = require('app/renderer/main/modules/StringFilter/StringFilterMenu.jsx');

var _StringFilterMenu2 = _interopRequireDefault(_StringFilterMenu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/shared/modules/SyncTimeline/SidebarTimeline/SidebarTimeline.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/shared/modules/SyncTimeline/SidebarTimeline/SidebarTimeline.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
} // Component Core


// Styles


// Sub Components


var eventFilter = [{
  text: 'Filter: Revisions',
  value: 'event:revision'
}, {
  text: 'Filter: Commits',
  value: 'event:commit'
}, {
  text: 'Filter: All',
  value: ''
}];

///////////////////////////////// COMPONENT /////////////////////////////////

exports.default = _wrapComponent('_component')(_react3.default.createClass({
  filterItems: function filterItems(items, fullQuery) {
    var _this = this;

    var fullQueryArray = fullQuery ? fullQuery.split(' ') : [];
    return items.filter(function (item) {
      return (0, _lodash.every)(fullQueryArray, function (queryString) {
        return _this.queryByString(item, queryString);
      });
    });
  },
  queryByString: function queryByString(item, queryString) {
    if (queryString == 'event:revision') {
      return item.event == 'revision';
    } else if (queryString == 'event:commit') {
      return item.event == 'commit';
    }
    // Filter by the string itself (case independent)
    else if (queryString && queryString.length > 0) {
        return new RegExp(queryString, 'i').test(item.data.name);
      } else {
        return true;
      }
  },
  render: function render() {
    var _props = this.props;
    var selected = _props.selected;
    var items = _props.items;
    var loading = _props.loading;
    var onSelect = _props.onSelect;
    var query = _props.query;
    var queryModel = _props.queryModel;
    var refresh = _props.refresh;
    var deselect = _props.deselect;

    var filteredItems = this.filterItems(items, query);
    return _react3.default.createElement(
      'div',
      { className: 'layout-column flex' },
      _react3.default.createElement(
        _FileChangeTitleRow2.default,
        { text: 'Recent Events' },
        _react3.default.createElement(
          _PopoverMenu2.default,
          { preferPlace: 'below' },
          _react3.default.createElement(
            _SimpleIconButton2.default,
            null,
            _react3.default.createElement(_moreHoriz2.default, { size: '20px' })
          ),
          _react3.default.createElement(
            'div',
            { className: 'PopoverMenu' },
            _react3.default.createElement(_StringFilterMenu2.default, { filter: eventFilter, model: queryModel, value: query }),
            _react3.default.createElement('div', { className: 'divider' }),
            _react3.default.createElement(
              'a',
              { onClick: refresh },
              'Refresh'
            )
          )
        )
      ),
      filteredItems && filteredItems.length > 0 ? _react3.default.createElement(
        'div',
        { className: 'scroll-box layout-column flex' },
        _react3.default.createElement(
          'div',
          null,
          filteredItems.map(function (item) {
            return _react3.default.createElement(_SidebarTimelineRow2.default, {
              item: item,
              key: item._id,
              isActive: item._id == selected,
              clickFn: function clickFn() {
                return onSelect(item);
              }
            });
          })
        ),
        _react3.default.createElement('div', { className: 'flex', onClick: deselect, style: { minHeight: '60px' } })
      ) : _react3.default.createElement(
        'div',
        { className: 'layout-column layout-align-center-center text-title-4 flex' },
        'No Feed items yet'
      ),
      _react3.default.createElement(_LoadingOverlay2.default, { show: loading })
    );
  }
}));
module.exports = exports['default'];