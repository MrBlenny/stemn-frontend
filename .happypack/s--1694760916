'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _es6Promise = require('es6-promise');

var _es6Promise2 = _interopRequireDefault(_es6Promise);

var _PreviewCadUtils = require('./PreviewCad.utils.js');

var _PreviewCadUtils2 = _interopRequireDefault(_PreviewCadUtils);

var _AutodeskViewer = require('./AutodeskViewer/AutodeskViewer');

var _AutodeskViewer2 = _interopRequireDefault(_AutodeskViewer);

var _LoadingOverlay = require('app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx');

var _LoadingOverlay2 = _interopRequireDefault(_LoadingOverlay);

var _modelLocked = require('app/renderer/assets/images/pure-vectors/model-locked.svg');

var _modelLocked2 = _interopRequireDefault(_modelLocked);

var _modelGear = require('app/renderer/assets/images/pure-vectors/model-gear.svg');

var _modelGear2 = _interopRequireDefault(_modelGear);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Files/PreviewFile/PreviewCad/PreviewCad.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Files/PreviewFile/PreviewCad/PreviewCad.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

exports.default = _wrapComponent('_component')(_react3.default.createClass({
  checkStatusInterval: null,
  getInitialState: function getInitialState() {
    return {
      status: 'pending',
      urn: '',
      token: ''
    };
  },

  // Mounting
  onMount: function onMount(nextProps, prevProps) {
    if (!prevProps || nextProps.fileMeta != prevProps.fileMeta) {
      this.init(nextProps);
    }
  },
  componentDidMount: function componentDidMount() {
    this.onMount(this.props);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this.onMount(nextProps, this.props);
  },
  componentWillUnmount: function componentWillUnmount() {
    clearInterval(this.checkStatusInterval);
  },
  init: function init(props) {
    var _this = this;

    var fileMeta = props.fileMeta;


    this.setState({ status: 'pending' });
    clearInterval(this.checkStatusInterval); // Clear interval if we re-init

    if (_PreviewCadUtils2.default.isWebGlSupported()) {
      _es6Promise2.default.all([_PreviewCadUtils2.default.render({
        projectId: fileMeta.project._id,
        fileId: fileMeta.fileId,
        revisionId: fileMeta.revisionId
      }), _PreviewCadUtils2.default.authenticate()]).then(function (response) {
        // Apply to state
        _this.setState({ urn: response[0].data.urn, token: response[1].data.token });

        // Begin to check status
        _this.checkStatusInterval = setInterval(_this.checkStatus, 700);
      }).catch(function (error) {
        return console.log(error);
      });
    } else {
      this.setState({ status: 'disabled' });
    }
  },
  checkStatus: function checkStatus() {
    var _this2 = this;

    _PreviewCadUtils2.default.getViewStatus(this.state.urn).then(function (response) {
      _this2.setState({ status: response.data.status });
      if (_this2.state.status == 'success') {
        clearInterval(_this2.checkStatusInterval);
      } else if (_this2.state.status == 'failed') {
        clearInterval(_this2.checkStatusInterval);
      }
    }).catch(function (error) {
      clearInterval(_this2.checkStatusInterval);
      _this2.setState({ status: 'failed' });
    });
  },
  render: function render() {
    var _state = this.state;
    var status = _state.status;
    var token = _state.token;
    var urn = _state.urn;

    if (status == 'success') {
      return _react3.default.createElement(_AutodeskViewer2.default, { urn: urn, token: token });
    } else if (status == 'failed') {
      return _react3.default.createElement(
        'div',
        { className: 'layout-column layout-align-center-center flex' },
        _react3.default.createElement('img', { style: { width: '100px' }, src: _modelGear2.default }),
        _react3.default.createElement(
          'div',
          { className: 'text-title-4', style: { marginBottom: '10px' } },
          'Something went wrong.'
        ),
        _react3.default.createElement(
          'div',
          { className: 'text-title-5' },
          'Your model could not be processed for viewing.'
        )
      );
    } else if (status == 'disabled') {
      return _react3.default.createElement(
        'div',
        { className: 'layout-column layout-align-center-center flex text-center' },
        _react3.default.createElement('img', { style: { width: '100px' }, src: _modelLocked2.default }),
        _react3.default.createElement(
          'div',
          { className: 'text-title-4', style: { marginBottom: '10px' } },
          'WebGl is disabled or not supported.'
        ),
        _react3.default.createElement(
          'div',
          { className: 'text-title-5' },
          'Visit ',
          _react3.default.createElement(
            'a',
            { className: 'link-primary', href: 'http://get.webgl.org/', target: '_blank' },
            'webgl.org'
          ),
          ' for more.'
        )
      );
    } else if (status == 'pending') {
      return _react3.default.createElement(
        'div',
        { className: 'rel-box flex' },
        _react3.default.createElement(
          _LoadingOverlay2.default,
          { show: true },
          'Processing File...'
        )
      );
    } else {
      return null;
    }
  }
}));
module.exports = exports['default'];