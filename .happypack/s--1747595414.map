{"version":3,"sources":["app\\renderer\\assets\\other\\gerber\\js\\render\\viewee-canvas.js"],"names":[],"mappings":"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","file":"viewee-canvas.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import ViewEERenderer from './viewee-generic.js'\nimport webGerberConstants from '../constants/webGerberConstants.js';\n\n\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(function () {\n            return factory();\n        });\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory();\n    } else {\n        root.ViewEECanvasRenderer = factory();\n    }\n}(this, function () {\n\n\n    // ---------------\n    // --- DRAWING ---\n    // ---------------\n\n    function CanvasRenderer(board) {\n        var canvas = board.canvas,\n            ctx = canvas.getContext('2d');\n\n        this.canvas = canvas;\n        this.board = board;\n\n        this.warnings = [];\n\n        this.cacheDrawingOperations = true;\n    }\n\n    CanvasRenderer.prototype = Object.create(ViewEERenderer.prototype);\n\n    CanvasRenderer.prototype.getScope = function (ctx, attrs) {\n        // canvas have no usable rendering context, like svg grouping\n        return ctx;\n    }\n\n    CanvasRenderer.prototype.scaleCanvas = function () {\n        var canvas = this.canvas,\n            ctx = canvas.getContext('2d'),\n            board = this.board;\n\n        //\tctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.fillStyle = webGerberConstants.colors.board;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.transform(\n            board.scale * board.baseScale * board.ratio,\n            0,\n            0,\n            board.scale * board.baseScale * board.ratio,\n            0,\n            0\n        );\n        ctx.fillStyle = webGerberConstants.colors.board;\n        ctx.fillRect(1, 1, 1, 1);\n    }\n\n    CanvasRenderer.prototype.drawPlainHoles = function(layer, ctx) {\n\t\tif (!layer) { return; }\n\n\t\tvar layerCtx = this.getScope (ctx, {name: layer.name});\n\t\tvar board = this.board;\n\t\tvar layerHoles = board.plainHoles || [];\n        _.forEach(layerHoles, function(hole){\n            ctx.globalCompositeOperation = 'xor';\n            ctx.beginPath();\n            ctx.arc(hole.x, hole.y, hole.drill/2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'red';\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        })\n\t}\n\n    CanvasRenderer.prototype.draw = function () {\n        var canvas = this.canvas,\n            ctx = canvas.getContext('2d'),\n            board = this.board;\n\n        if (!this.cacheDrawingOperations)\n            return;\n\n        this.scaleCanvas();\n\n        this._currentLayerDrawRoutines = [];\n        this.layerDrawRoutines = {};\n        //\n        var layerOrder = board.boardFlipped ? board.reverseRenderLayerOrder : board.renderLayerOrder;\n        for (var layerKey in layerOrder) {\n            var layerId = layerOrder[layerKey];\n\n            board.layerRenderFunctions[layerId](this, board, ctx);\n\n            this.layerDrawRoutines[layerId] = this._currentLayerDrawRoutines;\n\n            this._currentLayerDrawRoutines.forEach(function (routine) {\n                var method = routine[0];\n                this[method].apply(this, routine.slice(1).concat([ctx]));\n            }, this);\n\n            this._currentLayerDrawRoutines = [];\n        }\n        ////\n        //\tctx.restore ();\n    }\n\n    CanvasRenderer.prototype.redraw = function () {\n        //\tvar canvas = this.canvas,\n        //\t\tctx    = canvas.getContext('2d'),\n        //\t\tboard  = this.board;\n        //\n        //\tthis.scaleCanvas ();\n        //\n        //\tvar layerOrder = board.boardFlipped ? board.reverseRenderLayerOrder : board.renderLayerOrder;\n        //\n        //\tif (this.layerDrawRoutines || !this.cacheDrawingOperations)\n        //\tfor (var layerKey in layerOrder) {\n        //\t\tvar layerId = layerOrder[layerKey];\n        //\t\tif (!board.visibleLayers[layerId]) { continue };\n        //\n        //\t\tif (this.cacheDrawingOperations) {\n        //\t\t\tthis.layerDrawRoutines[layerId].forEach (function (routine) {\n        //\t\t\t\tvar method = routine[0];\n        //\t\t\t\tthis[method].apply (this, routine.slice(1).concat ([ctx]));\n        //\t\t\t}, this);\n        //\t\t} else {\n        //\t\t\tboard.layerRenderFunctions[layerId](this, board, ctx);\n        //\t\t}\n        //\t}\n        //\tctx.restore();\n    }\n\n    // primitives drawings is cached, actual drawing functions called on redraw\n\n    CanvasRenderer.prototype._drawSingleWire = function (wire, ctx) {\n        ctx.save();\n        ctx.beginPath();\n\n        var lineDash;\n        if (wire.style === \"longdash\") {\n            lineDash = [3];\n        } else if (wire.style === \"shortdash\") {\n            lineDash = [1];\n        } else if (wire.style === \"dashdot\") {\n            lineDash = [3, 1, 1, 1];\n        }\n\n        if (wire.cap && wire.cap === \"flat\") {\n            ctx.lineCap = \"butt\";\n        } else {\n            ctx.lineCap = \"round\";\n        }\n\n        if (lineDash) ctx.setLineDash(lineDash);\n\n        this._drawWire(wire, ctx);\n\n        ctx.lineWidth = wire.width;\n        ctx.strokeStyle = wire.strokeStyle;\n        ctx.stroke();\n        ctx.fill();\n        ctx.restore();\n    }\n\n    CanvasRenderer.prototype._drawWire = function (wire, ctx) {\n\n        ctx.save();\n\n        if (wire.curve) {\n\n            var angle = this.board.angleForRot(wire.rot);\n\n            var rotate = angle.degrees / 180 * Math.PI;\n\n            var mirror = angle.flipped;\n\n            var radiusX, radiusY;\n            radiusX = radiusY = wire.radius;\n            if (wire.radius.constructor === Array) {\n                radiusX = wire.radius[0];\n                radiusY = wire.radius[1];\n            }\n\n            ctx.translate(wire.x, wire.y);\n            // ctx.rotate(rotation);\n            ctx.scale(radiusX, radiusY);\n            ctx.arc(0, 0, 1, rotate + wire.start, rotate + wire.start + wire.angle); //, antiClockwise\n\n        } else {\n            ctx.moveTo(wire.x1, wire.y1);\n            ctx.lineTo(wire.x2, wire.y2);\n        }\n\n        ctx.restore();\n\n    }\n    CanvasRenderer.prototype._drawShapeFromWires = function (layer, ctx) {\n\t\tif (!layer) { return; }\n\t\tvar layerCtx = this.getScope (ctx, {name: layer.name});\n\n\t\tvar layerWires = this.board.plainWires[layer.number] || [];\n        ctx.beginPath();\n        _.forEach(layerWires, function(wire){\n            if(wire.radius){\n                ctx.arc(wire.x, wire.y, wire.radius, wire.start, wire.start + (wire.curve / 180) * Math.PI);\n            }\n            else{\n                ctx.lineTo(wire.x2, wire.y2);\n            }\n\n        })\n        ctx.setLineDash([0.1, 0.1]);\n        ctx.closePath();\n        ctx.strokeStyle ='white';\n        ctx.lineWidth = 0.05;\n        ctx.stroke();\n        ctx.setLineDash([0]);\n    }\n\n\n    CanvasRenderer.prototype._drawHole = function (hole, ctx) {\n        var board = this.board;\n\n        // http://stackoverflow.com/questions/6271419/how-to-fill-the-opposite-shape-on-canvas\n        hole.shape = hole.shape || 'circle';\n\n        // TODO: get rid of strokeWidth\n        var drillRadius = hole.drill / 2;\n        var shapeRadius = hole.diameter / 2 || drillRadius + hole.strokeWidth / 2;\n\n\n        ctx.beginPath();\n\n        var poly;\n        if (hole.shape === 'square') {\n            poly = {\n                points: [\n                    {\n                        x: hole.x + shapeRadius,\n                        y: hole.y + shapeRadius\n                    },\n                    {\n                        x: hole.x - shapeRadius,\n                        y: hole.y + shapeRadius\n                    },\n                    {\n                        x: hole.x - shapeRadius,\n                        y: hole.y - shapeRadius\n                    },\n                    {\n                        x: hole.x + shapeRadius,\n                        y: hole.y - shapeRadius\n                    }\n\t\t]\n            };\n\n            ctx.fillStyle = hole.strokeStyle;\n            this._drawRawPoly(poly, ctx);\n\n        } else if (hole.shape === 'octagon') {\n            // TODO: support rotation\n            var mult = .4;\n            poly = {\n                points: [\n                    {\n                        x: hole.x + shapeRadius,\n                        y: hole.y + shapeRadius * mult\n                    },\n                    {\n                        x: hole.x + shapeRadius * mult,\n                        y: hole.y + shapeRadius\n                    },\n                    {\n                        x: hole.x - shapeRadius * mult,\n                        y: hole.y + shapeRadius\n                    },\n                    {\n                        x: hole.x - shapeRadius,\n                        y: hole.y + shapeRadius * mult\n                    },\n                    {\n                        x: hole.x - shapeRadius,\n                        y: hole.y - shapeRadius * mult\n                    },\n                    {\n                        x: hole.x - shapeRadius * mult,\n                        y: hole.y - shapeRadius\n                    },\n                    {\n                        x: hole.x + shapeRadius * mult,\n                        y: hole.y - shapeRadius\n                    },\n                    {\n                        x: hole.x + shapeRadius,\n                        y: hole.y - shapeRadius * mult\n                    }\n\t\t]\n            };\n\n            ctx.fillStyle = hole.strokeStyle;\n            this._drawRawPoly(poly, ctx);\n\n        } else {\n            if (hole.shape !== 'circle') {\n\n                if (!this.warnings[\"pad_shape_\" + hole.shape]) {\n                    this.warnings[\"pad_shape_\" + hole.shape] = true;\n                    console.warn(\"pad shape '%s' is not supported yet\", hole.shape);\n                }\n            }\n\n            ctx.strokeStyle = hole.strokeStyle;\n            var restring = (hole.diameter - hole.drill) / 2 || hole.strokeWidth;\n            ctx.lineWidth = restring;\n            drillRadius = (hole.drill + restring) / 2 || hole.drill / 2 + hole.strokeWidth / 2;\n\n            //if (isNaN (restring))\n            //\tconsole.log (hole.diameter, hole.drill, hole.strokeWidth, drillRadius);\n        }\n\n        ctx.lineCap = 'round';\n\n        ctx.arc(hole.x, hole.y, drillRadius, 2 * Math.PI, 0, true);\n\n        if (poly || hole.strokeFill) {\n            ctx.fillStyle = hole.strokeStyle;\n            ctx.fill();\n        } else {\n            ctx.stroke();\n        }\n    }\n\n    CanvasRenderer.prototype._drawRawPoly = function (poly, ctx) {\n        poly.points.forEach(function (point, idx) {\n            if (idx === 0)\n                ctx.moveTo(point.x, point.y);\n            else\n                ctx.lineTo(point.x, point.y);\n        }, this);\n\n        ctx.lineJoin = \"round\";\n\n        ctx.closePath();\n    }\n\n    CanvasRenderer.prototype._drawFilledPoly = function (poly, ctx) {\n        ctx.beginPath();\n        ctx.lineWidth = poly.strokeWidth;\n\n        this._drawRawPoly(poly, ctx);\n\n        ctx.strokeStyle = poly.strokeStyle;\n        if (poly.strokeStyle) ctx.stroke();\n        ctx.fillStyle = poly.fillStyle;\n        ctx.fill();\n\n    }\n\n    CanvasRenderer.prototype._drawFilledCircle = function (circle, ctx) {\n\n        ctx.fillStyle = circle.fillStyle;\n        ctx.lineJoin = \"round\";\n        ctx.lineWidth = circle.radius;\n        ctx.beginPath();\n\n        ctx.arc(circle.x, circle.y, circle.radius, 0, Math.PI * 2, false);\n        ctx.closePath();\n\n        ctx.fill();\n\n    }\n\n    CanvasRenderer.prototype._drawText = function (attrs, text, ctx) {\n        var x = attrs.x || text.x,\n            y = attrs.y || text.y,\n            rot = attrs.rot || text.rot || \"R0\",\n            size = text.size * 0.9,\n            flipText = attrs.flipText !== undefined ? attrs.flipText : text.flipText;\n\n        var board = this.board;\n\n        var content = attrs.content || text.content;\n        var color = attrs.color;\n\n        var textAngle = board.angleForRot(rot);\n\n        //rotation from 90.1 to 270 causes Eagle to draw labels 180 degrees rotated with top right anchor point\n        var degrees = textAngle.degrees,\n            textRot = board.matrixForRot(rot),\n            fontSize = 10;\n\n        var font = '' + fontSize + 'px Conv_OCRAStd'; //Use a regular font size - very small sizes seem to mess up spacing / kerning\n\n        var strings = content.split(/\\r?\\n/);\n\n        //    console.log(text.interlinear);\n        var stringOffset = (text.interlinear || 1) * fontSize / 100;\n        //\tvar stringOffset = 1000 * fontSize / 100;\n\n        if (0) { // enable to draw zero points for text\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.beginPath();\n            ctx.arc(0, 0, 1, 0, 2 * Math.PI, false);\n            ctx.fillStyle = board.viaPadColor();\n            ctx.fill();\n            ctx.restore();\n        }\n\n        var textCtx = this.getScope(ctx, {\n            name: 'text'\n        });\n\n        ctx.save();\n        ctx.fillStyle = color;\n        ctx.font = font;\n        ctx.translate(x, y);\n\n        // TODO: move text rotation to the parser?\n        ctx.transform(textRot[0], textRot[2], textRot[1], textRot[3], 0, 0);\n        var textBlockHeight = (strings.length - 1) * (stringOffset + fontSize);\n        var textBlockWidth = 0;\n        strings.forEach(function (string, idx) {\n            textBlockWidth = Math.max(textBlockWidth, ctx.measureText(string).width);\n        }, this);\n        //    console.log(textBlockWidth);\n        var scale = size / fontSize;\n        ctx.scale(scale * 1.35, (board.coordYFlip ? 1 : -1) * scale);\n        var xOffset = 0;\n        if (flipText) {\n            var xMult = {\n                center: 0,\n                left: 1,\n                right: 1\n            };\n            var yMult = {\n                middle: 0,\n                bottom: -1,\n                top: 1\n            };\n            ctx.translate(\n                xMult[text.align || \"left\"] * textBlockWidth,\n                yMult[text.valign || \"bottom\"] * (textBlockHeight + fontSize)\n            );\n            if (!textAngle.spin) ctx.scale(-1, -1);\n        }\n\n        if (0) { // enable to draw zero points for text origin\n            ctx.save();\n            ctx.beginPath();\n            ctx.arc(0, 0, 1, 0, 2 * Math.PI, false);\n            ctx.fillStyle = \"b00\";\n            ctx.fill();\n            ctx.restore();\n        }\n\n        if (text.align) ctx.textAlign = text.align;\n        if (text.valign) ctx.textBaseline = text.valign;\n\n        strings.forEach(function (string, idx) {\n            var yOffset = idx * (stringOffset + fontSize);\n            if (text.valign === \"middle\") {\n                yOffset -= textBlockHeight / 2;\n            } else if (text.valign === \"bottom\") {\n                yOffset -= textBlockHeight;\n            }\n            ctx.fillText(string, xOffset, yOffset);\n        }, this);\n\n        ctx.restore();\n    }\n\n\n    CanvasRenderer.prototype._dimCanvas = function (alpha, ctx) {\n        ctx.save();\n        ctx.fillStyle = webGerberConstants.colors.board;\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.restore();\n    };\n\n    Object.keys(CanvasRenderer.prototype).forEach(function (method) {\n        if (method.charAt(0) === '_' && CanvasRenderer.prototype.hasOwnProperty(method)) {\n            CanvasRenderer.prototype[method.substring(1)] = function () {\n                if (!this.cacheDrawingOperations) {\n                    this[method].apply(this, arguments);\n                    return;\n                }\n                var routine = [method].concat([].slice.call(arguments).filter(function (arg) {\n                    return !(arg instanceof CanvasRenderingContext2D)\n                }));\n                // console.log (routine);\n                this._currentLayerDrawRoutines.push(routine);\n            };\n        }\n    });\n\n    return CanvasRenderer;\n\n}));\n"]}