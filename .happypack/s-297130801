'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reducer;

var _icepick = require('icepick');

var _icepick2 = _interopRequireDefault(_icepick);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialState = {};

function reducer() {
  var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
  var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  switch (action.type) {
    case 'FILE_LIST/FETCH_FILES_PENDING':
      return _icepick2.default.assocIn(state, [action.meta.key, 'loading'], true);
    case 'FILE_LIST/FETCH_FILES_REJECTED':
      return _icepick2.default.assocIn(state, [action.meta.key, 'loading'], false);
    case 'FILE_LIST/FETCH_FILES_FULFILLED':
      return _icepick2.default.assoc(state, action.meta.key, {
        entries: action.payload.data.entries,
        folder: action.payload.data.folder,
        loading: false
      });

    case 'FILE_LIST/EXPLORE_FOLDER_PENDING':
      return _icepick2.default.assocIn(state, [action.meta.key, 'loading'], true);
    case 'FILE_LIST/EXPLORE_FOLDER_REJECTED':
      return _icepick2.default.assocIn(state, [action.meta.key, 'loading'], false);
    case 'FILE_LIST/EXPLORE_FOLDER_FULFILLED':
      return _icepick2.default.assoc(state, action.meta.key, {
        entries: action.payload.data.entries,
        folder: action.payload.data.folder,
        loading: false
      });
    default:
      return state;
  }
}
module.exports = exports['default'];