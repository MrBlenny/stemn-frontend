{"version":3,"sources":["app\\renderer\\main\\modules\\Mentions\\TaskMentionModal\\TaskMentionModal.jsx"],"names":[],"mappings":"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","file":"TaskMentionModal.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\n\n// Component Core\nimport React from 'react';\nimport moment from 'moment';\nimport { actions } from 'react-redux-form';\nimport getUuid from 'app/shared/helpers/getUuid.js';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './TaskMentionModal.css';\n\n// Helpers\nimport howMany from 'app/shared/helpers/strings/howMany.js';\n\n// Sub Components\nimport Checkbox from 'app/renderer/main/components/Input/Checkbox/Checkbox';\nimport Input from 'app/renderer/main/components/Input/Input/Input';\nimport Button from 'app/renderer/main/components/Buttons/Button/Button';\nimport TaskRow from './TaskRow/TaskRow.jsx';\nimport MdSearch from 'react-icons/md/search';\nimport { filterBoard, getAllTasks } from 'app/renderer/main/modules/Tasks/Tasks.utils.js';\nimport TasksFilterMenu from 'app/renderer/main/modules/Tasks/TasksFilterMenu/TasksFilterMenu.jsx';\nimport PopoverMenu from 'app/renderer/main/components/PopoverMenu/PopoverMenu';\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nconst onMount = (nextProps, prevProps) => {\n  if(nextProps.task){\n    if(!prevProps || nextProps.task.project._id !== prevProps.task.project._id){\n    }\n  }\n}\nexport const Component = React.createClass({\n\n  // Mounting\n  componentWillMount() { onMount(this.props) },\n  componentWillReceiveProps(nextProps) { onMount(nextProps, this.props)},\n  submit(){\n    // Get the mentions\n    const mentions = getMentionsFromObject(this.props.mentions, this.props.tasks);\n    // Clear props.mentions;\n    this.props.dispatch(actions.change(this.props.mentionsModel, {}))\n\n    this.props.modalConfirm({mentions});\n    this.props.modalHide();\n  },\n  cancel(){\n    this.props.modalCancel();\n    this.props.modalHide();\n  },\n\n  toggle({type, taskId, mention}){\n    // type == 'complete' || 'related'\n    const toggleField = (type1, type2) => {\n      const value = mention ? !mention[type1] : true;\n      if(value){\n        this.props.dispatch(actions.change(`${this.props.mentionsModel}.${taskId}.${type1}`, value))\n        this.props.dispatch(actions.change(`${this.props.mentionsModel}.${taskId}.${type2}`, !value))\n      }\n      else{\n        this.props.dispatch(actions.change(`${this.props.mentionsModel}.${taskId}.${type1}`, value))\n      }\n    }\n    return type == 'complete' ? toggleField('complete', 'related') : toggleField('related', 'complete');\n  },\n\n  render() {\n    const { tasks, board, mentions, boardModel } = this.props;\n\n    if(!board){\n      return <div>Loading</div>\n    }\n\n    const filteredBoard = filterBoard(board, tasks, board.searchString);\n    const numTasks = getAllTasks(board.data.groups).length;\n    const numFilteredTasks = getAllTasks(filteredBoard.data.groups).length;\n\n    return (\n      <div className={classes.modal + ' layout-column'}>\n        <div className=\"modal-title\">\n          Add tasks to a commit:\n        </div>\n        <div className={classes.header + ' layout-row layout-align-start-center'}>\n          <div className=\"flex\">{howMany({count: filterMentions(mentions, 'complete').length, adj: 'complete'}, {count: filterMentions(mentions, 'related').length, adj: 'related'}, 'task')}</div>\n          <div className={classes.search}>\n            <Input \n              model={`${boardModel}.searchString`}\n              value={board.searchString}\n              className=\"dr-input\" \n              placeholder=\"Search tasks\"\n            />\n            <PopoverMenu preferPlace=\"right\" trigger=\"hoverDelay\">\n              <MdSearch size=\"20\"/>\n              <div><TasksFilterMenu model={`${boardModel}.searchString`} value={board.searchString}/></div>\n            </PopoverMenu>\n          </div>\n        </div>\n        {\n          numTasks == 0 || numFilteredTasks == 0 ?\n          <div className=\"flex layout-column layout-align-center-center text-center\">\n            {numTasks == 0\n              ? <div style={{width: '100%'}}>This project has no tasks. Add some.</div>\n              : <div style={{width: '100%'}}>No results, <a className=\"text-primary\" onClick={()=>this.props.dispatch(actions.change(`${boardModel}.searchString`, ''))}>clear search filter.</a></div>\n            }\n          </div> :\n          <div className=\"flex scroll-box\">\n            {filteredBoard.data.groups.map(group => <div>\n              {group.tasks.map(taskId => <TaskRow\n                key={taskId}\n                taskId={taskId}\n                mention={mentions[taskId]}\n                toggleComplete={()=>this.toggle({type: 'complete',taskId, mention: mentions[taskId]})}\n                toggleRelated={()=>this.toggle({type: 'related',taskId, mention: mentions[taskId]})}\n              />\n              )}\n            </div>)}\n          </div>\n        }\n        <div className=\"modal-footer layout-row layout-align-start-center\">\n          <div className=\"flex text-description-1\"></div>\n          <Button style={{marginRight: '10px'}} onClick={this.cancel}>Cancel</Button>\n          <Button className=\"primary\" onClick={this.submit}>Add Tasks</Button>\n        </div>\n      </div>\n    )\n  }\n});\n\nfunction filterMentions(mentions, type){\n  const mentionsArray = mentions ? Object.keys(mentions).map(taskId => mentions[taskId]) : [];\n  // type == 'complete' || 'related'\n  return mentionsArray.length > 0 ? mentionsArray.filter( mention => mention[type]) : []\n}\n\nfunction getMentionsFromObject(mentionsObject, tasks){\n  const mentions = [];\n  Object.keys(mentionsObject).forEach(taskId => {\n    if(mentionsObject[taskId].complete){\n      mentions.push(newMention({entityId: taskId, display: tasks[taskId].data.name, mentionType: 'task-complete'}))\n    }\n    else if(mentionsObject[taskId].related){\n      mentions.push(newMention({entityId: taskId, display: tasks[taskId].data.name, mentionType: 'task'}))\n    }\n  })\n  return mentions;\n}\n\nfunction newMention({entityId, display, mentionType}){\n  return {\n    entityId,\n    display,\n    mentionType,\n    mentionId: getUuid()\n  }\n}\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({ tasks, mentions }, {projectId}) {\n  const projectBoards = tasks.projects && tasks.projects[projectId] ? tasks.projects[projectId].boards : null;\n  const board = projectBoards ? tasks.boards[projectBoards[0]] : {};\n  return {\n    tasks: tasks.data,\n    board: board,\n    boardModel: board && board.data && board.data._id ? `tasks.boards.${board.data._id}` : '',\n    mentions: mentions.tasks[projectId] || {},\n    mentionsModel: `mentions.tasks.${projectId}`,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}