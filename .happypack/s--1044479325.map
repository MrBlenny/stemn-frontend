{"version":3,"sources":["app\\renderer\\main\\modules\\Changes\\Changes.reducer.js"],"names":[],"mappings":";;;;;;;;kBAmDe,YAAwC;AAAA,MAA9B,KAA8B,yDAAtB,YAAsB;AAAA,MAAR,MAAQ;;AACrD,SAAO,6BAAQ,WAAR,EAAqB,SAArB,EAAgC,KAAhC,EAAuC,MAAvC,CAAP;AACD,C;;AArDD;;;;AAEA;;AACA;;;;;;AACA,IAAM,eAAe,EAArB;;AAEA,IAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAQ,MAAR,EAAmB;AAAA;AACrC,YAAQ,OAAO,IAAf;AACE,WAAK,8BAAL;AACE;AAAA,aAAO,kBAAE,OAAF,CAAU,KAAV,EAAiB,CAAC,OAAO,OAAP,CAAe,SAAhB,EAA2B,UAA3B,CAAjB,EAAyD,EAAzD;AAAP;AACF,WAAK,8BAAL;AACE;AAAA,aAAO,kBAAE,OAAF,CAAU,KAAV,EAAiB,CAAC,OAAO,OAAP,CAAe,SAAhB,EAA2B,UAA3B,CAAjB,EAAyD,OAAO,OAAP,CAAe,QAAxE;AAAP;AACF,WAAK,uBAAL;AACE;AAAA,aAAO,kBAAE,QAAF,CAAW,KAAX,EAAkB,CAAC,OAAO,OAAP,CAAe,SAAhB,EAA2B,aAA3B,CAAlB,EAA6D,UAAC,WAAD,EAAiB;AACnF,gBAAM,mBAAmB,kCAAc,WAAd,CAAzB;AACA,gBAAM,oBAAoB,2CAAuB,OAAO,OAAP,CAAe,QAAtC,EAAgD,gBAAhD,CAA1B;AACA,mBAAO,sCAAkB,MAAM,OAAO,OAAP,CAAe,SAArB,EAAgC,WAAlD,EAA+D,iBAA/D,CAAP;AACD,WAJM;AAAP;AAKF,WAAK,kCAAL;AACE;AAAA,aAAO,kBAAE,QAAF,CAAW,KAAX,EAAkB,CAAC,OAAO,OAAP,CAAe,SAAhB,CAAlB,EAA8C,UAAC,OAAD,EAAa;AAChE,gBAAM,UAAU,QAAQ,IAAR,CAAa,MAAb,CAAoB,UAAC,GAAD,EAAM,KAAN,EAAgB;AAClD,kBAAI,MAAM,IAAN,CAAW,MAAf,IAAyB,OAAO,OAAP,CAAe,KAAxC;AACA,qBAAO,GAAP;AACD,aAHe,EAGb,EAHa,CAAhB;AAIA,mBAAO,kBAAE,KAAF,CAAQ,OAAR,EAAiB,SAAjB,EAA4B,OAA5B,CAAP;AACD,WANM;AAAP;AAOF,WAAK,iCAAL;AACE;AAAA,aAAO,kBAAE,KAAF,CAAQ,KAAR,sBACJ,OAAO,OAAP,CAAe,MAAf,CAAsB,IAAtB,CAA2B,SADvB,EACoC;AACvC,kBAAO,OAAO,OAAP,CAAe,IADiB;AAEvC,sBAAU;AAF6B,WADpC;AAAP;AAMF,WAAK,0BAAL;AACE,YAAM,cAAc,OAAO,OAAP,CAAe,IAAf,CAAoB,SAApB,CAA8B,GAA9B,CAAkC,UAAC,IAAD;AAAA,iBAAQ,KAAK,GAAb;AAAA,SAAlC,CAApB;AACA,YAAM,qBAAqB,MAAM,OAAO,IAAP,CAAY,QAAlB,EAA4B,IAA5B,CAAiC,MAAjC,CAAwC,UAAC,IAAD;AAAA,iBAAQ,CAAC,YAAY,QAAZ,CAAqB,KAAK,GAA1B,CAAT;AAAA,SAAxC,CAA3B;AACA;AAAA,aAAO,kBAAE,KAAF,CAAQ,KAAR,sBACJ,OAAO,IAAP,CAAY,QADR,EACoB;AACvB,qBAAS,EADc;AAEvB,yBAAc,EAFS;AAGvB,kBAAM,kBAHiB;AAIvB,qBAAS;AAJc,WADpB;AAAP;AAQF;AACE;AAAA,aAAO;AAAP;AAtCJ;AADqC;;AAAA;AAyCtC,CAzCD","file":"Changes.reducer.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import i from 'icepick';\n\nimport { modeled } from 'react-redux-form';\nimport { parseMentions, removeExistingMentions, addMentionsToText } from '../Mentions/Mentions.utils.js';\nconst initialState = {}\n\nconst mainReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGES/DESELECT_FILE_CHANGE':\n      return i.assocIn(state, [action.payload.projectId, 'selected'], {})\n    case 'CHANGES/SELECTED_FILE_CHANGE':\n      return i.assocIn(state, [action.payload.projectId, 'selected'], action.payload.selected)\n    case 'CHANGES/MENTION_TASKS':\n      return i.updateIn(state, [action.payload.projectId, 'description'], (description) => {\n        const existingMentions = parseMentions(description);\n        const uniqueNewMentions = removeExistingMentions(action.payload.mentions, existingMentions);\n        return addMentionsToText(state[action.payload.projectId].description, uniqueNewMentions);\n      });\n    case 'CHANGES/TOGGLE_ALL_CHANGED_FILES':\n      return i.updateIn(state, [action.payload.projectId], (changes) => {\n        const checked = changes.data.reduce((obj, param) => {\n          obj[param.data.fileId] = action.payload.value;\n          return obj;\n        }, {});\n        return i.assoc(changes, 'checked', checked);\n      })\n    case 'CHANGES/FETCH_CHANGES_FULFILLED':\n      return i.merge(state, {\n        [action.payload.config.meta.projectId] : {\n          data : action.payload.data,\n          selected: {},\n        }\n      })\n    case 'CHANGES/COMMIT_FULFILLED':\n      const idsToRemove = action.payload.data.revisions.map((item)=>item._id);\n      const remainingRevisions = state[action.meta.cacheKey].data.filter((item)=>!idsToRemove.includes(item._id));\n      return i.merge(state, {\n        [action.meta.cacheKey] : {\n          summary: '',\n          description : '',\n          data: remainingRevisions,\n          checked: {}\n        }\n      })\n    default:\n      return state;\n  }\n}\n\n\n\nexport default function (state = initialState, action) {\n  return modeled(mainReducer, 'changes')(state, action)\n}\n"]}