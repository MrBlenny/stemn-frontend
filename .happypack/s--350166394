'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Component = undefined;

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _FileSelectActions = require('./FileSelect.actions.js');

var FileSelectActions = _interopRequireWildcard(_FileSelectActions);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _FileList = require('app/renderer/main/modules/FileList/FileList');

var _FileList2 = _interopRequireDefault(_FileList);

var _Button = require('app/renderer/main/components/Buttons/Button/Button');

var _Button2 = _interopRequireDefault(_Button);

var _done = require('react-icons/md/done');

var _done2 = _interopRequireDefault(_done);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/FileSelect/FileSelectModal.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/FileSelect/FileSelectModal.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
} // Container Core


// Container Actions


// Component Core


// Styles

//import classes from './FileList.css'

// Sub Components


/////////////////////////////////////////////////////////////////////////////
///////////////////////////////// COMPONENT /////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

var Component = exports.Component = _wrapComponent('_component')(_react3.default.createClass({
  displayName: 'Component',
  componentWillMount: function componentWillMount() {
    if (!this.props.fileSelect) {
      this.props.FileSelectActions.init({
        storeKey: this.props.storeKey,
        path: this.props.path
      });
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (!nextProps.fileSelect) {
      this.props.FileSelectActions.init({
        storeKey: nextProps.storeKey,
        path: nextProps.path
      });
    }
  },
  singleClickFn: function singleClickFn(_ref) {
    var file = _ref.file;

    if (file.type == 'file' || this.props.options.allowFolder && file.type == 'folder') {
      this.props.FileSelectActions.select({
        storeKey: this.props.storeKey,
        file: file
      });
    } else {
      this.props.FileSelectActions.changePath({
        storeKey: this.props.storeKey,
        path: file.fileId
      });
    }
  },
  doubleClickFn: function doubleClickFn(_ref2) {
    var file = _ref2.file;

    if (file.type == 'folder') {
      this.props.FileSelectActions.changePath({
        storeKey: this.props.storeKey,
        path: file.fileId
      });
    } else {
      this.props.FileSelectActions.select({
        storeKey: this.props.storeKey,
        file: file
      });
    }
  },
  crumbClickFn: function crumbClickFn(_ref3) {
    var file = _ref3.file;

    this.props.FileSelectActions.changePath({
      storeKey: this.props.storeKey,
      path: file.fileId
    });
  },
  submit: function submit() {
    // The modal confirm function is a react redux form change.
    // We extend this action object by the value to confirm the change
    this.props.modalConfirm({ value: this.props.fileSelect.selected });
    this.props.modalHide();
  },
  cancel: function cancel() {
    this.props.modalCancel();
    this.props.modalHide();
  },
  render: function render() {
    var _props = this.props;
    var projectId = _props.projectId;
    var path = _props.path;
    var fileSelect = _props.fileSelect;
    var options = _props.options;


    var activePath = fileSelect && fileSelect.path ? fileSelect.path : '';
    return _react3.default.createElement(
      'div',
      { style: { width: '600px' } },
      _react3.default.createElement(
        'div',
        { className: 'modal-title' },
        'Select Folder'
      ),
      fileSelect ? _react3.default.createElement(_FileList2.default, {
        projectId: projectId,
        path: activePath,
        singleClickFn: this.singleClickFn,
        doubleClickFn: this.doubleClickFn,
        crumbClickFn: this.crumbClickFn,
        selected: fileSelect.selected,
        options: options
      }) : null,
      _react3.default.createElement(
        'div',
        { className: 'modal-footer layout-row layout-align-start-center' },
        _react3.default.createElement('div', { className: 'flex' }),
        _react3.default.createElement(
          _Button2.default,
          { style: { marginRight: '10px' }, onClick: this.cancel },
          'Cancel'
        ),
        _react3.default.createElement(
          _Button2.default,
          { className: 'primary', onClick: this.submit },
          'Select Folder'
        )
      )
    );
  }
}));

/////////////////////////////////////////////////////////////////////////////
///////////////////////////////// CONTAINER /////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

function mapStateToProps(_ref4, _ref5) {
  var fileSelect = _ref4.fileSelect;
  var projectId = _ref5.projectId;
  var path = _ref5.path;
  var storeKey = _ref5.storeKey;
  var options = _ref5.options;

  return {
    fileSelect: fileSelect[storeKey],
    projectId: projectId,
    storeKey: storeKey,
    path: path,
    options: options
  };
}

function mapDispatchToProps(dispatch) {
  return {
    FileSelectActions: (0, _redux.bindActionCreators)(FileSelectActions, dispatch)
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Component);