'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Component = undefined;

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _FilesActions = require('../Files.actions.js');

var FilesActions = _interopRequireWildcard(_FilesActions);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _PreviewFile = require('./PreviewFile.css');

var _PreviewFile2 = _interopRequireDefault(_PreviewFile);

var _PreviewCode = require('./PreviewCode/PreviewCode');

var _PreviewCode2 = _interopRequireDefault(_PreviewCode);

var _PreviewPcb = require('./PreviewPcb/PreviewPcb');

var _PreviewPcb2 = _interopRequireDefault(_PreviewPcb);

var _PreviewPdf = require('./PreviewPdf/PreviewPdf');

var _PreviewPdf2 = _interopRequireDefault(_PreviewPdf);

var _PreviewImage = require('./PreviewImage/PreviewImage');

var _PreviewImage2 = _interopRequireDefault(_PreviewImage);

var _PreviewCad = require('./PreviewCad/PreviewCad');

var _PreviewCad2 = _interopRequireDefault(_PreviewCad);

var _LoadingOverlay = require('app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx');

var _LoadingOverlay2 = _interopRequireDefault(_LoadingOverlay);

var _laptopSpanner = require('app/renderer/assets/images/pure-vectors/laptop-spanner.svg');

var _laptopSpanner2 = _interopRequireDefault(_laptopSpanner);

var _PreviewFileUtils = require('./PreviewFile.utils.js');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Files/PreviewFile/PreviewFile.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Files/PreviewFile/PreviewFile.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
} // Container Core


// Container Actions


// Component Core


// Styles


// Sub Components


///////////////////////////////// COMPONENT /////////////////////////////////


var Component = exports.Component = _wrapComponent('_component')(_react3.default.createClass({
  displayName: 'Component',
  render: function render() {
    var _props = this.props;
    var file = _props.file;
    var fileData = _props.fileData;
    var project = _props.project;
    var filesActions = _props.filesActions;

    var previewId = project._id + '-' + file.fileId + '-' + file.revisionId;

    var getPreview = function getPreview() {
      var viewerType = (0, _PreviewFileUtils.getViewerType)(file.extension);
      if (viewerType == 'gerber' || viewerType == 'pcb') {
        return _react3.default.createElement(_PreviewPcb2.default, { previewId: previewId, fileMeta: file, fileData: fileData, downloadFn: filesActions.getFile });
      } else if (viewerType == 'code') {
        return _react3.default.createElement(_PreviewCode2.default, { previewId: previewId, fileMeta: file, fileData: fileData, downloadFn: filesActions.getFile });
      } else if (viewerType == 'autodesk') {
        return _react3.default.createElement(_PreviewCad2.default, { previewId: previewId, fileMeta: file });
      } else if (viewerType == 'google') {
        return _react3.default.createElement(
          'div',
          null,
          'Google'
        );
      } else if (viewerType == 'image') {
        return _react3.default.createElement(_PreviewImage2.default, { project: project, fileMeta: file });
      } else if (viewerType == 'pdf') {
        return _react3.default.createElement(_PreviewPdf2.default, { previewId: previewId, fileMeta: file, fileData: fileData, downloadFn: filesActions.getFile });
      } else {
        return _react3.default.createElement(
          'div',
          { className: 'layout-column layout-align-center-center flex' },
          _react3.default.createElement('img', { src: _laptopSpanner2.default, style: { width: '100px' } }),
          _react3.default.createElement(
            'div',
            { className: 'text-title-5 text-center', style: { marginTop: '10px' } },
            'Cannot preview this file.'
          )
        );
      }
    };
    return _react3.default.createElement(
      'div',
      { className: 'layout-column flex rel-box' },
      getPreview()
    );
  }
}));

///////////////////////////////// CONTAINER /////////////////////////////////

function mapStateToProps(_ref, _ref2) {
  var files = _ref.files;
  var project = _ref2.project;
  var file = _ref2.file;

  var cacheKey = project._id + '-' + file.fileId + '-' + file.revisionId;
  return {
    fileData: files.fileData[cacheKey]
  };
}

function mapDispatchToProps(dispatch) {
  return {
    filesActions: (0, _redux.bindActionCreators)(FilesActions, dispatch)
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Component);