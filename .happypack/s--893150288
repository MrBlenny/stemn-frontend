'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _reactContextmenu = require('react-contextmenu');

var _FileChangeRow = require('./FileChangeRow');

var _FileChangeRow2 = _interopRequireDefault(_FileChangeRow);

var _FileChangeTitleRow = require('./FileChangeTitleRow');

var _FileChangeTitleRow2 = _interopRequireDefault(_FileChangeTitleRow);

var _FileChangeMenu = require('./FileChange.menu.js');

var _FileChangeMenu2 = _interopRequireDefault(_FileChangeMenu);

var _ContextMenu = require('app/renderer/main/modules/ContextMenu/ContextMenu.jsx');

var _ContextMenu2 = _interopRequireDefault(_ContextMenu);

var _PopoverMenu = require('app/renderer/main/components/PopoverMenu/PopoverMenu');

var _PopoverMenu2 = _interopRequireDefault(_PopoverMenu);

var _PopoverMenuList = require('app/renderer/main/components/PopoverMenu/PopoverMenuList');

var _PopoverMenuList2 = _interopRequireDefault(_PopoverMenuList);

var _SimpleIconButton = require('app/renderer/main/components/Buttons/SimpleIconButton/SimpleIconButton');

var _SimpleIconButton2 = _interopRequireDefault(_SimpleIconButton);

var _moreHoriz = require('react-icons/md/more-horiz');

var _moreHoriz2 = _interopRequireDefault(_moreHoriz);

var _TimelineUtils = require('app/renderer/main/modules/Timeline/Timeline.utils.js');

var _ChangesUtils = require('../Changes.utils.js');

var _CommitChanges = require('./CommitChanges.css');

var _CommitChanges2 = _interopRequireDefault(_CommitChanges);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Changes/CommitChanges/CommitChanges.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Changes/CommitChanges/CommitChanges.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

// Components


// Functions


// Styles


var contextIdentifier = 'FileChangeCm';
var FileChangeRowContext = (0, _reactContextmenu.ContextMenuLayer)(contextIdentifier, function (props) {
  return props.item;
})(_FileChangeRow2.default);

exports.default = _wrapComponent('_component')(_react3.default.createClass({
  render: function render() {
    var _props = this.props;
    var changes = _props.changes;
    var project = _props.project;
    var toggleAll = _props.toggleAll;
    var refresh = _props.refresh;
    var selectedFileChange = _props.selectedFileChange;
    var deselect = _props.deselect;
    var dispatch = _props.dispatch;

    var groupedChanges = (0, _TimelineUtils.groupRevisions)(changes.data);
    var allChecked = (0, _ChangesUtils.getToggleAllStatus)(groupedChanges, changes.checked);
    //    ,{
    //      label: 'Filter: All Changes',
    //    },{
    //      label: 'Filter: My Changes',
    //    },
    var filterMenu = [{
      label: 'Refresh',
      onClick: refresh
    }];

    return _react3.default.createElement(
      'div',
      { className: 'layout-column flex' },
      _react3.default.createElement(
        'div',
        { className: 'layout-column flex' },
        _react3.default.createElement(
          _FileChangeTitleRow2.default,
          {
            text: groupedChanges.length + ' file changes',
            checkbox: true,
            value: allChecked,
            changeAction: toggleAll },
          _react3.default.createElement(
            _PopoverMenu2.default,
            { preferPlace: 'below' },
            _react3.default.createElement(
              _SimpleIconButton2.default,
              { title: 'Filter changes' },
              _react3.default.createElement(_moreHoriz2.default, { size: '20px' })
            ),
            _react3.default.createElement(_PopoverMenuList2.default, { menu: filterMenu })
          )
        ),
        groupedChanges.length > 0 ? _react3.default.createElement(
          'div',
          { className: 'scroll-box layout-column flex' },
          groupedChanges.map(function (item, idx) {
            return _react3.default.createElement(FileChangeRowContext, { key: item._id,
              item: item,
              text: item.data.path,
              clickFn: function clickFn() {
                selectedFileChange({ projectId: project._id, selected: item });
              },
              isActive: item._id == changes.selected._id,
              model: 'changes.' + project._id + '.checked.' + item.data.fileId,
              value: changes.checked ? changes.checked[item.data.fileId] : false
            });
          }),
          _react3.default.createElement('div', { className: 'flex', onClick: deselect, style: { minHeight: '60px' } })
        ) : _react3.default.createElement(
          'div',
          { className: 'layout-column layout-align-center-center text-title-4 flex' },
          'No Changes'
        )
      ),
      _react3.default.createElement(_ContextMenu2.default, { identifier: contextIdentifier, menu: (0, _FileChangeMenu2.default)(dispatch) })
    );
  }
}));
module.exports = exports['default'];