{"version":3,"sources":["app\\shared\\actions\\system.js"],"names":[],"mappings":"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","file":"system.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import * as LocalPathActions from '../modules/LocalPath/LocalPath.actions.js';\nimport { name as localPathModuleName} from '../modules/LocalPath/LocalPath.reducer.js';\n\n//import providerPathLookup from '../../main/modules/files/providerPathLookup.js';\n\nimport Promise from 'es6-promise';\nimport { shell } from 'electron';\nimport { has } from 'lodash';\n\nexport function getProviderPath() {\n  return {\n    type: 'SYSTEM/GET_PROVIDER_PATH',\n    payload: {\n      functionAlias : 'ProviderPathActions.getPath',\n      functionInputs: ['dropbox', 'drive']\n    }\n//    payload: Promise.all(['dropbox', 'drive'].map(providerPathLookup)).then(response => {\n//      return {\n//        dropbox: response[0],\n//        drive: response[1]\n//      }\n//    }).catch( error => console.log(error))\n  };\n}\n\nexport function openFile({location, path, projectId, provider}) {\n  return (dispatch, getState) => {\n\n    const addSlash = (path) => {\n      return path && path[0] != '/' && path[0] != '\\\\' ? '/' + path : path\n    }\n\n    const open = (computerToProvider, providerToProject, projectToFile) => {\n      providerToProject = addSlash(providerToProject)\n      projectToFile = addSlash(projectToFile)\n      const fullPath = computerToProvider + providerToProject + projectToFile;\n      console.log(fullPath);\n      if(location){\n        const success = shell.showItemInFolder(fullPath);\n        console.log(success);\n        return dispatch({\n          type: 'SYSTEM/OPEN_FILE_LOCATION',\n          payload: {}\n        })\n      }else{\n        const success = shell.openItem(fullPath);\n        console.log(success);\n        dispatch({\n          type: 'SYSTEM/OPEN_FILE',\n          payload: {}\n        })\n      }\n    };\n\n    const storeState = getState();\n    const computerToProvider = storeState.system.providerPath[provider];\n    const providerToProject  = has(storeState, [localPathModuleName, projectId, 'data']) ? storeState[localPathModuleName][projectId].data : false;\n\n    if(!providerToProject){\n      dispatch(LocalPathActions.getPath({projectId})).then(response => {\n        return open(computerToProvider, response.value.data, path)\n      })\n    }\n    else{\n      return open(computerToProvider, providerToProject, path)\n    }\n  }\n}\n\nexport function currentVersion({version}) {\n  return {\n    type: 'SYSTEM/CURRENT_VERSION',\n    payload: {version}\n  };\n}\n\nexport function checkingForUpdate() {\n  return {\n    type: 'SYSTEM/CHECKING_FOR_UPDATE',\n    payload: {}\n  };\n}\n\nexport function updateAvailable() {\n  return {\n    type: 'SYSTEM/UPDATE_AVAILABLE',\n    payload: {}\n  };\n}\n\nexport function updateDownloaded(releaseNotes, releaseName, releaseDate, updateURL) {\n  return {\n    type: 'SYSTEM/UPDATE_DOWNLOADED',\n    payload: {\n      releaseNotes,\n      releaseName,\n      releaseDate,\n      updateURL,\n    },\n  };\n}\n\nexport function updateError(error) {\n  return {\n    type: 'SYSTEM/UPDATE_ERROR',\n    error: true,\n    payload: error.message,\n  };\n}\n\nexport function updateNotAvailable() {\n  return {\n    type: 'SYSTEM/UPDATE_NOT_AVAILABLE',\n    payload: {}\n  };\n}\n"]}