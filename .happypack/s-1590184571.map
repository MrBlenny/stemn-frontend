{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\TaskDisplayModal\\LabelSelect\\LabelSelect.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAM,6DAAY,gBAAM,WAAN,CAAkB;AAAA;AACzC,QADyC,oBACjC;AAAA,iBACkD,KAAK,KADvD;AAAA,QACE,KADF,UACE,KADF;AAAA,QACS,KADT,UACS,KADT;AAAA,QACgB,SADhB,UACgB,SADhB;AAAA,QAC2B,QAD3B,UAC2B,QAD3B;AAAA,QACqC,QADrC,UACqC,QADrC;;;AAGN,QAAM,eAAe,UAAU,MAAV,CAAkB;AAAA,aAAS,MAAM,IAAN,IAAc,MAAM,KAA7B;AAAA,KAAlB,CAArB;AACA,WACE;AAAA;AAAA;AACG,mBAAa,GAAb,CAAiB,UAAC,KAAD,EAAW;AAC3B,YAAM,aAAa,SAAb,UAAa,GAAM;AACvB,cAAM,aAAa,QAAQ,MAAM,OAAN,CAAc,MAAM,GAApB,CAAR,GAAmC,CAAC,CAAvD;AACA,cAAG,cAAc,CAAC,CAAlB,EAAoB;AAClB,qBAAS,wBAAQ,MAAR,CAAe,KAAf,EAAsB,UAAtB,CAAT;AACD,WAFD,MAGI;AACF,qBAAS,wBAAQ,IAAR,CAAa,KAAb,EAAoB,MAAM,GAA1B,CAAT;AACD;AACD,cAAG,QAAH,EAAY;AAAC;AAAW,WARD,CAQE;AAC1B,SATD;AAUA,eACE;AAAA;AAAA,YAAa,QAAQ,QAAQ,MAAM,QAAN,CAAe,MAAM,GAArB,CAAR,GAAoC,KAAzD,EAAgE,OAAO,MAAM,GAA7E,EAAkF,UAAU,UAA5F,EAAwG,WAAU,sCAAlH,EAAyJ,UAAU,IAAnK;AACE,iDAAK,WAAW,sBAAQ,MAAxB,EAAgC,OAAO,EAAC,YAAY,MAAM,KAAnB,EAAvC,GADF;AAEG,gBAAM;AAFT,SADF;AAMD,OAjBA;AADH,KADF;AAsBD;AA3BwC,CAAlB,CAAZ,CAAN;kBA6BQ,2BAAU,SAAV,C","file":"LabelSelect.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\n\nimport CheckboxAlt from 'app/renderer/main/components/Input/CheckboxAlt/CheckboxAlt.jsx'\nimport classes from './LabelSelect.css'\n\nexport const Component = React.createClass({\n  render(){\n    const { model, value, labelInfo, dispatch, onChange } = this.props;\n\n    const filteredInfo = labelInfo.filter( label => label.name && label.color)\n    return (\n      <div>\n        {filteredInfo.map((label) => {\n          const onChangeFn = () => {\n            const labelIndex = value ? value.indexOf(label._id) : -1;\n            if(labelIndex != -1){\n              dispatch(actions.remove(model, labelIndex))\n            }\n            else{\n              dispatch(actions.push(model, label._id))\n            }\n            if(onChange){onChange()} // Run the onChange function if required\n          };\n          return (\n            <CheckboxAlt status={value ? value.includes(label._id) : false} value={label._id} onChange={onChangeFn} className=\"layout-row layout-align-start-center\" tickOnly={true}>\n              <div className={classes.swatch} style={{background: label.color}}></div>\n              {label.name}\n            </CheckboxAlt>\n          )\n        })}\n      </div>\n    );\n  }\n});\nexport default connect()(Component)\n"]}