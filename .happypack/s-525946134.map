{"version":3,"sources":["app\\shared\\modules\\SyncTimeline\\SidebarTimeline\\SidebarTimeline.jsx"],"names":[],"mappings":"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","file":"SidebarTimeline.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Component Core\nimport React from 'react';\n\n// Styles\nimport classNames from 'classnames';\n\n// Sub Components\nimport SidebarTimelineRow from './SidebarTimelineRow'\nimport FileChangeTitleRow from 'app/renderer/main/modules/Changes/CommitChanges/FileChangeTitleRow';\nimport LoadingOverlay from 'app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx';\nimport PopoverMenu from 'app/renderer/main/components/PopoverMenu/PopoverMenu';\nimport SimpleIconButton from 'app/renderer/main/components/Buttons/SimpleIconButton/SimpleIconButton'\nimport MdMoreHoriz from 'react-icons/md/more-horiz';\nimport { every } from 'lodash';\nimport StringFilterMenu from 'app/renderer/main/modules/StringFilter/StringFilterMenu.jsx';\n\n\nconst eventFilter = [{\n  text: 'Filter: Revisions',\n  value: 'event:revision',\n},{\n  text: 'Filter: Commits',\n  value: 'event:commit',\n},{\n  text: 'Filter: All',\n  value: ''\n}];\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nexport default React.createClass({\n  filterItems(items, fullQuery){\n    const fullQueryArray = fullQuery ? fullQuery.split(' ') : [];\n    return items.filter(item => every(fullQueryArray, queryString => this.queryByString(item, queryString)))\n  },\n  queryByString(item, queryString){\n    if     (queryString == 'event:revision'){\n      return item.event == 'revision'\n    }\n    else if(queryString == 'event:commit'){\n      return item.event == 'commit'\n    }\n    // Filter by the string itself (case independent)\n    else if(queryString && queryString.length > 0){\n      return new RegExp(queryString, 'i').test(item.data.name)\n    }\n    else{\n      return true;\n    }\n  },\n  render() {\n    const { selected, items, loading, onSelect, query, queryModel, refresh, deselect } = this.props;\n    const filteredItems = this.filterItems(items, query);\n    return (\n      <div className=\"layout-column flex\">\n        <FileChangeTitleRow text=\"Recent Events\">\n          <PopoverMenu preferPlace=\"below\">\n            <SimpleIconButton>\n              <MdMoreHoriz size=\"20px\" />\n            </SimpleIconButton>\n            <div className=\"PopoverMenu\">\n              <StringFilterMenu filter={eventFilter} model={queryModel} value={query}/>\n              <div className=\"divider\"></div>\n              <a onClick={refresh}>Refresh</a>\n            </div>\n          </PopoverMenu>\n        </FileChangeTitleRow>\n        {\n          filteredItems && filteredItems.length > 0\n          ? (\n          <div className=\"scroll-box layout-column flex\">\n            <div>\n               {filteredItems.map(item=>\n                <SidebarTimelineRow\n                  item={item}\n                  key={item._id}\n                  isActive={item._id == selected}\n                  clickFn={()=>onSelect(item)}\n                />\n              )}\n            </div>\n            <div className=\"flex\" onClick={deselect} style={{minHeight: '60px'}}></div>\n          </div>\n          )\n          : <div className=\"layout-column layout-align-center-center text-title-4 flex\">No Feed items yet</div>\n        }\n        <LoadingOverlay show={loading} />\n      </div>\n    )\n  }\n});\n"]}