{"version":3,"sources":["app\\renderer\\main\\modules\\Calendar\\Calendar.jsx"],"names":[],"mappings":"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","file":"Calendar.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport moment from 'moment';\nimport createDateObjects from './createDateObjects';\n\nimport classNames from 'classnames';\nimport classes from './Calendar.css';\n\nexport default class Calendar extends Component {\n\n  static propTypes = {\n    weekOffset: PropTypes.number.isRequired,\n    type: PropTypes.string, // 'datepicker'\n\n    selectedDate: PropTypes.object.isRequired,\n    viewDate: PropTypes.object.isRequired,\n\n    renderDay: PropTypes.func,\n    onNextMonth: PropTypes.func.isRequired,\n    onPrevMonth: PropTypes.func.isRequired,\n    onPickDate: PropTypes.func\n  }\n\n  static defaultProps = {\n    weekOffset: 0,\n    renderDay: day => day.format('YYYY-MM-D'),\n  }\n\n\n  render() {\n    const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const { className, selectedDate, viewDate, type, weekOffset, renderDay, onNextMonth, onPrevMonth, onPickDate } = this.props;\n\n    const calendarObject = createDateObjects(viewDate, weekOffset);\n\n    calendarObject.forEach( item => {\n      if(selectedDate && item.day.format(\"YYYY-MM-DD\") == selectedDate.format(\"YYYY-MM-DD\")){\n        item.classNames = item.classNames ? item.classNames + ' selected' : 'selected';\n      }\n      if(item.day.format(\"YYYY-MM-DD\") == moment().format(\"YYYY-MM-DD\")){\n        item.classNames = item.classNames ? item.classNames + ' current' : 'current';\n      }\n    })\n\n\n    return (\n      <div className={classNames(className, classes.calendar, {[classes.calendarDatepicker] : type == 'datepicker'})}>\n\n        {\n          type == 'datepicker'\n          ?\n          <div className={classes.calendarHeader}>\n            <button onClick={onPrevMonth}>&laquo;</button>\n            <div className={classes.calendarHeaderCurrentDate}>{viewDate.format('MMMM YYYY')}</div>\n            <button onClick={onNextMonth}>&raquo;</button>\n          </div>\n          :\n          null\n        }\n        <div className={classes.calendarGrid}>\n          {days.map((day) =>\n            <div key={day} className={classNames(classes.calendarGridItem, classes.dayHeader)}>\n              {day}\n            </div>\n          )}\n          {calendarObject.map((day, i) =>\n            <div\n              key={`day-${i}`}\n              className={classNames(day.classNames, classes.calendarGridItem)}\n              onClick={(e) => onPickDate(day.day)}\n            >\n              <span>{renderDay(day.day)}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}"]}