{"version":3,"sources":["app\\renderer\\assets\\other\\gerber\\js\\parse\\gerber.js"],"names":[],"mappings":"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","file":"gerber.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["export default () => {\n  return {\n    parse,\n    getBounds\n  }\n};\n\n///////////////////////////////////////////////\n\nvar index = {\n    BOTTOM   : 1,\n    TOP      : 2,\n    BOARD    : 0,\n    COPPER   : 1,\n    SOLDER   : 2,\n    PASTE    : 3,\n    SILK     : 4,\n    OUTLINE  : 5\n};\n\nvar layerNames = {};\nlayerNames[''] = 'No layer';\nlayerNames[index.BOTTOM+''+index.COPPER]                = 'Bottom copper';\nlayerNames[index.BOTTOM+''+index.SOLDER]                = 'Bottom solder mask';\nlayerNames[index.BOTTOM+''+index.PASTE]                 = 'Bottom solder paste';\nlayerNames[index.BOTTOM+''+index.SILK]                  = 'Bottom silk-screen';\nlayerNames[index.TOP+''+index.COPPER]                   = 'Top copper';\nlayerNames[index.TOP+''+index.SOLDER]                   = 'Top solder mask';\nlayerNames[index.TOP+''+index.PASTE]                    = 'Top solder paste';\nlayerNames[index.TOP+''+index.SILK]                     = 'Top silk-screen';\nlayerNames[(index.TOP|index.BOTTOM)+''+index.BOARD]     = 'Drill';\nlayerNames[(index.TOP|index.BOTTOM)+''+index.OUTLINE]   = 'Outline';\n\n\nfunction guessLayer(f) {\n    f = f.toLowerCase();\n    if(f.match(/\\.drl|\\.drd|\\.txt/))\n        return [index.BOTTOM|index.TOP, index.BOARD];\n    if(f.match(/\\.out|outline/))\n        return [index.BOTTOM|index.TOP, index.OUTLINE];\n    if(f.match(/\\.gbl|\\.sol/) || f.match(/bot/) && f.match(/copper|signal/))\n        return [index.BOTTOM, index.COPPER];\n    if(f.match(/\\.gbs|\\.sts/) || f.match(/bot/) && f.match(/s(?:old(?:er|)|)ma?(?:sk|ks)/))\n        return [index.BOTTOM, index.SOLDER];\n    if(f.match(/\\.gbp|\\.crs/) || f.match(/bot/) && f.match(/pas/))\n        return [index.BOTTOM, index.PASTE];\n    if(f.match(/\\.gbo|\\.pls/) || f.match(/bot/) && f.match(/si?lk/))\n        return [index.BOTTOM, index.SILK];\n    if(f.match(/\\.gtl|\\.cmp/) || f.match(/top/) && f.match(/copper|signal/))\n        return [index.TOP, index.COPPER];\n    if(f.match(/\\.gts|\\.stc/) || f.match(/top/) && f.match(/s(?:old(?:er|)|)ma?(?:sk|ks)/))\n        return [index.TOP, index.SOLDER];\n    if(f.match(/\\.gtp|\\.crc/) || f.match(/top/) && f.match(/pas/))\n        return [index.TOP, index.PASTE];\n    if(f.match(/\\.gto|\\.plc/) || f.match(/top/) && f.match(/si?lk/))\n        return [index.TOP, index.SILK];\n};\n\nfunction parse(text, name){\n    var g;\n    if(text.match(/^[\\s%]*M48/)){\n        g = parseDrill(text, parseStandard);\n    }\n    else{\n        g = parseStandard(text, parseStandard);\n    }\n    var guess   = guessLayer(name);\n    g.side      = guess[0];\n    g.type      = guess[1];\n    g.layerType = layerNames[g.side+''+g.type];\n    g.name      = name;\n    g.isGerber  = true;\n    g.bounds    = getBounds(g);\n\n    return g;\n};\n\nfunction getBounds(g, r){\n    r = {minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity};\n    var scale = g.scale;\n    r.minX /= scale, r.minY /= scale, r.maxX /= scale, r.maxY /= scale;\n    for(var i = 0; i < g.cmds.length; i++) {\n        var s = g.shapes[g.cmds[i][1]];\n        if(!s)\n            continue;\n        var x = g.cmds[i][2], y = g.cmds[i][3], rx = 0, ry = 0;\n        if(s[0] == 'C')\n            rx = ry = s[1]/2;\n        else if(s[0] == 'R')\n            rx = s[1]/2, ry = s[2]/2;\n        else\n            continue;\n\n        if(x-rx < r.minX)\n            r.minX = x-rx;\n        if(y-ry < r.minY)\n            r.minY = y-ry;\n        if(x+rx > r.maxX)\n            r.maxX = x+rx;\n        if(y+ry > r.maxY)\n            r.maxY = y+ry;\n    }\n    r.minX *= scale, r.minY *= scale, r.maxX *= scale, r.maxY *= scale;\n    return r\n}\n\nfunction parseDrill(text) {\n    text = text.replace(/^[\\s%]*M48/, '');\n    text = text.replace(/[^\\S\\n]+/g, '');\n\n    function numVal(x) {\n        if(x[0] == '+')\n            return numVal(x.slice(1));\n        if(x[0] == '-')\n            return -numVal(x.slice(1));\n        if(x == '0')\n            return 0;\n        if(g.omitLead)\n            while(x.length < g.num)\n                x = '0'+x;\n        else\n            while(x.length < g.num)\n                x += '0';\n        return parseFloat(x.slice(0, g.int)+'.'+x.slice(g.int), 10);\n    }\n\n    var cmds = text.split('\\n');\n\n    var g = {offA: 0, offB: 0, shapes: [], cmds: [], scale: 1}, shape, body = false, prevX = 0, prevY = 0;\n\n    for(var i = 0; i < cmds.length; i++) {\n        var d = cmds[i];\n        if(!body) {\n            if(d[0] == 'T') {\n                var r = /^T(\\d+)[^C]*C([\\d.]+)/.exec(d); // assert(r);\n                g.shapes[parseInt(r[1], 10)] = ['C', +r[2]];\n            }\n            else if(d == 'METRIC,LZ')\n                g.scale = 1, g.omitLead = false, g.int = 3, g.dec = 3, g.num = 6;\n            else if(d == 'METRIC,TZ' || d == 'M71')\n                g.scale = 1, g.omitLead = true, g.int = 3, g.dec = 3, g.num = 6;\n            else if(d == 'INCH,LZ')\n                g.scale = 25.4, g.omitLead = false, g.int = 2, g.dec = 4, g.num = 6;\n            else if(d == 'INCH,TZ' || d == 'M72')\n                g.scale = 25.4, g.omitLead = true, g.int = 2, g.dec = 4, g.num = 6;\n            else if(d == '%')\n                body = true;\n        } else {\n            function getNum(offset) {\n                var r = /^[-+\\d]*/.exec(d = d.slice(offset)); // assert(r);\n                d = d.slice(r[0].length);\n                return numVal(r[0]);\n            }\n            if(d[0] == 'T')\n                shape = parseInt(d.slice(1), 10);\n            else if(d[0] == 'R') {\n                var r = /^\\d+/.exec(d = d.slice(1)); // assert(r);\n                var nr = parseInt(r[0], 10), dx = 0, dy = 0;\n                d = d.slice(r[0].length);\n                if(d[0] == 'X')\n                    dx = getNum(1);\n                if(d[0] == 'Y')\n                    dy = getNum(1);\n\n                // assert(!d.length);\n                for(var x = prevX, y = prevY, j = 0; j < nr; j++)\n                    x += dx, y += dy, g.cmds.push([(1<<2) | 3, shape, x, y]);\n                prevX = x, prevY = y;\n            }\n            else {\n                var x = prevX, y = prevY, coords = false;\n                if(d[0] == 'X')\n                    x = getNum(1), coords = true;\n                if(d[0] == 'Y')\n                    y = getNum(1), coords = true;\n                if(coords) {\n                    g.cmds.push([(1<<2) | 3, shape, x, y]);\n                    prevX = x, prevY = y;\n                }\n            }\n        }\n    }\n    return g;\n};\n\nfunction parseStandard(text, name){\n    text = text.replace(/\\s+/g, ''); // Get rid of any spaces/newlines.\n    //text = text.replace(/%%+/g, ''); // Compact parameters.\n\n    // Split into data and parameters sections;\n    var sections = text.split('%');\n\n    var g = {offA: 0, offB: 0, shapes: [], cmds: [], scale: 1}, shape = 0, macros = {}, mode = 1, inverted = false, prevX = 0, prevY = 0;\n\n    function numVal(x) {\n        if(x[0] == '+')\n            return numVal(x.slice(1));\n        if(x[0] == '-')\n            return -numVal(x.slice(1));\n        if(x == '0')\n            return 0;\n        if(g.omitLead)\n            while(x.length < g.num)\n                x = '0'+x;\n        else\n            while(x.length < g.num)\n                x += '0';\n        return parseFloat(x.slice(0, g.int)+'.'+x.slice(g.int), 10);\n    }\n\n    // Even positions are function codes, odd ones are parameters.\n    for(var i = 0; i < sections.length; i++) {\n        // Ignore empty sections.\n        if(!sections[i].length)\n            continue;\n        // Get rid of data end markers at the end of data.\n        sections[i][sections[i].length-1] == '*' && (sections[i] = sections[i].slice(0, -1));\n        sections[i] = sections[i].split('*');\n        for(var j = 0; j < sections[i].length; j++) {\n            var d = sections[i][j];\n            if(i%2) { // Parameters.\n                if(d[0] == 'F' && d[1] == 'S') {// Format Specification.\n                    var r = /^([LT]?)([AI])X(\\d)(\\d)Y(\\d)(\\d)$/.exec(d.slice(2)); // assert(r);\n                    g.omitLead = !r[1] || r[1] == 'L';\n                    g.abs = r[2] == 'A';\n                    if(!g.abs) throw new Error('Need absolute values');\n                    g.int = +r[3], g.dec = +r[4], g.num = g.int+g.dec;\n                } else if(d[0] == 'O' && d[1] == 'F') {// Offset.\n                    var r = /^(?:A([-+\\d.]+)|)(?:B([-+\\d.]+)|)$/.exec(d.slice(2)); // assert(r);\n                    g.offA = parseInt(r[1], 10), g.offB = parseInt(r[2], 10);\n                } else if(d == 'IPNEG') // Image Polarity.\n                    throw new Error('Negative image polarity');\n                else if(d[0] == 'L' && d[1] == 'P') { // Layer Polarity.\n                    if(inverted && d[2] == 'D') // Switch to dark.\n                        g.cmds.push([16<<2, inverted = false]);\n                    else if(!inverted && d[2] == 'C') // Switch to clear.\n                        g.cmds.push([16<<2, inverted = true]);\n                } else if(d[0] == 'A' && d[1] == 'M') { // Aperture Macro.\n                    var macro = [];\n                    for(j++; j < sections[i].length; j++)\n                        macro.push(sections[i][j]/*.split(',')*/);\n                    macros[d.slice(2)] = macro;\n                } else if(d[0] == 'A' && d[1] == 'D' && d[2] == 'D') { // Aperture Definition.\n                    var r = /^(\\d+)([^,]+)(?:,(.+)|)$/.exec(d.slice(3)); // assert(r);\n                    var j = r[1]-10, args = [];\n                    if(r[3])\n                        args = r[3].split('X');\n                    if(macros[r[2]]) {\n                        function applyArgs(m) {\n                            m = m.replace(/\\$(\\d+)/g, function(s, n) {\n                                return +args[n-1] || 0;\n                            }).toLowerCase(), repl = true;\n                            while(repl == true)\n                                repl = false, m = m.replace(/([\\d.]+)x([\\d.]+)/g, function(s, a, b) {return repl = true, a*b});\n                            repl = true;\n                            while(repl == true)\n                                repl = false, m = m.replace(/([\\d.]+)\\/([\\d.]+)/g, function(s, a, b) {return repl = true, a/b});\n                            repl = true;\n                            while(repl == true)\n                                repl = false, m = m.replace(/([\\d.]+)\\+([\\d.]+)/g, function(s, a, b) {return repl = true, a+b});\n                            repl = true;\n                            while(repl == true)\n                                repl = false, m = m.replace(/([\\d.]+)-([\\d.]+)/g, function(s, a, b) {return repl = true, a-b});\n                            return m;\n                        }\n                        var m1 = macros[r[2]], m2 = [];\n                        for(var k = 0; k < m1.length; k++) {\n                            var eq = /^\\$(\\d+)=(.+)$/.exec(m1[k]);\n                            if(eq)\n                                args[eq[1]-1] = +applyArgs(eq[2]);\n                            else\n                                m2.push(applyArgs(m1[k]).split(',').map(function(x) {return +x}));\n                        }\n                        g.shapes[j] = ['M', m2];\n\n                    } else\n                        g.shapes[j] = [r[2]].concat(args.map(function(x) {return +x}));\n                    if(j < shape)\n                        shape = j;\n                } else if(d == 'MOIN') // Specify Inches.\n                    g.scale = 25.4;\n                else if(d == 'MOMM') // Specify MMs.\n                    g.scale = 1;\n                else{\n                    // console.log(d);\n                }\n            } else { // Function codes.\n                if(d[0] == 'G' && d[1] == '0' && d[2] == '4' || d[0] == 'M')\n                    continue;\n                if(d[0] == 'G' && d[1] == '5' && d[2] == '4')\n                    d = d.slice(3);\n                if(d == 'G70') { // Specify Inches.\n                    g.scale = 25.4;\n                    continue;\n                }\n                if(d == 'G74') { // Set Single quadrant mode.\n                    mode &= ~4;\n                    continue;\n                }\n                if(d == 'G75') { // Set Multi quadrant mode.\n                    mode |= 4;\n                    continue;\n                }\n                if(d == 'G36') { // Start Outline fill.\n                    if(!(mode & 8))\n                        g.cmds.push([8<<2, true]);\n                    mode |= 8;\n                    continue;\n                }\n                if(d == 'G37') { // End Outline fill.\n                    if(mode & 8)\n                        g.cmds.push([8<<2, false]);\n                    mode &= ~8;\n                    continue;\n                }\n                var cmode = 0;\n                if(d[0] == 'G' && d.length > 4) {\n                    var r = /^\\d*/.exec(d = d.slice(1)); // assert(r);\n                    mode = (mode & 12) | (cmode = parseInt(r[0], 10));\n                    d = d.slice(r[0].length);\n                }\n                function getNum(offset) {\n                    var r = /^[-+\\d]*/.exec(d = d.slice(offset)); // assert(r);\n                    d = d.slice(r[0].length);\n                    return numVal(r[0]);\n                }\n                var x = prevX, y = prevY, oi = 0, oj = 0, hasX = false, hasY = false;\n                if(d[0] == 'X')\n                    x = getNum(1), hasX = true;\n                if(d[0] == 'Y')\n                    y = getNum(1), hasY = true;\n                if(d[0] == 'I')\n                    oi = getNum(1), (!(mode&2) && (x += oi, hasX = true));\n                if(d[0] == 'J')\n                    oj = getNum(1), (!(mode&2) && (y += oj, hasY = true));\n                if(d[0] == 'D')  {// Draw.\n                    if(d[1] == '0')\n                        g.cmds.push([(mode<<2) | d[2], shape, x, y, oi, oj]);\n                    else\n                        shape = d.slice(1)-10;\n                } else if(hasX && (x != prevX) || hasY && (y != prevY))\n                    g.cmds.push([(mode<<2) | 1, shape, x, y, oi, oj]);\n                else\n                prevX = x, prevY = y;\n            }\n        }\n    }\n    return g;\n}\n\n"]}