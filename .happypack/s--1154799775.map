{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\TaskLabelsEditModal\\TaskLabelsEditModal.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;;IAAY,Y;;AAIZ;;;;AACA;;AACA;;AAGA;;;;AAGA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAlBA;;;AAIA;;;AAGA;;;AAMA;;;AAGA;;;AAIA;AACA;AACA;;AAEO,IAAM,6DAAY,gBAAM,WAAN,CAAkB;AAAA;AACzC,oBADyC,gCACpB;AACnB,QAAG,iBAAI,KAAK,KAAT,EAAgB,mBAAhB,CAAH,EAAwC;AACtC,WAAK,KAAL,CAAW,QAAX,CAAoB,wBAAQ,IAAR,CAAgB,KAAK,KAAL,CAAW,UAA3B,oBAAsD,KAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,CAAsB,MAA5E,CAApB;AACD;AACF,GALwC;AAMzC,QANyC,oBAMhC;AAAA;;AACP,SAAK,KAAL,CAAW,QAAX,CAAoB,wBAAQ,MAAR,CAAkB,KAAK,KAAL,CAAW,UAA7B,mBAAuD,KAAK,KAAL,CAAW,KAAX,CAAiB,KAAjB,CAAuB,MAA9E,CAApB;AACA,eAAW,YAAI;AACb,YAAK,KAAL,CAAW,YAAX,CAAwB,WAAxB,CAAoC,EAAC,OAAO,MAAK,KAAL,CAAW,KAAX,CAAiB,IAAzB,EAApC,EAAoE,IAApE,CAA0E,oBAAY;AACpF,cAAK,KAAL,CAAW,SAAX;AACD,OAFD;AAGD,KAJD;AAKD,GAbwC;AAczC,QAdyC,oBAchC;AAAA,iBAIH,KAAK,KAJF;AAAA,QAEL,UAFK,UAEL,UAFK;AAAA,QAEO,KAFP,UAEO,KAFP;AAAA,QAGL,WAHK,UAGL,WAHK;AAAA,QAGQ,YAHR,UAGQ,YAHR;AAAA,QAGsB,SAHtB,UAGsB,SAHtB;;;AAMP,WACE;AAAA;AAAA,QAAK,OAAO,EAAC,OAAO,OAAR,EAAZ;AACE;AAAA;AAAA,UAAK,WAAU,aAAf;AAAA;AAAA,OADF;AAEE;AAAA;AAAA,UAAK,WAAU,YAAf,EAA4B,OAAO,EAAC,WAAW,OAAZ,EAAqB,WAAW,MAAhC,EAAnC;AACI,yBAAI,KAAJ,EAAW,cAAX,IACA,0DAAgB,OAAU,UAAV,kBAAhB,EAAqD,OAAO,MAAM,KAAN,CAAY,MAAxE,GADA,GAEA;AAHJ,OAFF;AAOE;AAAA;AAAA,UAAK,WAAU,kDAAf;AACE;AAAA;AAAA,YAAQ,OAAO,EAAC,aAAa,MAAd,EAAf,EAAsC,SAAS,mBAAM;AAAC,4BAAe;AAAY,aAAjF;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAQ,WAAU,SAAlB;AACE,qBAAS,KAAK,MADhB;AAEE,qBAAS,MAAM;AAFjB;AAAA;AAAA;AAFF;AAPF,KADF;AAiBD;AArCwC,CAAlB,CAAZ,CAAN;;AAwCP;AACA;AACA;;AAEA,SAAS,eAAT,CAAyB,KAAzB,QAA6C;AAAA,MAAX,OAAW,QAAX,OAAW;;AAC3C,MAAM,+BAA6B,OAAnC;AACA,SAAO;AACL,WAAO,iBAAI,KAAJ,EAAW,UAAX,CADF,EAC0B;AAC/B;AAFK,GAAP;AAID;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,sBADK;AAEL,kBAAc,+BAAmB,YAAnB,EAAiC,QAAjC;AAFT,GAAP;AAID;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,SAA7C,C","file":"TaskLabelsEditModal.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as TasksActions from '../Tasks.actions.js';\n\n// Component Core\nimport React from 'react';\nimport moment from 'moment';\nimport { get, has } from 'lodash';\nimport { actions } from 'react-redux-form';\n\n// Styles\nimport classNames from 'classnames';\n\n// Sub Components\nimport TaskLabelsEdit from '../TaskLabelsEdit/TaskLabelsEdit.jsx'\nimport Button from 'app/renderer/main/components/Buttons/Button/Button'\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// COMPONENT /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nexport const Component = React.createClass({\n  componentWillMount() {\n    if(has(this.props, 'board.data.labels')){\n      this.props.dispatch(actions.load(`${this.props.boardModel}.forms.labels`, this.props.board.data.labels));\n    }\n  },\n  submit() {\n    this.props.dispatch(actions.change(`${this.props.boardModel}.data.labels`, this.props.board.forms.labels));\n    setTimeout(()=>{\n      this.props.tasksActions.updateBoard({board: this.props.board.data}).then( response => {\n        this.props.modalHide();\n      });\n    })\n  },\n  render() {\n    const {\n      boardModel, board,\n      modalCancel, modalConfirm, modalHide\n    } = this.props;\n\n    return (\n      <div style={{width: '500px'}}>\n        <div className=\"modal-title\">Edit Labels</div>\n        <div className=\"modal-body\" style={{maxHeight: '400px', overflowY: 'auto'}}>\n          { has(board, 'forms.labels')\n          ? <TaskLabelsEdit model={`${boardModel}.forms.labels`} value={board.forms.labels} />\n          : null}\n        </div>\n        <div className=\"modal-footer-no-line layout-row layout-align-end\">\n          <Button style={{marginRight: '10px'}} onClick={() => {modalCancel(); modalHide()}}>Cancel</Button>\n          <Button className=\"primary\"\n            onClick={this.submit}\n            loading={board.savePending}\n          >Update Labels</Button>\n        </div>\n      </div>\n    )\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CONTAINER /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps(state, { boardId }) {\n  const boardModel = `tasks.boards.${boardId}`;\n  return {\n    board: get(state, boardModel), // Get the value from the model\n    boardModel\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    tasksActions: bindActionCreators(TasksActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}