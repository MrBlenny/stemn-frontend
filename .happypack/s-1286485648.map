{"version":3,"sources":["app\\renderer\\main\\modules\\Mentions\\MentionsInput\\Highlighter.js"],"names":[],"mappings":"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","file":"Highlighter.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React, { Component, PropTypes, Children } from 'react';\nimport { defaultStyle } from 'substyle';\n\nimport isEqual from \"lodash/isEqual\";\n\nimport utils from './utils';\nimport Mention from './Mention';\n\nconst _generateComponentKey = (usedKeys, id) => {\n  if(!usedKeys.hasOwnProperty(id)) {\n    usedKeys[id] = 0;\n  } else {\n    usedKeys[id]++;\n  }\n  return id + \"_\" + usedKeys[id];\n};\n\nclass Highlighter extends Component {\n\n  static propTypes = {\n    selection: PropTypes.shape({\n      start: PropTypes.number,\n      end: PropTypes.number\n    }).isRequired,\n\n    markup: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n\n    displayTransform: PropTypes.func.isRequired,\n    onCaretPositionChange: PropTypes.func.isRequired,\n    inputStyle: PropTypes.object\n  };\n\n  static defaultProps = {\n    value: \"\",\n    inputStyle: {}\n  };\n\n  constructor() {\n    super(...arguments);\n\n    this.state = { lastPosition: {} };\n  }\n\n  componentDidMount() {\n    this.notifyCaretPosition();\n  }\n\n  componentDidUpdate() {\n    this.notifyCaretPosition()\n  }\n\n  notifyCaretPosition() {\n    let { caret } = this.refs;\n\n    if(!caret) {\n      return;\n    }\n\n    let position = {\n      left: caret.offsetLeft,\n      top: caret.offsetTop\n    };\n\n    let { lastPosition } = this.state;\n\n    if(isEqual(lastPosition, position)) {\n      return;\n    }\n\n    this.setState({\n      lastPosition: position\n    });\n\n    this.props.onCaretPositionChange(position);\n  }\n\n  render() {\n    let { selection, value, markup, displayTransform, inputStyle } = this.props;\n\n    // If there's a caret (i.e. no range selection), map the caret position into the marked up value\n    var caretPositionInMarkup;\n    if(selection.start === selection.end) {\n      caretPositionInMarkup = utils.mapPlainTextIndex(value, markup, selection.start, 'START', displayTransform);\n    }\n\n    var resultComponents = [];\n    var componentKeys = {};\n\n    // start by appending directly to the resultComponents\n    var components = resultComponents;\n\n    var substringComponentKey = 0;\n\n    var textIteratee = (substr, index, indexInPlainText) => {\n      // check whether the caret element has to be inserted inside the current plain substring\n      if(utils.isNumber(caretPositionInMarkup) && caretPositionInMarkup >= index && caretPositionInMarkup <= index + substr.length) {\n        // if yes, split substr at the caret position and insert the caret component\n        var splitIndex = caretPositionInMarkup - index;\n        components.push(\n          this.renderSubstring(substr.substring(0, splitIndex), substringComponentKey)\n        );\n\n        // add all following substrings and mention components as children of the caret component\n        components = [ this.renderSubstring(substr.substring(splitIndex), substringComponentKey) ];\n      } else {\n        // otherwise just push the plain text substring\n        components.push(\n          this.renderSubstring(substr, substringComponentKey)\n        );\n      }\n\n      substringComponentKey++;\n    };\n\n    var mentionIteratee = function(markup, index, indexInPlainText, id, display, type, lastMentionEndIndex) {\n      // generate a component key based on the id\n      var key = _generateComponentKey(componentKeys, id);\n      components.push(\n        this.getMentionComponentForMatch(id, display, type, key)\n      );\n    }.bind(this);\n    utils.iterateMentionsMarkup(value, markup, textIteratee, mentionIteratee, displayTransform);\n\n    // append a span containing a space, to ensure the last text line has the correct height\n    components.push(\" \");\n\n    if(components !== resultComponents) {\n      // if a caret component is to be rendered, add all components that followed as its children\n      resultComponents.push(\n        this.renderHighlighterCaret(components)\n      );\n    }\n\n    let { style, className } = substyle(this.props, getModifiers(this.props));\n\n    return (\n      <div\n        className={ className }\n        style={{\n          ...inputStyle,\n          ...style\n        }}>\n\n        { resultComponents }\n      </div>\n    );\n  }\n\n  renderSubstring(string, key) {\n    // set substring span to hidden, so that Emojis are not shown double in Mobile Safari\n    return (\n      <span { ...substyle(this.props, \"substring\") } key={key}>\n        { string }\n      </span>\n    );\n  }\n\n  // Returns a clone of the Mention child applicable for the specified type to be rendered inside the highlighter\n  getMentionComponentForMatch(id, display, type, key) {\n    var childrenCount = Children.count(this.props.children);\n    var props = { id, display, key };\n\n    if(childrenCount > 1) {\n      if(!type) {\n        throw new Error(\n          \"Since multiple Mention components have been passed as children, the markup has to define the __type__ placeholder\"\n        );\n      }\n\n      // detect the Mention child to be cloned\n      var foundChild = null;\n      Children.forEach(this.props.children, (child) => {\n        if(!child) {\n          return;\n        }\n\n        if(child.props.type === type) {\n          foundChild = child;\n        }\n      });\n\n      // clone the Mention child that is applicable for the given type\n      return React.cloneElement(foundChild, props);\n    }\n\n    if(childrenCount === 1) {\n      // clone single Mention child\n      var child = this.props.children.length ? this.props.children[0] : Children.only(this.props.children);\n      return React.cloneElement(child, props);\n    }\n\n    // no children, use default configuration\n    return Mention(props);\n  }\n\n  // Renders an component to be inserted in the highlighter at the current caret position\n  renderHighlighterCaret(children) {\n    return (\n      <span { ...substyle(this.props, \"caret\") } ref=\"caret\" key=\"caret\">\n        { children }\n      </span>\n    );\n  }\n}\n\nexport default Highlighter;\n\nconst getModifiers = (props, ...modifiers) => ({\n  ...modifiers.reduce((result, modifier) => ({ ...result, [modifier]: true }), {}),\n\n  '&singleLine': props.singleLine,\n});\n\nconst substyle = defaultStyle({\n  position: 'relative',\n  width: 'inherit',\n  color: 'transparent',\n\n  overflow: 'hidden',\n\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word',\n\n  '&singleLine': {\n    whiteSpace: 'pre',\n    wordWrap: null\n  },\n\n  substring: {\n    visibility: 'hidden'\n  }\n});\n"]}