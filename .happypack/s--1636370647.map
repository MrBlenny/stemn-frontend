{"version":3,"sources":["app\\renderer\\assets\\other\\gerber\\js\\render\\gerber.js"],"names":[],"mappings":"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","file":"gerber.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["var RenderGerber = {};\n\nRenderGerber.renderLayer = renderLayer; // function(canvas, g, limits)\n\nRenderGerber.index = {\n    BOTTOM   : 1,\n    TOP      : 2,\n    BOARD    : 0,\n    COPPER   : 1,\n    SOLDER   : 2,\n    PASTE    : 3,\n    SILK     : 4,\n    OUTLINE  : 5\n};\n\nRenderGerber.colors = [];\nRenderGerber.colors[RenderGerber.index.BOARD]  = '#0e2c0e';//'#203020';//'#255005';\nRenderGerber.colors[RenderGerber.index.COPPER] = '#b87333';//'#c0b030'\nRenderGerber.colors[RenderGerber.index.SOLDER] = 'rgba(94, 152, 6, .5)';//'rgba(37, 80, 5, .7)';\nRenderGerber.colors[RenderGerber.index.PASTE]  = '#e6e8fa';\nRenderGerber.colors[RenderGerber.index.SILK]   = '#ffffff';\n\n\nexport default RenderGerber;\n\n///////////////////////////////////////////////\n\nfunction renderLayer(canvas, g, limits){\n    var ctx = canvas.getContext('2d');\n\n    var color = 'black';\n    ctx.globalCompositeOperation = 'source-over';\n    ctx.fillStyle = color, ctx.strokeStyle = color;\n\n    var scaleX = canvas.width / (limits.maxX-limits.minX) * g.scale, scaleY = canvas.height / (limits.maxY-limits.minY) * g.scale;\n    var scaleMax = Math.max(scaleX, scaleY);\n    ctx.setTransform(scaleX, 0, 0, scaleY, 0, 0);\n\n    var prevX = 0, prevY = 0, minX = limits.minX/g.scale, minY = limits.minY/g.scale;\n\n\n    _.forEach(g.cmds, function(cmd){\n        var mode = (cmd[0] >> 2), op = cmd[0] & 3;\n        if(mode == 16) { // Switch layer polarity.\n            ctx.globalCompositeOperation = cmd[1] ? 'destination-out' : 'source-over';\n        }\n        var x = cmd[2]-minX, y = cmd[3]-minY;\n        if(mode & 8) { // Outline fill mode.\n            mode &= ~8;\n            if(op == 0) { // Start/End Outline fill mode.\n                if(cmd[1])\n                    ctx.beginPath(), ctx.moveTo(prevX, prevY);\n                else\n                    ctx.fill();\n            }\n            if(op == 2) // Fill.\n                ctx.fill(), ctx.beginPath(), ctx.moveTo(x, y);\n            else if(op == 1) { // Draw.\n                if(mode == 1 || mode == 5) // Linear Interpolation.\n                    ctx.lineTo(x, y);\n                else if(mode == 2 || mode == 3) // Single quadrant Circular Interpolation.\n                    console.log('(FILL) Failed to single quadrant '+(mode==3?'CCW':'CW'), cmd, s);\n                else if(mode == 6 || mode == 7) { // Multi quadrant Circular Interpolation.\n                    var ox = cmd[4], oy = cmd[5], cx = prevX+ox, cy = prevY+oy;\n                    ctx.arc(cx, cy, Math.sqrt(ox*ox+oy*oy), Math.atan2(-oy, -ox), Math.atan2(y-cy, x-cx), mode == 6);\n                } else\n                    console.log(mode);\n            } else\n                console.log(mode, op);\n            prevX = x, prevY = y;\n        }\n\n        var s = g.shapes[cmd[1]];\n        if(!s) {\n            console.log(cmd, s);\n        }\n        if(op != 2) {\n            if(op == 3) { // Expose.\n                if(s[0] == 'C'){\n                    ctx.beginPath();\n                    ctx.arc(x, y, s[1]/2, 0, Math.PI*2);\n                    ctx.fill();\n                }\n                else if(s[0] == 'R'){\n                    ctx.beginPath();\n                    ctx.rect(x-s[1]/2, y-s[2]/2, s[1], s[2]);\n                    ctx.fill();\n                }\n                else if(s[0] == 'O') {\n                    ctx.beginPath(), ctx.moveTo(x, y - s[2] / 2);\n                    ctx.bezierCurveTo(x + s[1] / 2, y - s[2] / 2, x + s[1] / 2, y + s[2] / 2, x, y + s[2] / 2);\n                    ctx.bezierCurveTo(x - s[1] / 2, y + s[2] / 2, x - s[1] / 2, y - s[2] / 2, x, y - s[2] / 2);\n                    ctx.fill();\n                } else if(s[0] == 'M') { // Aperture Macro.\n                    for(var j = 0; j < s[1].length; j++) {\n                        var m = s[1][j];\n                        if((m[0] == 2 || m[0] == 20) && m[1]) { // Line.\n                            ctx.lineWidth = m[2];\n                            ctx.lineCap = 'square';\n                            ctx.beginPath();\n                            ctx.moveTo(x+m[3], y+m[4]), ctx.lineTo(x+m[5], y+m[6]);\n                            ctx.stroke();\n                        } else if(m[0] == 21 && m[1]) { // Rectangle.\n                            ctx.beginPath(), ctx.rect(x+m[4]-m[2]/2, y+m[5]-m[3]/2, m[2], m[3]), ctx.fill();\n                        } else if(m[0] == 4 && m[1]) { // Outline.\n                            ctx.beginPath();\n                            ctx.moveTo(m[3], m[4]);\n                            for(var k = 1; k < m[2]; k++)\n                                ctx.lineTo(m[3+k*2], m[4+k*2]);\n                            ctx.fill();\n                        } else if(m[0] == 5 && m[1]) { // Polygon (regular).\n                            var nSides = m[2], cx = x+m[3], cy = y+m[4], r = m[5]/2;\n                            ctx.beginPath();\n                            var step = 2 * Math.PI / nSides, angle = m[6] * Math.PI / 180;\n                            ctx.moveTo(cx +  r * Math.cos(angle), cy +  r *  Math.sin(angle));\n                            for(var k = 0; k < nSides; k++) {\n                                angle += step;\n                                ctx.lineTo(cx + r * Math.cos(angle), cy + r * Math.sin(angle));\n                            }\n                            ctx.fill();\n                        } else {\n                            console.log('Failed to macro', m, cmd, s);\n                            ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n                            ctx.beginPath(), ctx.arc(x, y, .5, 0, Math.PI*2), ctx.fill();\n                            ctx.fillStyle = 'rgba(255, 0, 0, .2)';\n                            ctx.beginPath(), ctx.arc(x, y, 1.5, 0, Math.PI*2), ctx.fill();\n                            ctx.fillStyle = color;\n                        }\n                    }\n                } else {\n                    console.log('Failed to expose', cmd, s);\n                    ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n                    ctx.beginPath(), ctx.arc(x, y, .5, 0, Math.PI*2), ctx.fill();\n                    ctx.fillStyle = 'rgba(255, 0, 0, .2)';\n                    ctx.beginPath(), ctx.arc(x, y, 1.5, 0, Math.PI*2), ctx.fill();\n                    ctx.fillStyle = color;\n                }\n            }\n            else if(op == 1) { // Draw.\n                if(s[0] == 'C') {\n                    if(!s[1]) {\n                        prevX = x, prevY = y;\n                    }\n\n                    //HACK Copper lines get some extra thickness.\n                    if(g.type == RenderGerber.index.COPPER)\n                        ctx.lineWidth = Math.ceil(s[1]*scaleMax/3+.01)/scaleMax*3;\n                    else\n                        ctx.lineWidth = s[1];\n                    ctx.lineCap = 'round';\n                    if(mode == 1 || mode == 5) { // Linear Interpolation.\n                        ctx.beginPath();\n                        ctx.moveTo(prevX, prevY), ctx.lineTo(x, y);\n                        ctx.stroke();\n                    } else if(mode == 2 || mode == 3) { // Single quadrant Circular Interpolation.\n                        console.log('Failed to single quadrant '+(mode==3?'CCW':'CW'), cmd, s);\n                        ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n                        ctx.beginPath(), ctx.arc(x, y, .5, 0, Math.PI*2), ctx.fill();\n                        ctx.fillStyle = 'rgba(255, 0, 0, .2)';\n                        ctx.beginPath(), ctx.arc(x, y, 1.5, 0, Math.PI*2), ctx.fill();\n                        ctx.fillStyle = color;\n                    } else if(mode == 6 || mode == 7) { // Multi quadrant Circular Interpolation.\n                        var ox = cmd[4], oy = cmd[5], cx = prevX+ox, cy = prevY+oy;\n                        ctx.beginPath();\n                        ctx.arc(cx, cy, Math.sqrt(ox*ox+oy*oy), Math.atan2(-oy, -ox), Math.atan2(y-cy, x-cx), mode == 6);\n                        ctx.stroke();\n                    } else {\n                        console.log('Failed to draw with circle', cmd, s);\n                        ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n                        ctx.beginPath(), ctx.arc(x, y, .5, 0, Math.PI*2), ctx.fill();\n                        ctx.fillStyle = 'rgba(255, 0, 0, .2)';\n                        ctx.beginPath(), ctx.arc(x, y, 1.5, 0, Math.PI*2), ctx.fill();\n                        ctx.fillStyle = color;\n                    }\n                } else {\n                    console.log('Failed to draw', cmd, s);\n                    ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n                    ctx.beginPath(), ctx.arc(x, y, .5, 0, Math.PI*2), ctx.fill();\n                    ctx.fillStyle = 'rgba(255, 0, 0, .2)';\n                    ctx.beginPath(), ctx.arc(x, y, 1.5, 0, Math.PI*2), ctx.fill();\n                    ctx.fillStyle = color;\n                }\n            }\n            else {\n                console.log('Failed to '+mode+' '+type, cmd, s);\n                ctx.fillStyle = 'rgba(255, 0, 0, 1)';\n                ctx.beginPath(), ctx.arc(x, y, .5, 0, Math.PI*2), ctx.fill();\n                ctx.fillStyle = 'rgba(255, 0, 0, .2)';\n                ctx.beginPath(), ctx.arc(x, y, 1.5, 0, Math.PI*2), ctx.fill();\n                ctx.fillStyle = color;\n            }\n        }\n        prevX = x, prevY = y;\n    });\n\n    // Color the canvas.\n    ctx.fillStyle = g.type ? RenderGerber.colors[g.type] : 'black';\n    ctx.globalCompositeOperation = g.type == RenderGerber.index.SOLDER ? 'source-out' : 'source-in';\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n"]}