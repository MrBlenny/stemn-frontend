'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _AutodeskViewer = require('./AutodeskViewer.css');

var _AutodeskViewer2 = _interopRequireDefault(_AutodeskViewer);

var _autodeskViewerUtils = require('./autodeskViewerUtils.js');

var _autodeskViewerUtils2 = _interopRequireDefault(_autodeskViewerUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Files/PreviewFile/PreviewCad/AutodeskViewer/AutodeskViewer.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Files/PreviewFile/PreviewCad/AutodeskViewer/AutodeskViewer.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
}

exports.default = _wrapComponent('_component')(_react3.default.createClass({
  viewerInstance: null,
  // Mounting
  onMount: function onMount(nextProps, prevProps) {
    if (!prevProps || nextProps.urn != prevProps.urn || nextProps.token != prevProps.token) {
      setTimeout(this.init(nextProps), 1); // Timeout so refs can init
    }
  },
  componentDidMount: function componentDidMount() {
    this.onMount(this.props);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    this.onMount(nextProps, this.props);
  },
  componentWillUnmount: function componentWillUnmount() {
    _autodeskViewerUtils2.default.deregister(this.viewerInstance);
  },
  init: function init(props) {
    var _this = this;

    var _props = this.props;
    var urn = _props.urn;
    var token = _props.token;

    var loadDocument = function loadDocument(viewer, options) {
      var onLoadCallback = function onLoadCallback(doc) {
        // Get all the 3D and 2D views (but keep in separate arrays so we can differentiate in the UI)
        oViews3D = window.Autodesk.Viewing.Document.getSubItemsWithProperties(doc.getRootItem(), {
          'type': 'geometry',
          'role': '3d'
        }, true);
        oViews2D = window.Autodesk.Viewing.Document.getSubItemsWithProperties(doc.getRootItem(), {
          'type': 'geometry',
          'role': '2d'
        }, true);

        // Load up first a 3D view by default
        if (oViews3D.length > 0) {
          _this.viewerInstance.load(doc.getViewablePath(oViews3D[0]));
        } else if (oViews2D.length > 0) {
          _this.viewerInstance.load(doc.getViewablePath(oViews2D[0]));
        } else {
          // $mdToast.show($mdToast.simple().theme('warn').content('Error: No views found'));
        }
      };
      var onErrorCallback = function onErrorCallback(errorMsg) {
        //          $mdToast.show($mdToast.simple().theme('warn').content('Error: '+errorMsg));
      };

      if (options.document.substring(0, 4) === 'urn:') {
        options.document = options.document.substring(4);
      }
      window.Autodesk.Viewing.Document.load('urn:' + options.document, onLoadCallback, onErrorCallback);
    };

    var center = function center() {
      if (_this.viewerInstance) {
        _this.viewerInstance.resize();
      }
    };

    var viewerEl = this.refs.cadCanvas;
    var oDocument = null;

    var oViewables = null,
        oViews3D = null,
        oViews2D = null;

    var options = {
      'document': urn,
      'accessToken': token,
      'env': 'AutodeskProduction'
    };

    this.viewerInstance = _autodeskViewerUtils2.default.register(viewerEl); // With toolbar

    window.Autodesk.Viewing.Initializer(options, function () {
      _this.viewerInstance.initialize();
      loadDocument(_this.viewerInstance, options);
    });
  },
  render: function render() {
    return _react3.default.createElement('div', { className: _AutodeskViewer2.default.preview, ref: 'cadCanvas' });
  }
}));
module.exports = exports['default'];