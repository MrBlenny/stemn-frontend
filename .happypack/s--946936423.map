{"version":3,"sources":["app\\renderer\\main\\modules\\Mentions\\MentionsInput\\Suggestion.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAoBW;AACP,UAAI,OAAO,oBAAK,KAAK,KAAV,EAAiB,oBAAK,WAAW,SAAhB,CAAjB,CAAX;;AAEA,aACE;AAAA;AAAA,qBACO,IADP,EAEO,SAAS,KAAK,KAAd,EAAqB,EAAE,YAAY,KAAK,KAAL,CAAW,OAAzB,EAArB,CAFP;AAII,aAAK,aAAL;AAJJ,OADF;AAQD;;;oCAEe;AAAA,mBACqC,KAAK,KAD1C;AAAA,UACR,EADQ,UACR,EADQ;AAAA,UACJ,KADI,UACJ,KADI;AAAA,UACG,UADH,UACG,UADH;AAAA,UACe,UADf,UACe,UADf;AAAA,UAC2B,KAD3B,UAC2B,KAD3B;;;AAGd,UAAI,UAAU,KAAK,UAAL,EAAd;AACA,UAAI,qBAAqB,KAAK,wBAAL,CAA8B,OAA9B,EAAuC,KAAvC,CAAzB;;AAEA,UAAG,WAAW,KAAX,CAAiB,gBAApB,EAAsC;AACpC,eAAO,WAAW,KAAX,CAAiB,gBAAjB,CAAkC,UAAlC,EAA8C,KAA9C,EAAqD,kBAArD,EAAyE,KAAzE,CAAP;AACD;;AAED,aAAO,kBAAP;AACD;;;iCAEY;AAAA,UACL,UADK,GACU,KAAK,KADf,CACL,UADK;;;AAGX,UAAG,sBAAsB,MAAzB,EAAiC;AAC/B,eAAO,UAAP;AACD;;AALU,UAOL,EAPK,GAOW,UAPX,CAOL,EAPK;AAAA,UAOD,OAPC,GAOW,UAPX,CAOD,OAPC;;;AASX,UAAG,CAAC,EAAD,IAAO,CAAC,OAAX,EAAoB;AAClB,eAAO,EAAP;AACD;;AAED,aAAO,OAAP;AACD;;;6CAEwB,O,EAAS;AAAA,UAC1B,KAD0B,GAChB,KAAK,KADW,CAC1B,KAD0B;;;AAGhC,UAAI,IAAI,QAAQ,WAAR,GAAsB,OAAtB,CAA8B,MAAM,WAAN,EAA9B,CAAR;;AAEA,UAAG,MAAM,CAAC,CAAV,EAAa;AACX,eAAO;AAAA;AAAW,mBAAS,KAAK,KAAd,EAAqB,SAArB,CAAX;AAA+C;AAA/C,SAAP;AACD;;AAED,aACE;AAAA;AAAW,iBAAS,KAAK,KAAd,EAAqB,SAArB,CAAX;AACI,gBAAQ,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CADJ;AAEE;AAAA;AAAQ,mBAAS,KAAK,KAAd,EAAqB,WAArB,CAAR;AACI,kBAAQ,SAAR,CAAkB,CAAlB,EAAqB,IAAE,MAAM,MAA7B;AADJ,SAFF;AAKI,gBAAQ,SAAR,CAAkB,IAAE,MAAM,MAA1B;AALJ,OADF;AASD;;;;6BA5EM,S,GAAY;AACjB,MAAI,kBAAU,MAAV,CAAiB,UADJ;AAEjB,SAAO,kBAAU,MAAV,CAAiB,UAFP;;AAIjB,cAAY,kBAAU,SAAV,CAAoB,CAC9B,kBAAU,MADoB,EAE9B,kBAAU,KAAV,CAAgB;AACd,QAAI,kBAAU,MAAV,CAAiB,UADP;AAEd,aAAS,kBAAU;AAFL,GAAhB,CAF8B,CAApB,EAMT,UAVc;AAWjB,cAAY,kBAAU,MAAV,CAAiB,UAXZ;;AAajB,WAAS,kBAAU;AAbF,C;;kBAgFN,U;;;AAEf,IAAM,WAAW,4BAAa;AAC5B,UAAQ;AADoB,CAAb,CAAjB","file":"Suggestion.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport omit from 'lodash/omit';\nimport keys from 'lodash/keys';\n\nimport { defaultStyle } from \"substyle\";\n\nclass Suggestion extends Component {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    query: PropTypes.string.isRequired,\n\n    suggestion: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        display: PropTypes.string\n      }),\n    ]).isRequired,\n    descriptor: PropTypes.object.isRequired,\n\n    focused: PropTypes.bool,\n  };\n\n  render() {\n    let rest = omit(this.props, keys(Suggestion.propTypes));\n\n    return (\n      <li\n        { ...rest }\n        { ...substyle(this.props, { \"&focused\": this.props.focused}) }>\n\n        { this.renderContent() }\n      </li>\n    );\n  }\n\n  renderContent() {\n    let { id, query, descriptor, suggestion, index } = this.props;\n\n    let display = this.getDisplay();\n    let highlightedDisplay = this.renderHighlightedDisplay(display, query);\n\n    if(descriptor.props.renderSuggestion) {\n      return descriptor.props.renderSuggestion(suggestion, query, highlightedDisplay, index);\n    }\n\n    return highlightedDisplay;\n  }\n\n  getDisplay() {\n    let { suggestion } = this.props;\n\n    if(suggestion instanceof String) {\n      return suggestion;\n    }\n\n    let { id, display } = suggestion;\n\n    if(!id || !display) {\n      return id;\n    }\n\n    return display;\n  }\n\n  renderHighlightedDisplay(display) {\n    let { query } = this.props;\n\n    let i = display.toLowerCase().indexOf(query.toLowerCase());\n\n    if(i === -1) {\n      return <span { ...substyle(this.props, \"display\") }>{ display }</span>;\n    }\n\n    return (\n      <span { ...substyle(this.props, \"display\") }>\n        { display.substring(0, i) }\n        <b { ...substyle(this.props, \"highlight\") }>\n          { display.substring(i, i+query.length) }\n        </b>\n        { display.substring(i+query.length) }\n      </span>\n    );\n  }\n\n}\n\nexport default Suggestion;\n\nconst substyle = defaultStyle({\n  cursor: \"pointer\"\n})\n"]}