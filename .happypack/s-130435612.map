{"version":3,"sources":["app\\renderer\\menubar\\modules\\Sidebar\\Sidebar.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;;IAAY,oB;;AAIZ;;;;AAGA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EApBA;;;AAIA;;;AAGA;;;AAIA;;;AAKA;;;AAOA;;AAEO,IAAM,6DAAY,gBAAM,WAAN,CAAkB;AAAA;AACzC,QADyC,oBAChC;AAAA;;AAAA,iBACsC,KAAK,KAD3C;AAAA,QACC,aADD,UACC,aADD;AAAA,QACgB,QADhB,UACgB,QADhB;AAAA,QAC0B,OAD1B,UAC0B,OAD1B;;;AAGP,QAAM,cAAc,SAAd,WAAc,CAAC,IAAD,EAAU;AAC5B,aAAO;AACL,gCAAsB,KAAK,GADtB;AAEL,eAAO,EAAC,MAAO,EAAC,OAAO,CAAC,MAAD,EAAS,SAAT,CAAR,EAAR;AAFF,OAAP;AAID,KALD;;AAOA,QAAM,YAAY,IAAI,MAAJ,CAAW,QAAQ,YAAnB,EAAiC,GAAjC,CAAlB;AACA,QAAM,mBAAmB,SAAS,YAAT,CAAsB,IAAtB,GAA6B,SAAS,YAAT,CAAsB,IAAtB,CAA2B,MAA3B,CAAkC;AAAA,aAAW,UAAU,IAAV,CAAe,QAAQ,IAAvB,CAAX;AAAA,KAAlC,CAA7B,GAA0G,EAAnI;;AAEA,WACE;AAAA;AAAA;AACE;AAAA;AAAA,UAAa,MAAM,cAAc,WAAjC,EAA8C,WAAW,kBAAQ,cAAjE,EAAiF,eAAe,kBAAQ,kBAAxG;AACE,+CAAK,WAAW,kBAAQ,OAAxB,EAAiC,SAAS;AAAA,mBAAI,MAAK,KAAL,CAAW,oBAAX,CAAgC,aAAhC,CAA8C,KAA9C,CAAJ;AAAA,WAA1C;AADF,OADF;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAW,kBAAQ,OAAnB,EAA4B,eAA5B,sBAA+C,kBAAQ,WAAvD,EAAsE,cAAc,WAApF,EAAhB;AACE;AAAA;AAAA,YAAK,WAAW,kBAAQ,aAAxB;AACE;AACE,mBAAM,sBADR;AAEE,mBAAO,QAAQ,YAFjB;AAGE,uBAAU,wBAHZ;AAIE,kBAAK,MAJP;AAKE,yBAAY;AALd,YADF;AAQE,4DAAU,WAAW,kBAAQ,iBAA7B,EAAgD,MAAK,IAArD;AARF,SADF;AAWE;AAAA;AAAA,YAAK,WAAU,iBAAf;AACG,2BAAiB,GAAjB,CAAqB,UAAC,IAAD;AAAA,mBACnB,gEAAsB,MAAM,IAA5B,EAAkC,IAAI,YAAY,IAAZ,CAAtC,EAAyD,SAAS;AAAA,uBAAI,MAAK,KAAL,CAAW,oBAAX,CAAgC,aAAhC,CAA8C,KAA9C,CAAJ;AAAA,eAAlE,GADmB;AAAA,WAArB;AADH;AAXF;AAJF,KADF;AAwBD;AAtCwC,CAAlB,CAAZ,CAAN;;AAyCP;;AAEA,SAAS,eAAT,OAA+D;AAAA,MAApC,aAAoC,QAApC,aAAoC;AAAA,MAArB,QAAqB,QAArB,QAAqB;AAAA,MAAX,OAAW,QAAX,OAAW;;AAC7D,SAAO;AACL,oBADK;AAEL,gCAFK;AAGL;AAHK,GAAP;AAKD;;AAED,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,0BAAsB,+BAAmB,oBAAnB,EAAyC,QAAzC;AADjB,GAAP;AAGD;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,SAA7C,C","file":"Sidebar.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as MenubarLayoutActions from 'app/shared/actions/menubarLayout';\n\n// Component Core\nimport React from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './Sidebar.css'\n\n\n// Sub Components\nimport AnimateShow from 'app/renderer/shared/AnimateShow/AnimateShow.jsx'\nimport SidebarProjectButton from 'app/renderer/main/modules/Sidebar/SidebarProjectButton.jsx'\nimport MdSearch from 'react-icons/md/search';\nimport Input from 'app/renderer/main/components/Input/Input/Input';\n\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nexport const Component = React.createClass({\n  render() {\n    const { menubarLayout, projects, sidebar } = this.props;\n\n    const linkProject = (item) => {\n      return {\n        pathname: `/project/${item._id}`,\n        state: {meta : {scope: ['main', 'menubar']}}\n      }\n    }\n\n    const nameRegex = new RegExp(sidebar.searchString, 'i');\n    const filteredProjects = projects.userProjects.data ? projects.userProjects.data.filter(project => nameRegex.test(project.name)) : [];\n\n    return (\n      <div>\n        <AnimateShow show={menubarLayout.showSidebar} animation={classes.animateOverlay} animationShow={classes.animateOverlayShow}>\n          <div className={classes.overlay} onClick={()=>this.props.MenubarLayoutActions.toggleSidebar(false)}></div>\n        </AnimateShow>\n        <div className={classNames(classes.sidebar, 'layout-column', {[classes.sidebarShow] : menubarLayout.showSidebar})}>\n          <div className={classes.sidebarSearch}>\n            <Input \n              model=\"sidebar.searchString\"\n              value={sidebar.searchString}\n              className=\"dr-input text-ellipsis\" \n              type=\"text\" \n              placeholder=\"Search all projects\"\n            />\n            <MdSearch className={classes.sidebarSearchIcon} size=\"25\"/>\n          </div>\n          <div className=\"flex scroll-box\">\n            {filteredProjects.map((item)=>\n               <SidebarProjectButton item={item} to={linkProject(item)} clickFn={()=>this.props.MenubarLayoutActions.toggleSidebar(false)}/>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({ menubarLayout, projects, sidebar }) {\n  return {\n    sidebar,\n    menubarLayout,\n    projects\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    MenubarLayoutActions: bindActionCreators(MenubarLayoutActions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}