{"version":3,"sources":["app\\renderer\\main\\modules\\Comments\\Comment\\Comment.jsx"],"names":[],"mappings":"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","file":"Comment.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as CommentsActions from 'app/renderer/main/modules/Comments/Comments.actions.js';\nimport * as ModalActions from 'app/renderer/main/modules/Modal/Modal.actions.js';\nimport { actions } from 'react-redux-form';\n\n// Component Core\nimport React from 'react';\nimport moment from 'moment';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './Comment.css';\n\n// Sub Components\nimport UserAvatar from 'app/renderer/main/components/Avatar/UserAvatar/UserAvatar.jsx';\nimport Editor from 'app/renderer/main/modules/Editor/Editor.jsx';\nimport EditorDisplay from 'app/renderer/main/modules/Editor/EditorDisplay.jsx';\nimport ReactionPopup from 'app/renderer/main/modules/Reactions/ReactionPopup.jsx';\nimport Reactions from 'app/renderer/main/modules/Reactions/Reactions.jsx';\nimport PopoverMenu from 'app/renderer/main/components/PopoverMenu/PopoverMenu';\nimport SimpleIconButton from 'app/renderer/main/components/Buttons/SimpleIconButton/SimpleIconButton'\nimport MdMoreHoriz from 'react-icons/md/more-horiz';\n\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// COMPONENT /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nconst onMount = (nextProps, prevProps) => {\n  if(!prevProps || nextProps.commentId !== prevProps.commentId){\n    nextProps.commentsActions.getComment({commentId: nextProps.commentId})\n  }\n}\n\nexport const Component = React.createClass({\n\n  // Mounting\n  componentWillMount() { onMount(this.props) },\n  componentWillReceiveProps(nextProps) { onMount(nextProps, this.props)},\n\n  confirmDelete(){\n    this.props.modalActions.showConfirm({\n      modalConfirm: {\n        functionAlias: 'CommentsActions.deleteComment',\n        functionInputs: {comment: this.props.comment.data}\n      }\n    })\n  },\n  submitReaction(reactionType){\n    this.props.commentsActions.toggleReaction({\n      commentId: this.props.commentId,\n      reactionType\n    })\n  },\n  render() {\n    const { item, comment, entityModel, commentsActions, style } = this.props;\n\n    if(!comment || !comment.data){\n      return null\n    }\n\n    return (\n      <div className={classes.comment + ' layout-row'} style={style}>\n        <div className={classes.commentAvatar}>\n          <UserAvatar picture={comment.data.owner.picture} size=\"33\" shape=\"square\" />\n        </div>\n        <div className={classes.commentBody + ' flex'}>\n          <div className={classes.commentHeader + ' layout-row layout-align-start-center'}>\n            {comment.data.owner.name}<span className={classes.date}> <b className=\"text-interpunct\"></b> {moment(comment.data.timestamp).fromNow()} </span>\n            <div className=\"flex\"></div>\n            <ReactionPopup reactions={comment.data.reactions} preferPlace=\"above\" submitFn={this.submitReaction} />\n            <PopoverMenu preferPlace=\"right\">\n              <SimpleIconButton style={{padding: '0 0 0 5px'}}>\n                <MdMoreHoriz size=\"20px\"/>\n              </SimpleIconButton>\n              <div className=\"PopoverMenu\">\n                {comment.editActive ? null : <a onClick={() => commentsActions.startEdit({commentId: comment.data._id})}>Edit</a> }\n                <a onClick={this.confirmDelete}>Delete</a>\n              </div>\n            </PopoverMenu>\n          </div>\n          <div className={classes.commentContent}>\n          {\n            comment.editActive\n            ?\n            <Editor model={`${entityModel}.data.body`} value={comment.data.body}/>\n            :\n            <EditorDisplay value={comment.data.body}/>\n          }\n          </div>\n          {comment.editActive ?\n            <div className={classes.commentFooter}>\n              <div>\n                <a className=\"link-primary\" onClick={() => commentsActions.finishEdit({commentId: comment.data._id})}>Cancel</a>\n                &nbsp;<b className=\"text-interpunct text-grey-3\"></b>&nbsp;\n                <a className=\"link-primary\" onClick={() => commentsActions.updateComment({comment: comment.data})}>Save</a>\n              </div>\n            </div>\n          : ''}\n          {!comment.editActive && comment.data.reactions && comment.data.reactions.length > 0 ?\n            <div><Reactions reactions={comment.data.reactions} /></div>\n          : ''}\n        </div>\n      </div>\n    )\n  }\n});\n\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CONTAINER /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps({ comments }, {commentId}) {\n  return {\n    comment: comments.data[commentId],\n    entityModel: `comments.data.${commentId}`\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    commentsActions : bindActionCreators(CommentsActions, dispatch),\n    modalActions    : bindActionCreators(ModalActions, dispatch),\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}