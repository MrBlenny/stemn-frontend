'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCompareModes = exports.getCompareIcon = undefined;

var _lodash = require('lodash');

var _index = require('app/renderer/assets/icons/compare/index.js');

var CompareIcons = _interopRequireWildcard(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var compareModeInfo = [// Compare modes and text
{
  value: 'sideBySide',
  text: 'Side By Side'
}, {
  value: 'aboveAndBelow',
  text: 'Above and Below'
}, {
  value: 'onion',
  text: 'Onion Skin'
}, {
  value: 'slider',
  text: 'Slider'
}, {
  value: 'single',
  text: 'None'
}];

var iconMap = {
  sideBySide: CompareIcons.SideBySide,
  aboveAndBelow: CompareIcons.TopBottom,
  onion: CompareIcons.OnionSkin,
  slider: CompareIcons.Slide,
  single: CompareIcons.Single
};

// This table maps the compare modes (above) to the preview mode
var compareModeTable = {
  gerber: [0, 1, 2, 3, 4],
  code: [0, 1, 4],
  autodesk: [0, 1, 2, 3, 4],
  google: [0, 1, 4],
  image: [0, 1, 2, 3, 4],
  pdf: [0, 1, 4],
  pcb: [0, 1, 2, 3, 4],
  gdoc: [0, 1, 4],
  other: [0, 1, 4],
  none: [4]
};

var getCompareIcon = exports.getCompareIcon = function getCompareIcon(compareMode) {
  return iconMap[compareMode] || CompareIcons.SideBySide;
};

var getCompareModes = exports.getCompareModes = function getCompareModes(previewerType1, previewerType2) {
  var compareModes1 = compareModeTable[previewerType1];
  var compareModes2 = compareModeTable[previewerType2];
  var compareModes = compareModes2 ? (0, _lodash.intersection)(compareModes1, compareModes2) : compareModeTable.none;
  return compareModes.map(function (modeNum) {
    return compareModeInfo[modeNum];
  });
};