{"version":3,"sources":["app\\renderer\\main\\components\\Panels\\TogglePanel\\TogglePanel.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAaA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAhBA;;;;;;;;;;;+CAkBe,gBAAM,WAAN,CAAkB;AAC/B,iBAD+B,6BACZ;AACjB,WAAO;AACL,cAAQ;AADH,KAAP;AAGD,GAL8B;AAM/B,QAN+B,kBAMvB,OANuB,EAMd;AACf,SAAK,QAAL,CAAc,EAAE,QAAQ,YAAY,IAAZ,GAAmB,CAAC,KAAK,KAAL,CAAW,MAA/B,GAAwC,OAAlD,EAAd;AACD,GAR8B;AAS/B,QAT+B,oBAStB;AAAA;;AACP,QAAM,aAAa,SAAb,UAAa,GAAM;AACvB,UAAG,MAAK,KAAL,CAAW,MAAd,EAAqB;AACnB,eACE;AAAA;AAAA,YAAK,WAAW,sBAAO,OAAvB;AACG,gBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AADH,SADF;AAKD;AACF,KARD;AASA,WACE;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,WAAW,sBAAO,QAAP,GAAkB,uCAAlC;AACE,gEAAgB,SAAS;AAAA,mBAAI,MAAK,MAAL,CAAY,IAAZ,CAAJ;AAAA,WAAzB,EAAgD,WAAW,0BAAW,sBAAO,UAAlB,sBAAgC,sBAAO,gBAAvC,EAA2D,KAAK,KAAL,CAAW,MAAtE,EAA3D,EAA2I,MAAK,IAAhJ,GADF;AAEE;AAAA;AAAA,YAAK,WAAU,2CAAf;AACE;AAAA;AAAA,cAAK,WAAU,MAAf,EAAsB,SAAS;AAAA,uBAAI,MAAK,MAAL,CAAY,IAAZ,CAAJ;AAAA,eAA/B;AAAuD,iBAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AAAvD,WADF;AAEG,eAAK,KAAL,CAAW,QAAX,CAAoB,CAApB;AAFH;AAFF,OADF;AAQG;AARH,KADF;AAYD;AA/B8B,CAAlB,C","file":"TogglePanel.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["/**************************************************************\n  <TogglePanel>\n    <div className=\"layout-row flex layout-align-start-center\">\n      <div className=\"flex\">Header Content</div>\n    </div>\n    <div>\n      Panel Content\n    </div>\n  </TogglePanel>\n**************************************************************/\n\nimport React from 'react';\n\nimport classNames from 'classnames';\nimport styles from './TogglePanel.css'\n\nimport MdChevronRight from 'react-icons/md/chevron-right';\n\nexport default React.createClass({\n  getInitialState () {\n    return {\n      isOpen: false,\n    }\n  },\n  toggle (toState) {\n    this.setState({ isOpen: toState === null ? !this.state.isOpen : toState })\n  },\n  render() {\n    const getContent = () => {\n      if(this.state.isOpen){\n        return (\n          <div className={styles.content}>\n            {this.props.children[2]}\n          </div>\n        )\n      }\n    }\n    return (\n      <div>\n        <div className={styles.titleBar + ' layout-row layout-align-start-center'}>\n          <MdChevronRight onClick={()=>this.toggle(null)} className={classNames(styles.toggleIcon, {[styles.toggleIconActive] : this.state.isOpen})} size='22'></MdChevronRight>\n          <div className=\"flex layout-row layout-align-start-center\">\n            <div className=\"flex\" onClick={()=>this.toggle(null)}>{this.props.children[0]}</div>\n            {this.props.children[1]}\n          </div>\n        </div>\n        {getContent()}\n      </div>\n    );\n  }\n})\n"]}