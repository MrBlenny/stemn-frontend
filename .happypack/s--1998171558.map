{"version":3,"sources":["app\\renderer\\main\\modules\\Mentions\\TaskMentionModal\\TaskRow\\TaskRow.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAIA;;;;AAEA;;;;AACA;;;;AAGA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAbA;;;AAIA;;AAGA;;;AAIA;;;AAIA;;AAEO,IAAM,6DAAY,gBAAM,WAAN,CAAkB;AAAA;AACzC,QADyC,oBAChC;AAAA,iBAC+D,KAAK,KADpE;AAAA,QACC,IADD,UACC,IADD;AAAA,QACO,WADP,UACO,WADP;AAAA,QACoB,cADpB,UACoB,cADpB;AAAA,QACoC,aADpC,UACoC,aADpC;AAAA,QACmD,OADnD,UACmD,OADnD;;;AAGP,QAAG,CAAC,IAAJ,EAAS;AACP,aAAO;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;AACD,WACE;AAAA;AAAA,QAAK,WAAW,kBAAQ,GAAR,GAAc,uCAA9B;AACE;AAAA;AAAA,UAAK,WAAU,oBAAf,EAAoC,OAAO,EAAC,cAAc,KAAf,EAA3C;AAAmE,aAAK,IAAL,CAAU;AAA7E,OADF;AAEE;AAAA;AAAA;AACG,qBAAW,0BAAW,IAAX,EAAiB,kBAAQ,MAAzB,sBAAmC,kBAAQ,MAA3C,EAAqD,WAAW,QAAQ,QAAxE,EADd;AAEG,iBAAM,kBAFT;AAGG,mBAAS,cAHZ;AAAA;AAAA,OAFF;AAME;AAAA;AAAA;AACG,qBAAW,0BAAW,IAAX,EAAiB,kBAAQ,MAAzB,sBAAmC,kBAAQ,MAA3C,EAAqD,WAAW,QAAQ,OAAxE,EADd;AAEG,iBAAM,iBAFT;AAGG,mBAAS,aAHZ;AAAA;AAAA;AANF,KADF;AAaD;AApBwC,CAAlB,CAAZ,CAAN;;AAuBP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,eAAT,cAAgD;AAAA,MAArB,KAAqB,QAArB,KAAqB;AAAA,MAAV,MAAU,SAAV,MAAU;;AAC9C,SAAO;AACL,UAAM,MAAM,IAAN,CAAW,MAAX,CADD;AAEL,iCAA2B,MAA3B;AAFK,GAAP;AAID;;kBAEc,yBAAQ,eAAR,EAAyB,SAAzB,C","file":"TaskRow.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Component Core\nimport React from 'react';\nimport moment from 'moment';\n// Styles\nimport classNames from 'classnames';\nimport classes from './TaskRow.css';\n\n// Sub Components\nimport Checkbox from 'app/renderer/main/components/Input/Checkbox/Checkbox';\nimport Button from 'app/renderer/main/components/Buttons/Button/Button';\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nexport const Component = React.createClass({\n  render() {\n    const { task, entityModel, toggleComplete, toggleRelated, mention } = this.props;\n\n    if(!task){\n      return <div>Task Loading</div>\n    }\n    return (\n      <div className={classes.row + ' layout-row layout-align-start-center'}>\n        <div className=\"flex text-ellipsis\" style={{marginBottom: '2px'}}>{task.data.name}</div>\n        <Button\n           className={classNames('xs', classes.button, {[classes.active] : mention && mention.complete})}\n           title=\"Mark as Complete\"\n           onClick={toggleComplete}>Complete</Button>\n        <Button\n           className={classNames('xs', classes.button, {[classes.active] : mention && mention.related})}\n           title=\"Mark as related\"\n           onClick={toggleRelated}>Related</Button>\n      </div>\n    )\n  }\n});\n\n//        <div style={{marginRight: '10px'}} title=\"Mark as Complete\">\n//          <Checkbox circle={true} model={`${entityModel}.data.complete`} value={task.data.complete}/>\n//        </div>\n//        <div className={classes.checkbox} title=\"Related Task\">\n//          <Checkbox />\n//        </div>\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({ tasks }, { taskId }) {\n  return {\n    task: tasks.data[taskId],\n    entityModel: `tasks.data[${taskId}]`\n  };\n}\n\nexport default connect(mapStateToProps)(Component);\n"]}