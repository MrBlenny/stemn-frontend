{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\TaskTimeline\\TaskTimelineItem\\TaskTimelineItem.jsx"],"names":[],"mappings":"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","file":"TaskTimelineItem.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Component Core\nimport React from 'react';\nimport moment from 'moment';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './TaskTimelineItem.css';\n\nimport UserAvatar          from 'app/renderer/main/components/Avatar/UserAvatar/UserAvatar.jsx';\nimport Comment             from 'app/renderer/main/modules/Comments/Comment/Comment.jsx';\nimport TaskTimelineWrapper from '../TaskTimelineWrapper/TaskTimelineWrapper.jsx';\nimport TaskLabelDots       from '../../TaskLabelDots/TaskLabelDots.jsx'\nimport { Link }            from 'react-router';\n\n// import TaskTimelinePanel   from '../TaskTimelinePanel/TaskTimelinePanel.jsx'\n\nconst eventTextMap = {\n  uncompleted   : (item, board) => {return <span>re-opened this task</span>},\n  addAsignee    : (item, board) => {return <span>was assigned to this task</span>},\n  removeAsignee : (item, board) => {return <span>was removed from assignees</span>},\n  commit        : (item, board) => {\n    if(item.commits && item.commits[0]){\n      const linkPath = {\n        pathname: `/project/${board.data.project}/feed`,\n        query: {item: item.commits[0]._id}\n      }\n      return <span>referenced this task in commit <Link to={linkPath} className=\"link-primary\">{item.commits[0].summary}</Link></span>\n    }\n    else return null;\n  },\n  completed     : (item, board) => {\n    if(item.commits && item.commits[0]){\n      const linkPath = {\n        pathname: `/project/${board.data.project}/feed`,\n        query: {item: item.commits[0]._id}\n      }\n      return <span>marked this as complete in commit <Link to={linkPath} className=\"link-primary\">{item.commits[0].summary}</Link></span>\n    }\n    else{\n      return <span>marked this as complete</span>\n    }\n  },\n  changedLabels : (item, board) => {\n    return (\n      <span>\n      {item.addedLabels && item.addedLabels.length > 0\n        ? <span>added the&nbsp;<TaskLabelDots labels={item.addedLabels} labelInfo={board.data.labels} tag={true}/>&nbsp;{item.addedLabels.length == 1 ? 'label' : 'labels'}</span>\n        : null\n      }\n      {item.addedLabels && item.removedLabels && item.addedLabels.length > 0 && item.removedLabels.length>0\n        ? <span>&nbsp;and&nbsp;</span> : null\n      }\n      {item.removedLabels && item.removedLabels.length > 0\n        ? <span>removed the&nbsp;<TaskLabelDots labels={item.removedLabels} labelInfo={board.data.labels} tag={true}/>&nbsp;{item.removedLabels.length == 1 ? 'label' : 'labels'}</span>\n        : null\n      }\n    </span>\n  )},\n}\n\nconst getTextEventData = (item, board) => {\n  return eventTextMap[item.event] ? eventTextMap[item.event](item, board) : <span>Unknown Event Type</span>\n};\n\n\nexport default React.createClass({\n  render() {\n    const { item, board } = this.props;\n    // If it is a comment, we use the comment component to display\n    if(item.event == 'comment'){\n      return (\n        <Comment commentId={item.comment}></Comment>\n      )\n    }\n//    if(item.event == 'completed' && item.commits && item.commits[0]){\n//      console.log(item);\n//      const commit = item.commits[0];\n//      return (\n//        <TaskTimelinePanel item={item}>\n//          <h3>{commit.summary}</h3>\n//          <div>{commit.description}</div>\n//        </TaskTimelinePanel>\n//      )\n//    }\n    // Else, we add a text event\n    else{\n      return (\n        <TaskTimelineWrapper style={{marginLeft: '85px'}}>\n          <div className=\"layout-row layout-align-start-center flex\">\n            <div className={classes.avatar}>\n              <UserAvatar picture={item.user.picture} size=\"25\" shape=\"square\"/>\n            </div>\n            <div>\n              <b>{item.user.name}&nbsp;</b><span className=\"text-grey-3\" style={{lineHeight: '1.5em'}}>{getTextEventData(item, board)} - {moment(item.timestamp).fromNow()}</span>\n            </div>\n          </div>\n        </TaskTimelineWrapper>\n      )\n    }\n  }\n});\n"]}