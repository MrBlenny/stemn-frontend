{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\Tasks.jsx"],"names":[],"mappings":"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","file":"Tasks.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as TasksActions from './Tasks.actions.js';\n\n// Component Core\nimport React from 'react';\nimport { filterBoard } from './Tasks.utils.js';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from './Tasks.css';\n\n// Sub Components\nimport { Field } from 'react-redux-form';\nimport TasksFilterMenu from './TasksFilterMenu/TasksFilterMenu.jsx';\nimport TaskList from './TaskList/TaskList.jsx';\nimport Button from 'app/renderer/main/components/Buttons/Button/Button'\nimport MdSearch from 'react-icons/md/search';\nimport PopoverMenu from 'app/renderer/main/components/PopoverMenu/PopoverMenu';\n\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\nconst layouts = [{\n  text: 'Layout: List',\n  value: 'list'\n},{\n  text: 'Layout: Board',\n  value: 'board'\n}];\n\nexport const Component = React.createClass({\n  componentWillMount() {\n    this.props.TasksActions.getBoard({\n      projectId: this.props.projectId\n    })\n  },\n  setLayout (layout) {\n    this.props.TasksActions.changeLayout({\n      layout,\n      boardId: this.props.board.data._id\n    })\n  },\n  render() {\n    const { tasks, board, boardModel, project } = this.props;\n\n    const layout = board && board.layout == 'list' ? 'list' : 'board';\n\n    if(!board || !board.data || !board.data.groups){\n      return null\n    }\n\n\n    return (\n      <div className=\"layout-column flex\">\n        <div className={classes.header + ' layout-row layout-align-start-center'}>\n          <div className={classes.search}>\n            <Field model={`${boardModel}.searchString`}>\n              <input className=\"dr-input text-ellipsis\" type=\"text\" placeholder=\"Search tasks\"/>\n            </Field>\n            <MdSearch size=\"25\"/>\n          </div>\n          <div className=\"flex\"></div>\n          <PopoverMenu preferPlace=\"below\">\n            <Button style={{marginLeft: '10px'}} className=\"white\">Layout</Button>\n            <div className=\"PopoverMenu\">\n              {layouts.map((layoutOpt, index) =>\n               <a key={index}\n                 className={classNames({'active' : layout == layoutOpt.value})}\n                 onClick={()=>this.setLayout(layoutOpt.value)}>\n                 {layoutOpt.text}\n               </a>\n              )}\n            </div>\n          </PopoverMenu>\n          <PopoverMenu preferPlace=\"below\">\n            <Button style={{marginLeft: '10px'}} className=\"primary\">Filter</Button>\n            <TasksFilterMenu model={`${boardModel}.searchString`} value={board.searchString}/>\n          </PopoverMenu>\n        </div>\n        <TaskList className={classes.tasks} board={filterBoard(board, tasks, board.searchString)} layout={layout}/>\n      </div>\n    )\n  }\n});\n\n\n\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({ tasks, projects }, {projectId}) {\n  const projectBoards = tasks.projects && tasks.projects[projectId] ? tasks.projects[projectId].boards : null;\n  const board = projectBoards ? tasks.boards[projectBoards[0]] : {};\n  return {\n    tasks: tasks.data,\n    project: projects[projectId],\n    board: board,\n    boardModel: board && board.data && board.data._id ? `tasks.boards.${board.data._id}` : '',\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    TasksActions: bindActionCreators(TasksActions, dispatch),\n    dispatch\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}