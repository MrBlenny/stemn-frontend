{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\Tasks.actions.js"],"names":[],"mappings":"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","file":"Tasks.actions.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import http                  from 'axios';\nimport getUuid               from '../../../../shared/helpers/getUuid.js';\nimport { actions }           from 'react-redux-form';\nimport { show as showToast } from '../Toasts/Toasts.actions.js';\nimport { showModal, showConfirm } from '../Modal/Modal.actions.js';\nimport { get }               from 'lodash';\n\nexport function newTask({boardId, task}) {\n  return (dispatch, getState) => {\n   const taskDefault = {\n    users: [{\n      _id: getState().auth.user._id,\n      name: getState().auth.user.name,\n      picture: getState().auth.user.picture\n    }]\n  }\n  dispatch({\n    type: 'TASKS/NEW_TASK',\n    payload: http({\n      method: 'POST',\n      url: `/api/v1/boards/${boardId}/tasks`,\n      data: Object.assign({}, taskDefault, task)\n    }),\n    meta: {\n      cacheKey: boardId\n    }\n  })\n }\n}\n\nexport function getBoard({projectId}){\n  return {\n    type: 'TASKS/GET_BOARD',\n    payload: http({\n      method: 'GET',\n      url: `/api/v1/projects/${projectId}/boards`,\n    }),\n    meta: {\n      cacheKey: projectId\n    }\n  }\n}\n\nexport function newEvent({taskId, event}){\n  const eventObject = Object.assign({}, {\n    _id: getUuid(),\n  }, event);\n  return {\n    type: 'TASKS/NEW_EVENT',\n    payload: {\n      event: eventObject,\n      taskId\n    },\n  }\n}\nexport function deleteEvent({taskId, eventId}){\n  return {\n    type: 'TASKS/DELETE_EVENT',\n    payload: {\n      taskId,\n      eventId\n    }\n  }\n}\n\nexport function getEvents({taskId}){\n  return {\n    type: 'TASKS/GET_EVENTS',\n    payload: http({\n      method: 'GET',\n      url: `/api/v1/tasks/${taskId}/events`,\n    }),\n    meta: {\n      cacheKey: taskId\n    }\n  }\n}\n\nexport function updateBoard({board}){\n  return {\n    type: 'TASKS/UPDATE_BOARD',\n    payload: http({\n      method: 'PUT',\n      url: `/api/v1/boards/${board._id}`,\n      data: board\n    }),\n    meta: {\n      cacheKey: board._id\n    }\n  }\n}\n\nexport function getTask({taskId}) {\n  return {\n    type: 'TASKS/GET_TASK',\n    httpPackage: {\n      endpoint: 'api/v1/tasks',\n      url: `/api/v1/tasks`,\n      method: 'GET',\n      params: {\n        'ids' : taskId\n      }\n    },\n    meta: {\n      cacheKey: taskId\n    }\n  }\n}\n\nexport function updateTask({task}) {\n  return {\n    type: 'TASKS/UPDATE_TASK',\n    http: true,\n    throttle: {\n      time: 2000,\n      endpoint:  `TASKS/UPDATE_TASK-${task._id}`\n    },\n    payload: {\n      method: 'PUT',\n      url: `/api/v1/tasks/${task._id}`,\n      data: task\n    },\n    meta: {\n      cacheKey: task._id\n    }\n  }\n}\n\nexport function updateGroup({group}) {\n  return {\n    type: 'TASKS/UPDATE_GROUP',\n    http: true,\n    throttle: {\n      time: 2000,\n      endpoint:  `TASKS/UPDATE_GROUP-${group._id}`\n    },\n    payload: {\n      method: 'PUT',\n      url: `/api/v1/groups/${group._id}`,\n      data: group\n    },\n    meta: {\n      cacheKey: group._id\n    }\n  }\n}\n\nexport function deleteTask({boardId, taskId}) {\n  return {\n    type: 'TASKS/DELETE_TASK',\n    payload: http({\n      method: 'DELETE',\n      url: `/api/v1/tasks/${taskId}`,\n    }),\n    meta: {\n      taskId,\n      boardId\n    }\n  }\n}\n\n\nexport function moveTask({boardId, task, destinationTask, destinationGroup, after, save}) {\n  // To move a task you must have either hoverItem or destinationGroup\n  // destinationGroup is used if the group is empty\n  return (dispatch) => {\n    if(save){\n      dispatch({\n        type: 'TASKS/MOVE_TASK',\n        payload: http({\n          method: 'POST',\n          url: `/api/v1/tasks/move`,\n          data: {\n            board: boardId,\n            task,\n            destinationGroup,\n            destinationTask,\n            after\n          }\n        }),\n      })\n    }\n    else {\n      dispatch({\n        type: 'TASKS/MOVE_TASK',\n        payload: {\n          task,\n          destinationGroup,\n          destinationTask,\n          boardId\n        }\n      })\n    }\n  }\n}\n\nexport function beginDrag({boardId, taskId}) {\n  return {\n    type: 'TASKS/BEGIN_DRAG',\n    payload: {\n      taskId\n    },\n    meta: {\n      cacheKey: boardId\n    }\n  }\n}\n\nexport function endDrag({boardId, taskId}) {\n  return {\n    type: 'TASKS/END_DRAG',\n    payload: {\n      taskId\n    },\n    meta: {\n      cacheKey: boardId\n    }\n  }\n}\n\n\n\nexport function moveGroup({boardId, group, destinationGroup, after, save}) {\n  return (dispatch) => {\n    if(save){\n      dispatch({\n        type: 'TASKS/MOVE_TASK',\n        payload: http({\n          method: 'POST',\n          url: `/api/v1/groups/move`,\n          data: {\n            board: boardId,\n            group,\n            destinationGroup,\n            after\n          }\n        })\n      })\n    }\n    else {\n      dispatch({\n        type: 'TASKS/MOVE_GROUP',\n        payload: {\n          group, destinationGroup, boardId\n        },\n      })\n    }\n  }\n}\n\nexport function toggleComplete({taskId, model}) {\n  return (dispatch, getState) => {\n    const value = !get(getState(), model);\n    dispatch(actions.change(model, value));\n    dispatch(showToast({\n      title: `This task was marked ${value ? 'complete' : 'incomplete'}.`,\n      actions: [{\n        text: 'Undo',\n        action: {\n          functionAlias: 'TasksActions.toggleCompleteUndo',\n          functionInputs: { taskId, model, value }\n        }\n      }]\n    }));\n  };\n}\nexport function toggleCompleteUndo({taskId, model, value}) {\n  return (dispatch, getState) => {\n    dispatch(actions.change(model, !value));\n    setTimeout(()=>{\n      updateTask({task: getState().tasks.data[taskId].data})\n    }, 1)\n  };\n}\n\nexport function newGroup({boardId, group}) {\n  return (dispatch)=>{\n    if(group.name.length > 1){\n      dispatch({\n        type: 'TASKS/NEW_GROUP',\n        payload: http({\n          method: 'POST',\n          url: `/api/v1/groups`,\n          data: {\n            ...group,\n            board: boardId\n          }\n        }),\n        meta: {\n          boardId\n        }\n      })\n    }\n  }\n}\n\nexport function deleteGroupConfirm({boardId, groupId}) {\n  return showConfirm({\n    message: 'Deleting a group is permanent. All tasks which belong to this group will be deleted (even archived tasks).',\n    modalConfirm: {\n      functionAlias: 'TasksActions.deleteGroup',\n      functionInputs: { boardId, groupId }\n    }\n  })\n}\nexport function deleteGroup({boardId, groupId}) {\n  return {\n    type: 'TASKS/DELETE_GROUP',\n    payload: http({\n      method: 'DELETE',\n      url: `/api/v1/boards/${boardId}/groups/${groupId}`,\n    }),\n    meta: {\n      groupId,\n      boardId\n    }\n  }\n}\n\nexport function showLabelEditModal({boardId}) {\n  return (dispatch) => {\n    dispatch(showModal({\n      modalType: 'TASK_LABELS',\n      modalProps: {\n        boardId\n      },\n    }))\n  }\n}\n\nexport function changeLayout({boardId, layout}) {\n  return {\n    type: 'TASKS/CHANGE_LAYOUT',\n    payload: {\n      boardId,\n      layout\n    }\n  }\n}\n"]}