{"version":3,"sources":["app\\renderer\\menubar\\pages\\ProjectPage\\ProjectPage.jsx"],"names":[],"mappings":"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","file":"ProjectPage.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as ChangesActions from 'app/renderer/main/modules/Changes/Changes.actions.js';\nimport * as ProjectsActions from 'app/shared/actions/projects.js';\n\n// Component Core\nimport React from 'react';\nimport { has } from 'lodash';\n// Styles\nimport classNames from 'classnames';\n\n// Sub Components\nimport LoadingOverlay     from 'app/renderer/main/components/Loading/LoadingOverlay/LoadingOverlay.jsx';\nimport CommitChanges      from 'app/renderer/main/modules/Changes/CommitChanges/CommitChanges.jsx';\nimport CommitBox          from 'app/renderer/main/modules/Changes/CommitBox/CommitBox.jsx'\nimport Toolbar            from 'app/renderer/menubar/modules/Toolbar/Toolbar.jsx'\nimport MdOpenInNew from 'react-icons/md/open-in-new';\nimport * as ElectronWindowActions from 'app/shared/electronActions/window.js';\nimport { Link }           from 'react-router';\nimport cloudLocked          from 'app/renderer/assets/images/pure-vectors/cloud-locked.svg';\n\n\nimport * as stringConcat  from 'app/shared/helpers/stringConcat';\n\nexport const Component = React.createClass({\n  onMount(nextProps, prevProps){\n    // If project has changed\n    if(!prevProps || nextProps.projectId != prevProps.projectId){\n      // Set the project to active\n      nextProps.projectsActions.setActiveProject({projectId: nextProps.projectId});\n      // If project is connected\n      if(has(nextProps, 'project.data.remote.connected')){\n        nextProps.changesActions.fetchChanges({projectId: nextProps.projectId})\n      }\n    }\n  },\n  componentWillMount() { this.onMount(this.props) },\n  componentWillReceiveProps(nextProps) { this.onMount(nextProps, this.props)},\n  refresh(){\n    this.props.changesActions.fetchChanges({\n      projectId: this.props.project.data._id\n    })\n  },\n\n  toggleAll(value){\n    return this.props.changesActions.toggleAll({\n      value,\n      projectId: this.props.project.data._id\n    })\n  },\n\n  commitFn(){\n    this.props.changesActions.commit({\n      projectId: this.props.project.data._id,\n      summary: this.props.changes.summary,\n      description: this.props.changes.description\n    })\n  },\n  deselect(){\n    this.props.changesActions.deselect({\n      projectId: this.props.project.data._id\n    })\n  },\n  render() {\n    const { changes, project, changesActions, entityModel, projectId } = this.props;\n\n    const addStoreLink = {\n      pathname: `/project/${projectId}/settings`,\n      state: {meta : {scope: ['main']}}\n    }\n\n    const projectNotConnected = () => {\n      return (\n        <div className=\"layout-column layout-align-center-center flex\">\n          <img src={cloudLocked}/>\n          <div className=\"text-title-5 text-center\">Project not connected to a file store</div>\n          <div className=\"text-title-5 text-center link-primary\" style={{marginTop: '10px'}}>\n            <Link to={addStoreLink}>Add File Store</Link>\n          </div>\n        </div>\n      )\n    }\n\n    const getInnerContent = () => {\n      if(project && project.data.remote.connected){\n        return getChangesAndBox();\n      }\n      else{\n        return projectNotConnected()\n      }\n    }\n\n    const getChangesAndBox = () => {\n      if(changes && changes.data){\n        const commitBoxStyles = (changes.summary && changes.summary.length > 0) ? {\n          height: '200px',\n          borderTop: '1px solid rgba(0, 0, 0, 0.1)',\n          background: 'rgba(0, 0, 0, 0.03)',\n          transition: 'height 0.3s ease'\n        } : {\n          height: '60px',\n          borderTop: '1px solid rgba(0, 0, 0, 0.1)',\n          background: 'rgba(0, 0, 0, 0.03)',\n          transition: 'height 0.3s ease'\n        };\n        return (\n          <div className=\"layout-column flex\">\n            <CommitChanges\n              changes={changes}\n              project={project.data}\n              toggleAll={this.toggleAll}\n              selectedFileChange={changesActions.selectedFileChange}\n              deselect={this.deselect}\n              refresh={this.refresh}/>\n            <div style={commitBoxStyles}>\n              <CommitBox\n                entityModel={entityModel}\n                changes={changes}\n                changesActions={changesActions}\n                commitFn={()=>this.commitFn()}\n                project={project.data}/>\n            </div>\n          </div>\n        )\n      }\n    }\n\n\n    return (\n      <div className=\"layout-column flex\">\n        <Toolbar menu={true}>\n          <div className=\"flex\">{project && project.data && project.data.name ? stringConcat.end(project.data.name, 28) : ''}</div>\n          <MdOpenInNew onClick={()=>ElectronWindowActions.windowMainOpen()} size=\"22\"/>\n        </Toolbar>\n        {getInnerContent()}\n        <LoadingOverlay show={project && project.loading} />\n      </div>\n    )\n  }\n});\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({changes, projects}, {params}) {\n  const project = projects.data[params.stub];\n  return {\n    projectId: params.stub,\n    project: project,\n    changes: changes[params.stub],\n    entityModel: `changes.${params.stub}`,\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changesActions: bindActionCreators(ChangesActions, dispatch),\n    projectsActions: bindActionCreators(ProjectsActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}