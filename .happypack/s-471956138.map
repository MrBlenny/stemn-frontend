{"version":3,"sources":["app\\renderer\\main\\pages\\SettingsPage\\SettingsApplicationPage\\SettingsApplicationPage.jsx"],"names":[],"mappings":"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","file":"SettingsApplicationPage.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as SystemActions from 'app/shared/actions/system';\nimport * as StateActions from 'app/shared/actions/state';\nimport * as ModalActions from 'app/renderer/main/modules/Modal/Modal.actions.js';\nimport * as AutoLaunchActions from 'app/shared/modules/AutoLaunch/AutoLaunch.actions.js';\n\n// Component Core\nimport React from 'react';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from 'app/renderer/main/pages/ProjectPage/ProjectSettingsPage/ProjectSettingsPage.css'\n\n// Sub Components\nimport { Field } from 'react-redux-form';\nimport { Link } from 'react-router';\nimport Toggle from 'app/renderer/main/components/Input/Toggle/Toggle'\nimport ProgressButton from 'app/renderer/main/components/Buttons/ProgressButton/ProgressButton.jsx'\nimport FileSelectInputElectron from 'app/renderer/main/modules/FileSelectInput/FileSelectInputElectron.jsx'\nimport Checkbox from 'app/renderer/main/components/Input/Checkbox/Checkbox';\nimport SimpleTable        from 'app/shared/modules/Tables/SimpleTable/SimpleTable.jsx';\n\n///////////////////////////////// COMPONENT /////////////////////////////////\n\n\n\nconst inputStyles = {\n  textTransform: 'capitalize',\n  padding: '0 10px',\n  height: '100%',\n  background: 'rgba(0, 0, 0, 0.03)',\n  borderRight: '1px solid rgb(234, 234, 234)',\n  minWidth: '80px'\n}\n\nexport const Component = React.createClass({\n  componentDidMount() {\n    this.props.autoLaunchActions.getStatus();\n  },\n  confirmReset() {\n    this.props.modalActions.showConfirm({\n      message: 'This will clear all data and reset the application back to factory settings. This can be useful if some data has been corrupted.',\n      modalConfirm: StateActions.clearState()\n    })\n  },\n  showReleaseModal() {\n    this.props.modalActions.showModal({\n      modalType: 'RELEASE_NOTES'\n    })\n  },\n  render() {\n    const { system, autoLaunch, autoLaunchActions } = this.props;\n    return (\n      <div>\n        <div className={classes.panel}>\n          <h3>Cloud Providers</h3>\n          fsafasfsasf afsaf asfsaaaf asffs saffsa asfsa\n          <p>Set the root folder for Dropbox and Drive.</p>\n          <div style={{marginBottom: '10px'}}>\n            <FileSelectInputElectron\n              title=\"Select Root Dropbox Location\"\n              model=\"system.providerPath.dropbox\"\n              value={system.providerPath.dropbox}>\n              <div className=\"layout-column layout-align-center-center\" style={inputStyles}>Dropbox</div>\n            </FileSelectInputElectron>\n          </div>\n          <div style={{marginBottom: '10px'}}>\n            <FileSelectInputElectron\n              title=\"Select Root Drive Location\"\n              model=\"system.providerPath.drive\"\n              value={system.providerPath.drive}>\n              <div className=\"layout-column layout-align-center-center\" style={inputStyles}>Drive</div>\n            </FileSelectInputElectron>\n          </div>\n        </div>\n        <div className={classes.panel}>\n          <h3>Other options</h3>\n          <div className=\"layout-row layout-align-start-center\">\n            <p className=\"flex\" style={{margin: '10px 10px 10px 0'}}>Start Stemn Desktop on system startup</p>\n            <Toggle changeAction={autoLaunchActions.toggle} value={autoLaunch.status}/>\n          </div>\n          <div className=\"layout-row layout-align-start-center\">\n            <p className=\"flex\" style={{margin: '10px 10px 10px 0'}}>Help improve Stemn by sending usage data</p>\n            <Toggle model=\"system.settings.usageData\" value={system.settings.usageData}/>\n          </div>\n        </div>\n        <div className={classes.panel}>\n          <h3>Application info</h3>\n          <p>Stemn Desktop is currently in alpha. Please report any bugs and they will be fixed ASAP.</p>\n          {system.currentVersion\n          ? <SimpleTable>\n              <tr><td>Stream</td><td>alpha</td></tr>\n              <tr><td>Version</td><td>{system.currentVersion}</td></tr>\n              <tr><td>Release Notes</td><td><a className=\"link-primary\" onClick={this.showReleaseModal}>Click here</a></td></tr>\n            </SimpleTable>\n          : null}\n        </div>\n\n        <div className={classes.panel}>\n          <h3>Reset application</h3>\n          <p>If something goes wrong, please clear all cached data, this will reset the application back to factory settings.</p>\n          <div className=\"layout-row layout-align-end\">\n            <ProgressButton className=\"warn\" onClick={this.confirmReset}>\n              Clear data\n            </ProgressButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\n\n\n///////////////////////////////// CONTAINER /////////////////////////////////\n\nfunction mapStateToProps({users, system, autoLaunch}, {params}) {\n  return {\n    system,\n    autoLaunch\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    systemActions: bindActionCreators(SystemActions, dispatch),\n    stateActions: bindActionCreators(StateActions, dispatch),\n    modalActions: bindActionCreators(ModalActions, dispatch),\n    autoLaunchActions: bindActionCreators(AutoLaunchActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}