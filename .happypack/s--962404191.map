{"version":3,"sources":["app\\renderer\\main\\modules\\Tasks\\TaskList\\TaskListItem\\TaskListItemWrapped.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAM,YAAY;AAChB,QAAM;AADU,CAAlB;AAGA,IAAM,aAAa;AACjB,8CADiB;AAEjB;AAFiB,CAAnB;;AAKA,IAAM,aAAa;AACjB,0CADiB;AAEjB;AAFiB,CAAnB;;0CAKC,0BAAW,UAAU,IAArB,EAA2B,UAA3B,EAAuC;AAAA,SAAY;AAClD,uBAAmB,QAAQ,UAAR;AAD+B,GAAZ;AAAA,CAAvC,C,UAGA,0BAAW,UAAU,IAArB,EAA2B,UAA3B,EAAuC,UAAC,OAAD,EAAU,OAAV;AAAA,SAAuB;AAC7D,uBAAmB,QAAQ,UAAR,EAD0C;AAE7D,wBAAoB,QAAQ,WAAR,EAFyC;AAG7D,gBAAY,QAAQ,UAAR;AAHiD,GAAvB;AAAA,CAAvC,C;;;;;;;;;;;6BAkBU;AAAA,mBACoE,KAAK,KADzE;AAAA,UACC,UADD,UACC,UADD;AAAA,UACa,iBADb,UACa,iBADb;AAAA,UACgC,iBADhC,UACgC,iBADhC;AAAA,UACmD,QADnD,UACmD,QADnD;AAAA,UAC6D,EAD7D,UAC6D,EAD7D;;AAEP,aAAO,kBAAkB,kBACvB;AAAA;AAAA,UAAK,KAAK,EAAV;AACG;AADH,OADuB,CAAlB,CAAP;AAKD;;;;8BAnBM,S,GAAY;AACjB,qBAAmB,kBAAU,IAAV,CAAe,UADjB;AAEjB,qBAAmB,kBAAU,IAAV,CAAe,UAFjB;AAGjB,sBAAoB,kBAAU,IAAV,CAAe,UAHlB;AAIjB,SAAO,kBAAU,MAAV,CAAiB,UAJP;AAKjB,cAAY,kBAAU,IAAV,CAAe,UALV;AAMjB,QAAM,kBAAU,MAAV,CAAiB,UANN;AAOjB,YAAU,kBAAU,IAAV,CAAe,UAPR;AAQjB,aAAW,kBAAU,IAAV,CAAe,UART;AASjB,WAAS,kBAAU,IAAV,CAAe;AATP,C;;;;AAsBrB","file":"TaskListItemWrapped.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { cardHover, cardDrop, beginDrag, endDrag } from './TaskListItem.drag.config.js';\nimport { DragSource, DropTarget } from 'react-dnd';\nconst ItemTypes = {\n  CARD: 'card'\n}\nconst cardSource = {\n  beginDrag,\n  endDrag\n};\n\nconst cardTarget = {\n  hover: cardHover,\n  drop: cardDrop,\n};\n\n@DropTarget(ItemTypes.CARD, cardTarget, connect => ({\n  connectDropTarget: connect.dropTarget()\n}))\n@DragSource(ItemTypes.CARD, cardSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging()\n}))\nexport default class Card extends Component {\n  static propTypes = {\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    isDragging: PropTypes.bool.isRequired,\n    item: PropTypes.string.isRequired,\n    moveCard: PropTypes.func.isRequired,\n    beginDrag: PropTypes.func.isRequired,\n    endDrag: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { isDragging, connectDragSource, connectDropTarget, children, id } = this.props;\n    return connectDragSource(connectDropTarget(\n      <div key={id}>\n        {children}\n      </div>\n    ));\n  }\n}\n\n//style={{transform: 'translate3d(0,0,0)'}}\n"]}