'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Component = undefined;

var _index = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\redbox-react\\lib\\index.js');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-catch-errors\\lib\\index.js');

var _index4 = _interopRequireDefault(_index3);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index5 = require('C:\\Users\\david\\repositories\\stemn-electron-2\\node_modules\\react-transform-hmr\\lib\\index.js');

var _index6 = _interopRequireDefault(_index5);

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _CommentsActions = require('app/renderer/main/modules/Comments/Comments.actions.js');

var CommentsActions = _interopRequireWildcard(_CommentsActions);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Comment = require('./Comment.css');

var _Comment2 = _interopRequireDefault(_Comment);

var _UserAvatar = require('app/renderer/main/components/Avatar/UserAvatar/UserAvatar.jsx');

var _UserAvatar2 = _interopRequireDefault(_UserAvatar);

var _Editor = require('app/renderer/main/modules/Editor/Editor.jsx');

var _Editor2 = _interopRequireDefault(_Editor);

var _EditorDisplay = require('app/renderer/main/modules/Editor/EditorDisplay.jsx');

var _EditorDisplay2 = _interopRequireDefault(_EditorDisplay);

var _Button = require('app/renderer/main/components/Buttons/Button/Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2 = (0, _index6.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Comments/Comment/CommentNew.jsx',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

var _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2 = (0, _index4.default)({
  filename: 'C:/Users/david/repositories/stemn-electron-2/app/renderer/main/modules/Comments/Comment/CommentNew.jsx',
  components: _components,
  locals: [],
  imports: [_react3.default, _index2.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformHmrLibIndexJs2(_CUsersDavidRepositoriesStemnElectron2Node_modulesReactTransformCatchErrorsLibIndexJs2(Component, id), id);
  };
} // Container Core


// Container Actions


// Component Core


// Styles


// Sub Components


/////////////////////////////////////////////////////////////////////////////
///////////////////////////////// COMPONENT /////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

var Component = exports.Component = _wrapComponent('_component')(_react3.default.createClass({
  displayName: 'Component',
  submitNewComment: function submitNewComment() {
    this.props.commentsActions.newComment({
      comment: {
        task: this.props.taskId,
        body: this.props.newComment.body
      }
    });
  },
  render: function render() {
    var _props = this.props;
    var auth = _props.auth;
    var newComment = _props.newComment;
    var entityModel = _props.entityModel;
    var commentsActions = _props.commentsActions;


    return _react3.default.createElement(
      'div',
      { className: _Comment2.default.comment + ' layout-row' },
      _react3.default.createElement(
        'div',
        { className: _Comment2.default.commentAvatar },
        _react3.default.createElement(_UserAvatar2.default, { picture: auth.user.picture, size: '33', shape: 'square' })
      ),
      _react3.default.createElement(
        'div',
        { className: _Comment2.default.commentBody + ' flex' },
        _react3.default.createElement(
          'div',
          { className: _Comment2.default.commentHeader },
          'New Comment'
        ),
        _react3.default.createElement(
          'div',
          { className: _Comment2.default.commentContent },
          _react3.default.createElement(_Editor2.default, { model: entityModel + '.body', value: newComment.body })
        ),
        _react3.default.createElement(
          'div',
          { className: 'layout-row', style: { padding: '0 10px 10px' } },
          _react3.default.createElement('div', { className: 'flex' }),
          _react3.default.createElement(
            _Button2.default,
            { className: 'primary sm',
              loading: newComment.savePending,
              onClick: this.submitNewComment },
            'Comment'
          )
        )
      )
    );
  }
}));

/////////////////////////////////////////////////////////////////////////////
///////////////////////////////// CONTAINER /////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

function mapStateToProps(_ref, _ref2) {
  var comments = _ref.comments;
  var auth = _ref.auth;
  var taskId = _ref2.taskId;

  return {
    auth: auth,
    entityModel: 'comments.tasks.' + taskId + '.newComment',
    newComment: comments.tasks[taskId] ? comments.tasks[taskId].newComment : {}
  };
}

function mapDispatchToProps(dispatch) {
  return {
    commentsActions: (0, _redux.bindActionCreators)(CommentsActions, dispatch)
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Component);