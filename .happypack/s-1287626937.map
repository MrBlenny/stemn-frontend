{"version":3,"sources":["app\\renderer\\main\\pages\\ProjectPage\\ProjectSettingsPage\\ProjectSettingsTeamPage\\ProjectSettingsTeamPage.jsx"],"names":[],"mappings":"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","file":"ProjectSettingsTeamPage.jsx","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["// Container Core\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\n// Container Actions\nimport * as ProjectsActions from 'app/shared/actions/projects.js';\n\n// Component Core\nimport React from 'react';\n\n// Styles\nimport classNames from 'classnames';\nimport classes from '../ProjectSettingsPage.css'\n\n// Sub Components\nimport { Field, actions } from 'react-redux-form';\n\nimport UserSearch from 'app/renderer/main/modules/UserSearch/UserSearch.container.js'\nimport TeamMember from 'app/renderer/main/components/Project/TeamMember/TeamMember.jsx'\nimport ProgressButton from 'app/renderer/main/components/Buttons/ProgressButton/ProgressButton'\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// COMPONENT /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nconst onMount = (nextProps, prevProps) => {\n  if(nextProps.project && nextProps.project.data){\n    if(!prevProps || nextProps.project.data._id !== prevProps.project.data._id){\n      // Init the filestore form model\n      // nextProps.dispatch(actions.load(`${nextProps.entityModel}.formModels.fileStore.remote`, nextProps.project.data.remote))\n    }\n  }\n}\n\nexport const Component = React.createClass({\n\n  // Mounting\n  componentWillMount() { onMount(this.props) },\n  componentWillReceiveProps(nextProps) { onMount(nextProps, this.props)},\n\n  selectFn(selection){\n    if(!this.props.project.data.team.find((item)=>item._id == selection._id)){\n      this.props.ProjectsActions.addTeamMember({\n        projectId: this.props.project.data._id,\n        user: selection\n      })\n    }\n  },\n  changePermissionsFn({role, userId}){\n    this.props.ProjectsActions.changeUserPermissions({\n      role,\n      userId,\n      projectId: this.props.project.data._id,\n    })\n  },\n  removeTeamMemberFn({userId}){\n    this.props.ProjectsActions.removeTeamMember({\n      userId,\n      projectId: this.props.project.data._id,\n    })\n  },\n  saveProject(){\n    this.props.ProjectsActions.saveProject({\n      project: this.props.project.data\n    })\n  },\n  render() {\n    const { entityModel, project, ProjectsActions, dispatch } = this.props;\n    const PageStyles = {\n      padding: '20px 40px'\n    }\n\n    return (\n      <div className={classes.panel}>\n        <h3>Team Members</h3>\n        <p>Invite your collaborators. If you've connected your project with Dropbox or Drive, your team members will be invited to edit.</p>\n        <UserSearch select={this.selectFn} />\n        <br />\n        {project.data.team.map((item) => (\n          <div style={{marginBottom: '15px'}}  key={item._id}>\n            <TeamMember\n              item={item}\n              changePermissionsFn={this.changePermissionsFn}\n              removeTeamMemberFn={this.removeTeamMemberFn}\n            />\n          </div>)\n        )}\n        <br />\n        <div className=\"layout-row layout-align-end\">\n          <ProgressButton\n           className=\"primary\"\n           onClick={this.saveProject}\n           loading={project.savePending}>\n            Update team\n          </ProgressButton>\n        </div>\n      </div>\n    );\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CONTAINER /////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////\n\nfunction mapStateToProps({projects}, otherProps) {\n  return {\n    project: projects.data[otherProps.params.stub],\n    entityModel: `projects.data.${otherProps.params.stub}`\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ProjectsActions: bindActionCreators(ProjectsActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n"]}