{"version":3,"sources":["app\\shared\\store\\configureStore.renderer.js"],"names":[],"mappings":";;;;;kBAYwB,c;;AAZxB;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAAS,cAAT,CAAwB,YAAxB,EAAsC;AACnD,MAAM,aAAY,uBAEhB,uCAFgB,mFAMhB,iEANgB,CAAlB;AAQA,MAAG,QAAQ,GAAR,CAAY,QAAZ,IAAwB,aAA3B,EAA0C;AACvC,eAAW,IAAX,CAAgB,2BAAa;AAC5B,aAAO,MADqB;AAE5B,iBAAW;AAFiB,KAAb,CAAhB;AAIF;;AAED,MAAM,WAAW,CAAC,wCAAmB,UAAnB,CAAD,CAAjB;;AAEA,WAAS,IAAT,CAAc,OAAO,iBAAP,GAA2B,OAAO,iBAAP,EAA3B,GAAwD;AAAA,WAAQ,IAAR;AAAA,GAAtE;AACF;AACA;AACA;AACA;AACA;;;AAGE,MAAM,cAAc,oCAApB;AACA,MAAM,WAAc,gCAAW,QAAX,CAApB;AACA,MAAM,QAAc,wBAAY,WAAZ,EAAyB,YAAzB,EAAuC,QAAvC,CAApB;;AAEA,MAAI,CAAC,QAAQ,GAAR,CAAY,QAAb,IAAyB,OAAO,GAApC,EAAyC;AACvC,WAAO,GAAP,CAAW,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACrC,YAAM,cAAN,CAAqB,QAAQ,aAAR,CAArB;AACD,KAFD;AAGD;;AAED,SAAO,KAAP;AACD;AAhDD","file":"configureStore.renderer.js","sourceRoot":"C:/Users/david/repositories/stemn-electron-2","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\n//import { persistState } from 'redux-devtools';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\nimport createLogger from 'redux-logger';\nimport { hashHistory } from 'react-router';\nimport { routerMiddleware } from 'react-router-redux';\nimport getRootReducerRenderer from '../reducers/rootReducer.renderer.js';\nimport forwardToMain from './middleware/forwardToMain';\nimport forwardToRendererWindow from './middleware/forwardToRendererWindow';\nimport routerFix from './middleware/routerFix';\n\nexport default function configureStore(initialState) {\n  const middleware =[\n    thunk,\n    promise(),\n    routerFix,\n    forwardToMain,\n    forwardToRendererWindow,\n    routerMiddleware(hashHistory),\n  ];\n  if(process.env.NODE_ENV == 'development') {\n     middleware.push(createLogger({\n      level: 'info',\n      collapsed: true,\n    }));\n  }\n\n  const enhanced = [applyMiddleware(...middleware)];\n\n  enhanced.push(window.devToolsExtension ? window.devToolsExtension() : noop => noop);\n//    enhanced.push(persistState(\n//      window.location.href.match(\n//        /[?&]debug_session=([^&]+)\\b/\n//      )\n//    ));\n\n\n  const rootReducer = getRootReducerRenderer();\n  const enhancer    = compose(...enhanced);\n  const store       = createStore(rootReducer, initialState, enhancer);\n\n  if (!process.env.NODE_ENV && module.hot) {\n    module.hot.accept('../reducers', () => {\n      store.replaceReducer(require('../reducers'));\n    });\n  }\n\n  return store;\n}\n"]}